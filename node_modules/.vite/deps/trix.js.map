{
  "version": 3,
  "sources": ["../../trix/src/trix/config/attachments.js", "../../trix/src/trix/config/block_attributes.js", "../../trix/src/trix/config/browser.js", "../../trix/src/trix/config/dompurify.js", "../../trix/src/trix/config/lang.js", "../../trix/src/trix/config/file_size_formatting.js", "../../trix/src/trix/constants.js", "../../trix/src/trix/core/helpers/extend.js", "../../trix/src/trix/core/helpers/dom.js", "../../trix/src/trix/config/input.js", "../../trix/src/trix/config/key_names.js", "../../trix/src/trix/config/parser.js", "../../trix/src/trix/config/text_attributes.js", "../../trix/src/trix/config/toolbar.js", "../../trix/src/trix/config/undo.js", "../../trix/src/trix/config/css.js", "../../trix/src/trix/core/basic_object.js", "../../trix/src/trix/core/utilities/utf16_string.js", "../../trix/src/trix/core/object.js", "../../trix/src/trix/core/helpers/arrays.js", "../../trix/src/trix/core/helpers/bidi.js", "../../trix/src/trix/core/helpers/config.js", "../../trix/src/trix/core/helpers/custom_elements.js", "../../trix/src/trix/core/helpers/events.js", "../../trix/src/trix/core/helpers/functions.js", "../../trix/src/trix/core/helpers/objects.js", "../../trix/src/trix/core/helpers/ranges.js", "../../trix/src/trix/observers/selection_change_observer.js", "../../trix/src/trix/core/helpers/strings.js", "../../trix/src/trix/core/collections/hash.js", "../../trix/src/trix/core/collections/object_group.js", "../../trix/src/trix/core/collections/object_map.js", "../../trix/src/trix/core/collections/element_store.js", "../../trix/src/trix/core/utilities/operation.js", "../../trix/src/trix/views/object_view.js", "../../trix/src/trix/models/html_sanitizer.js", "../../trix/src/trix/views/attachment_view.js", "../../trix/src/trix/views/previewable_attachment_view.js", "../../trix/src/trix/views/piece_view.js", "../../trix/src/trix/views/text_view.js", "../../trix/src/trix/views/block_view.js", "../../trix/src/trix/views/document_view.js", "../../trix/src/trix/models/piece.js", "../../trix/src/trix/operations/image_preload_operation.js", "../../trix/src/trix/models/attachment.js", "../../trix/src/trix/models/attachment_piece.js", "../../trix/src/trix/models/string_piece.js", "../../trix/src/trix/models/splittable_list.js", "../../trix/src/trix/models/text.js", "../../trix/src/trix/models/block.js", "../../trix/src/trix/models/document.js", "../../trix/src/trix/models/html_parser.js", "../../trix/src/trix/core/serialization.js", "../../trix/src/trix/models/managed_attachment.js", "../../trix/src/trix/models/attachment_manager.js", "../../trix/src/trix/models/line_break_insertion.js", "../../trix/src/trix/models/composition.js", "../../trix/src/trix/models/undo_manager.js", "../../trix/src/trix/filters/filter.js", "../../trix/src/trix/filters/attachment_gallery_filter.js", "../../trix/src/trix/models/editor.js", "../../trix/src/trix/models/location_mapper.js", "../../trix/src/trix/models/point_mapper.js", "../../trix/src/trix/models/selection_manager.js", "../../trix/src/trix/controllers/attachment_editor_controller.js", "../../trix/src/trix/controllers/composition_controller.js", "../../trix/src/trix/controllers/controller.js", "../../trix/src/trix/observers/mutation_observer.js", "../../trix/src/trix/operations/file_verification_operation.js", "../../trix/src/trix/models/flaky_android_keyboard_detector.js", "../../trix/src/trix/controllers/input_controller.js", "../../trix/src/trix/controllers/level_0_input_controller.js", "../../trix/src/trix/controllers/level_2_input_controller.js", "../../trix/src/trix/controllers/toolbar_controller.js", "../../trix/src/trix/controllers/editor_controller.js", "../../trix/src/trix/elements/trix_toolbar_element.js", "../../trix/src/trix/elements/trix_editor_element.js", "../../trix/src/trix/trix.js"],
  "sourcesContent": ["export const attachmentSelector = \"[data-trix-attachment]\"\n\nconst attachments = {\n  preview: {\n    presentation: \"gallery\",\n    caption: {\n      name: true,\n      size: true,\n    },\n  },\n  file: {\n    caption: {\n      size: true,\n    },\n  },\n}\nexport default attachments\n", "const attributes = {\n  default: {\n    tagName: \"div\",\n    parse: false,\n  },\n  quote: {\n    tagName: \"blockquote\",\n    nestable: true,\n  },\n  heading1: {\n    tagName: \"h1\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  code: {\n    tagName: \"pre\",\n    terminal: true,\n    htmlAttributes: [ \"language\" ],\n    text: {\n      plaintext: true,\n    },\n  },\n  bulletList: {\n    tagName: \"ul\",\n    parse: false,\n  },\n  bullet: {\n    tagName: \"li\",\n    listAttribute: \"bulletList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  numberList: {\n    tagName: \"ol\",\n    parse: false,\n  },\n  number: {\n    tagName: \"li\",\n    listAttribute: \"numberList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  attachmentGallery: {\n    tagName: \"div\",\n    exclusive: true,\n    terminal: true,\n    parse: false,\n    group: false,\n  },\n}\n\nconst tagName = (element) => element?.tagName?.toLowerCase()\n\nexport default attributes\n", "const androidVersionMatch = navigator.userAgent.match(/android\\s([0-9]+.*Chrome)/i)\nconst androidVersion = androidVersionMatch && parseInt(androidVersionMatch[1])\n\nexport default {\n  // Android emits composition events when moving the cursor through existing text\n  // Introduced in Chrome 65: https://bugs.chromium.org/p/chromium/issues/detail?id=764439#c9\n  composesExistingText: /Android.*Chrome/.test(navigator.userAgent),\n\n  // Android 13, especially on Samsung keyboards, emits extra compositionend and beforeinput events\n  // that can make the input handler lose the current selection or enter an infinite input -> render -> input\n  // loop.\n  recentAndroid: androidVersion && androidVersion > 12,\n  samsungAndroid: androidVersion && navigator.userAgent.match(/Android.*SM-/),\n\n  // IE 11 activates resizing handles on editable elements that have \"layout\"\n  forcesObjectResizing: /Trident.*rv:11/.test(navigator.userAgent),\n  // https://www.w3.org/TR/input-events-1/ + https://www.w3.org/TR/input-events-2/\n  supportsInputEvents: typeof InputEvent !== \"undefined\" &&\n    [ \"data\", \"getTargetRanges\", \"inputType\" ].every(prop => prop in InputEvent.prototype),\n}\n", "export default {\n  ADD_ATTR: [ \"language\" ],\n  SAFE_FOR_XML: false,\n  RETURN_DOM: true\n}\n", "export default {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption…\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL…\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\",\n}\n", "/* eslint-disable\n    no-case-declarations,\n*/\nimport lang from \"trix/config/lang\"\n\nconst sizes = [ lang.bytes, lang.KB, lang.MB, lang.GB, lang.TB, lang.PB ]\n\nexport default {\n  prefix: \"IEC\",\n  precision: 2,\n\n  formatter(number) {\n    switch (number) {\n      case 0:\n        return `0 ${lang.bytes}`\n      case 1:\n        return `1 ${lang.byte}`\n      default:\n        let base\n\n        if (this.prefix === \"SI\") {\n          base = 1000\n        } else if (this.prefix === \"IEC\") {\n          base = 1024\n        }\n\n        const exp = Math.floor(Math.log(number) / Math.log(base))\n        const humanSize = number / Math.pow(base, exp)\n        const string = humanSize.toFixed(this.precision)\n        const withoutInsignificantZeros = string.replace(/0*$/, \"\").replace(/\\.$/, \"\")\n        return `${withoutInsignificantZeros} ${sizes[exp]}`\n    }\n  },\n}\n", "export const ZERO_WIDTH_SPACE = \"\\uFEFF\"\nexport const NON_BREAKING_SPACE = \"\\u00A0\"\nexport const OBJECT_REPLACEMENT_CHARACTER = \"\\uFFFC\"\n", "export const extend = function(properties) {\n  for (const key in properties) {\n    const value = properties[key]\n    this[key] = value\n  }\n  return this\n}\n", "import blockAttributes from \"trix/config/block_attributes\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { extend } from \"./extend\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nconst html = document.documentElement\nconst match = html.matches\n\nexport const handleEvent = function(eventName, { onElement, matchingSelector, withCallback, inPhase, preventDefault, times } = {}) {\n  const element = onElement ? onElement : html\n  const selector = matchingSelector\n  const useCapture = inPhase === \"capturing\"\n\n  const handler = function(event) {\n    if (times != null && --times === 0) {\n      handler.destroy()\n    }\n    const target = findClosestElementFromNode(event.target, { matchingSelector: selector })\n    if (target != null) {\n      withCallback?.call(target, event, target)\n      if (preventDefault) {\n        event.preventDefault()\n      }\n    }\n  }\n\n  handler.destroy = () => element.removeEventListener(eventName, handler, useCapture)\n\n  element.addEventListener(eventName, handler, useCapture)\n  return handler\n}\n\nexport const handleEventOnce = function(eventName, options = {}) {\n  options.times = 1\n  return handleEvent(eventName, options)\n}\n\nexport const triggerEvent = function(eventName, { onElement, bubbles, cancelable, attributes } = {}) {\n  const element = onElement != null ? onElement : html\n  bubbles = bubbles !== false\n  cancelable = cancelable !== false\n\n  const event = document.createEvent(\"Events\")\n  event.initEvent(eventName, bubbles, cancelable)\n  if (attributes != null) {\n    extend.call(event, attributes)\n  }\n  return element.dispatchEvent(event)\n}\n\nexport const elementMatchesSelector = function(element, selector) {\n  if (element?.nodeType === 1) {\n    return match.call(element, selector)\n  }\n}\n\nexport const findClosestElementFromNode = function(node, { matchingSelector, untilNode } = {}) {\n  while (node && node.nodeType !== Node.ELEMENT_NODE) {\n    node = node.parentNode\n  }\n  if (node == null) {\n    return\n  }\n\n  if (matchingSelector != null) {\n    if (node.closest && untilNode == null) {\n      return node.closest(matchingSelector)\n    } else {\n      while (node && node !== untilNode) {\n        if (elementMatchesSelector(node, matchingSelector)) {\n          return node\n        }\n        node = node.parentNode\n      }\n    }\n  } else {\n    return node\n  }\n}\n\nexport const findInnerElement = function(element) {\n  while (element?.firstElementChild) {\n    element = element.firstElementChild\n  }\n  return element\n}\n\nexport const innerElementIsActive = (element) =>\n  document.activeElement !== element && elementContainsNode(element, document.activeElement)\n\nexport const elementContainsNode = function(element, node) {\n  if (!element || !node) {\n    return\n  }\n  while (node) {\n    if (node === element) {\n      return true\n    }\n    node = node.parentNode\n  }\n}\n\nexport const findNodeFromContainerAndOffset = function(container, offset) {\n  if (!container) {\n    return\n  }\n  if (container.nodeType === Node.TEXT_NODE) {\n    return container\n  } else if (offset === 0) {\n    return container.firstChild != null ? container.firstChild : container\n  } else {\n    return container.childNodes.item(offset - 1)\n  }\n}\n\nexport const findElementFromContainerAndOffset = function(container, offset) {\n  const node = findNodeFromContainerAndOffset(container, offset)\n  return findClosestElementFromNode(node)\n}\n\nexport const findChildIndexOfNode = function(node) {\n  if (!node?.parentNode) {\n    return\n  }\n  let childIndex = 0\n  node = node.previousSibling\n  while (node) {\n    childIndex++\n    node = node.previousSibling\n  }\n  return childIndex\n}\n\nexport const removeNode = (node) => node?.parentNode?.removeChild(node)\n\nexport const walkTree = function(tree, { onlyNodesOfType, usingFilter, expandEntityReferences } = {}) {\n  const whatToShow = (() => {\n    switch (onlyNodesOfType) {\n      case \"element\":\n        return NodeFilter.SHOW_ELEMENT\n      case \"text\":\n        return NodeFilter.SHOW_TEXT\n      case \"comment\":\n        return NodeFilter.SHOW_COMMENT\n      default:\n        return NodeFilter.SHOW_ALL\n    }\n  })()\n\n  return document.createTreeWalker(\n    tree,\n    whatToShow,\n    usingFilter != null ? usingFilter : null,\n    expandEntityReferences === true\n  )\n}\n\nexport const tagName = (element) => element?.tagName?.toLowerCase()\n\nexport const makeElement = function(tag, options = {}) {\n  let key, value\n  if (typeof tag === \"object\") {\n    options = tag\n    tag = options.tagName\n  } else {\n    options = { attributes: options }\n  }\n\n  const element = document.createElement(tag)\n\n  if (options.editable != null) {\n    if (options.attributes == null) {\n      options.attributes = {}\n    }\n    options.attributes.contenteditable = options.editable\n  }\n\n  if (options.attributes) {\n    for (key in options.attributes) {\n      value = options.attributes[key]\n      element.setAttribute(key, value)\n    }\n  }\n\n  if (options.style) {\n    for (key in options.style) {\n      value = options.style[key]\n      element.style[key] = value\n    }\n  }\n\n  if (options.data) {\n    for (key in options.data) {\n      value = options.data[key]\n      element.dataset[key] = value\n    }\n  }\n\n  if (options.className) {\n    options.className.split(\" \").forEach((className) => {\n      element.classList.add(className)\n    })\n  }\n\n  if (options.textContent) {\n    element.textContent = options.textContent\n  }\n\n  if (options.childNodes) {\n    [].concat(options.childNodes).forEach((childNode) => {\n      element.appendChild(childNode)\n    })\n  }\n\n  return element\n}\n\nlet blockTagNames = undefined\n\nexport const getBlockTagNames = function() {\n  if (blockTagNames != null) {\n    return blockTagNames\n  }\n\n  blockTagNames = []\n  for (const key in blockAttributes) {\n    const attributes = blockAttributes[key]\n    if (attributes.tagName) {\n      blockTagNames.push(attributes.tagName)\n    }\n  }\n\n  return blockTagNames\n}\n\nexport const nodeIsBlockContainer = (node) => nodeIsBlockStartComment(node?.firstChild)\n\nexport const nodeProbablyIsBlockContainer = function(node) {\n  return getBlockTagNames().includes(tagName(node)) && !getBlockTagNames().includes(tagName(node.firstChild))\n}\n\nexport const nodeIsBlockStart = function(node, { strict } = { strict: true }) {\n  if (strict) {\n    return nodeIsBlockStartComment(node)\n  } else {\n    return (\n      nodeIsBlockStartComment(node) || !nodeIsBlockStartComment(node.firstChild) && nodeProbablyIsBlockContainer(node)\n    )\n  }\n}\n\nexport const nodeIsBlockStartComment = (node) => nodeIsCommentNode(node) && node?.data === \"block\"\n\nexport const nodeIsCommentNode = (node) => node?.nodeType === Node.COMMENT_NODE\n\nexport const nodeIsCursorTarget = function(node, { name } = {}) {\n  if (!node) {\n    return\n  }\n  if (nodeIsTextNode(node)) {\n    if (node.data === ZERO_WIDTH_SPACE) {\n      if (name) {\n        return node.parentNode.dataset.trixCursorTarget === name\n      } else {\n        return true\n      }\n    }\n  } else {\n    return nodeIsCursorTarget(node.firstChild)\n  }\n}\n\nexport const nodeIsAttachmentElement = (node) => elementMatchesSelector(node, attachmentSelector)\n\nexport const nodeIsEmptyTextNode = (node) => nodeIsTextNode(node) && node?.data === \"\"\n\nexport const nodeIsTextNode = (node) => node?.nodeType === Node.TEXT_NODE\n", "import browser from \"trix/config/browser\"\nimport { makeElement, removeNode } from \"trix/core/helpers/dom\"\n\nconst input = {\n  level2Enabled: true,\n\n  getLevel() {\n    if (this.level2Enabled && browser.supportsInputEvents) {\n      return 2\n    } else {\n      return 0\n    }\n  },\n  pickFiles(callback) {\n    const input = makeElement(\"input\", { type: \"file\", multiple: true, hidden: true, id: this.fileInputId })\n\n    input.addEventListener(\"change\", () => {\n      callback(input.files)\n      removeNode(input)\n    })\n\n    removeNode(document.getElementById(this.fileInputId))\n    document.body.appendChild(input)\n    input.click()\n  }\n}\n\nexport default input\n", "export default {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"return\",\n  27: \"escape\",\n  37: \"left\",\n  39: \"right\",\n  46: \"delete\",\n  68: \"d\",\n  72: \"h\",\n  79: \"o\",\n}\n", "export default {\n  removeBlankTableCells: false,\n  tableCellSeparator: \" | \",\n  tableRowSeparator: \"\\n\",\n}\n", "import { attachmentSelector } from \"trix/config/attachments\"\n\nexport default {\n  bold: {\n    tagName: \"strong\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontWeight === \"bold\" || style.fontWeight >= 600\n    },\n  },\n  italic: {\n    tagName: \"em\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"italic\"\n    },\n  },\n  href: {\n    groupTagName: \"a\",\n    parser(element) {\n      const matchingSelector = `a:not(${attachmentSelector})`\n      const link = element.closest(matchingSelector)\n      if (link) {\n        return link.getAttribute(\"href\")\n      }\n    },\n  },\n  strike: {\n    tagName: \"del\",\n    inheritable: true,\n  },\n  frozen: {\n    style: { backgroundColor: \"highlight\" },\n  },\n}\n", "import lang from \"trix/config/lang\"\n\nexport default {\n  getDefaultHTML() {\n    return `<div class=\"trix-button-row\">\n      <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n      </span>\n\n      <span class=\"trix-button-group-spacer\"></span>\n\n      <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"trix-dialogs\" data-trix-dialogs>\n      <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" data-trix-validate-href required data-trix-input>\n          <div class=\"trix-button-group\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n  },\n}\n", "const undo = { interval: 5000 }\nexport default undo\n", "export default {\n  attachment: \"attachment\",\n  attachmentCaption: \"attachment__caption\",\n  attachmentCaptionEditor: \"attachment__caption-editor\",\n  attachmentMetadata: \"attachment__metadata\",\n  attachmentMetadataContainer: \"attachment__metadata-container\",\n  attachmentName: \"attachment__name\",\n  attachmentProgress: \"attachment__progress\",\n  attachmentSize: \"attachment__size\",\n  attachmentToolbar: \"attachment__toolbar\",\n  attachmentGallery: \"attachment-gallery\",\n}\n", "export default class BasicObject {\n  static proxyMethod(expression) {\n    const { name, toMethod, toProperty, optional } = parseProxyMethodExpression(expression)\n\n    this.prototype[name] = function() {\n      let subject\n      let object\n\n      if (toMethod) {\n        if (optional) {\n          object = this[toMethod]?.()\n        } else {\n          object = this[toMethod]()\n        }\n      } else if (toProperty) {\n        object = this[toProperty]\n      }\n\n      if (optional) {\n        subject = object?.[name]\n        if (subject) {\n          return apply.call(subject, object, arguments)\n        }\n      } else {\n        subject = object[name]\n        return apply.call(subject, object, arguments)\n      }\n    }\n  }\n}\n\nconst parseProxyMethodExpression = function(expression) {\n  const match = expression.match(proxyMethodExpressionPattern)\n  if (!match) {\n    throw new Error(`can't parse @proxyMethod expression: ${expression}`)\n  }\n\n  const args = { name: match[4] }\n\n  if (match[2] != null) {\n    args.toMethod = match[1]\n  } else {\n    args.toProperty = match[1]\n  }\n\n  if (match[3] != null) {\n    args.optional = true\n  }\n\n  return args\n}\n\nconst { apply } = Function.prototype\n\nconst proxyMethodExpressionPattern = new RegExp(\"\\\n^\\\n(.+?)\\\n(\\\\(\\\\))?\\\n(\\\\?)?\\\n\\\\.\\\n(.+?)\\\n$\\\n\")\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class UTF16String extends BasicObject {\n  static box(value = \"\") {\n    if (value instanceof this) {\n      return value\n    } else {\n      return this.fromUCS2String(value?.toString())\n    }\n  }\n\n  static fromUCS2String(ucs2String) {\n    return new this(ucs2String, ucs2decode(ucs2String))\n  }\n\n  static fromCodepoints(codepoints) {\n    return new this(ucs2encode(codepoints), codepoints)\n  }\n\n  constructor(ucs2String, codepoints) {\n    super(...arguments)\n    this.ucs2String = ucs2String\n    this.codepoints = codepoints\n    this.length = this.codepoints.length\n    this.ucs2Length = this.ucs2String.length\n  }\n\n  offsetToUCS2Offset(offset) {\n    return ucs2encode(this.codepoints.slice(0, Math.max(0, offset))).length\n  }\n\n  offsetFromUCS2Offset(ucs2Offset) {\n    return ucs2decode(this.ucs2String.slice(0, Math.max(0, ucs2Offset))).length\n  }\n\n  slice() {\n    return this.constructor.fromCodepoints(this.codepoints.slice(...arguments))\n  }\n\n  charAt(offset) {\n    return this.slice(offset, offset + 1)\n  }\n\n  isEqualTo(value) {\n    return this.constructor.box(value).ucs2String === this.ucs2String\n  }\n\n  toJSON() {\n    return this.ucs2String\n  }\n\n  getCacheKey() {\n    return this.ucs2String\n  }\n\n  toString() {\n    return this.ucs2String\n  }\n}\n\nconst hasArrayFrom = Array.from?.(\"\\ud83d\\udc7c\").length === 1\nconst hasStringCodePointAt = \" \".codePointAt?.(0) != null\nconst hasStringFromCodePoint = String.fromCodePoint?.(32, 128124) === \" \\ud83d\\udc7c\"\n\n// UCS-2 conversion helpers ported from Mathias Bynens' Punycode.js:\n// https://github.com/bestiejs/punycode.js#punycodeucs2\n\nlet ucs2decode, ucs2encode\n\n// Creates an array containing the numeric code points of each Unicode\n// character in the string. While JavaScript uses UCS-2 internally,\n// this function will convert a pair of surrogate halves (each of which\n// UCS-2 exposes as separate characters) into a single code point,\n// matching UTF-16.\nif (hasArrayFrom && hasStringCodePointAt) {\n  ucs2decode = (string) => Array.from(string).map((char) => char.codePointAt(0))\n} else {\n  ucs2decode = function(string) {\n    const output = []\n    let counter = 0\n    const { length } = string\n\n    while (counter < length) {\n      let value = string.charCodeAt(counter++)\n      if (0xd800 <= value && value <= 0xdbff && counter < length) {\n        // high surrogate, and there is a next character\n        const extra = string.charCodeAt(counter++)\n        if ((extra & 0xfc00) === 0xdc00) {\n          // low surrogate\n          value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000\n        } else {\n          // unmatched surrogate; only append this code unit, in case the\n          // next code unit is the high surrogate of a surrogate pair\n          counter--\n        }\n      }\n      output.push(value)\n    }\n\n    return output\n  }\n}\n\n// Creates a string based on an array of numeric code points.\nif (hasStringFromCodePoint) {\n  ucs2encode = (array) => String.fromCodePoint(...Array.from(array || []))\n} else {\n  ucs2encode = function(array) {\n    const characters = (() => {\n      const result = []\n\n      Array.from(array).forEach((value) => {\n        let output = \"\"\n        if (value > 0xffff) {\n          value -= 0x10000\n          output += String.fromCharCode(value >>> 10 & 0x3ff | 0xd800)\n          value = 0xdc00 | value & 0x3ff\n        }\n        result.push(output + String.fromCharCode(value))\n      })\n\n      return result\n    })()\n\n    return characters.join(\"\")\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nlet id = 0\n\nexport default class TrixObject extends BasicObject {\n  static fromJSONString(jsonString) {\n    return this.fromJSON(JSON.parse(jsonString))\n  }\n\n  constructor() {\n    super(...arguments)\n    this.id = ++id\n  }\n\n  hasSameConstructorAs(object) {\n    return this.constructor === object?.constructor\n  }\n\n  isEqualTo(object) {\n    return this === object\n  }\n\n  inspect() {\n    const parts = []\n    const contents = this.contentsForInspection() || {}\n\n    for (const key in contents) {\n      const value = contents[key]\n      parts.push(`${key}=${value}`)\n    }\n\n    return `#<${this.constructor.name}:${this.id}${parts.length ? ` ${parts.join(\", \")}` : \"\"}>`\n  }\n\n  contentsForInspection() {}\n\n  toJSONString() {\n    return JSON.stringify(this)\n  }\n\n  toUTF16String() {\n    return UTF16String.box(this)\n  }\n\n  getCacheKey() {\n    return this.id.toString()\n  }\n}\n", "/* eslint-disable\n    id-length,\n*/\nexport const arraysAreEqual = function(a = [], b = []) {\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let index = 0; index < a.length; index++) {\n    const value = a[index]\n    if (value !== b[index]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const arrayStartsWith = (a = [], b = []) => arraysAreEqual(a.slice(0, b.length), b)\n\nexport const spliceArray = function(array, ...args) {\n  const result = array.slice(0)\n  result.splice(...args)\n  return result\n}\n\nexport const summarizeArrayChange = function(oldArray = [], newArray = []) {\n  const added = []\n  const removed = []\n\n  const existingValues = new Set()\n\n  oldArray.forEach((value) => {\n    existingValues.add(value)\n  })\n\n  const currentValues = new Set()\n\n  newArray.forEach((value) => {\n    currentValues.add(value)\n    if (!existingValues.has(value)) {\n      added.push(value)\n    }\n  })\n\n  oldArray.forEach((value) => {\n    if (!currentValues.has(value)) {\n      removed.push(value)\n    }\n  })\n\n  return { added, removed }\n}\n", "import { makeElement } from \"trix/core/helpers/dom\"\n\n// https://github.com/mathiasbynens/unicode-2.1.8/blob/master/Bidi_Class/Right_To_Left/regex.js\nconst RTL_PATTERN =\n  /[\\u05BE\\u05C0\\u05C3\\u05D0-\\u05EA\\u05F0-\\u05F4\\u061B\\u061F\\u0621-\\u063A\\u0640-\\u064A\\u066D\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D5\\u06E5\\u06E6\\u200F\\u202B\\u202E\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC]/\n\nexport const getDirection = (function() {\n  const input = makeElement(\"input\", { dir: \"auto\", name: \"x\", dirName: \"x.dir\" })\n  const textArea = makeElement(\"textarea\", { dir: \"auto\", name: \"y\", dirName: \"y.dir\" })\n  const form = makeElement(\"form\")\n  form.appendChild(input)\n  form.appendChild(textArea)\n\n  const supportsDirName = (function() {\n    try {\n      return new FormData(form).has(textArea.dirName)\n    } catch (error) {\n      return false\n    }\n  })()\n\n  const supportsDirSelector = (function() {\n    try {\n      return input.matches(\":dir(ltr),:dir(rtl)\")\n    } catch (error) {\n      return false\n    }\n  })()\n\n  if (supportsDirName) {\n    return function(string) {\n      textArea.value = string\n      return new FormData(form).get(textArea.dirName)\n    }\n  } else if (supportsDirSelector) {\n    return function(string) {\n      input.value = string\n      if (input.matches(\":dir(rtl)\")) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  } else {\n    return function(string) {\n      const char = string.trim().charAt(0)\n      if (RTL_PATTERN.test(char)) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  }\n})()\n", "import * as config from \"trix/config\"\n\nlet allAttributeNames = null\nlet blockAttributeNames = null\nlet textAttributeNames = null\nlet listAttributeNames = null\n\nexport const getAllAttributeNames = () => {\n  if (!allAttributeNames) {\n    allAttributeNames = getTextAttributeNames().concat(getBlockAttributeNames())\n  }\n  return allAttributeNames\n}\n\nexport const getBlockConfig = (attributeName) => config.blockAttributes[attributeName]\n\nexport const getBlockAttributeNames = () => {\n  if (!blockAttributeNames) {\n    blockAttributeNames = Object.keys(config.blockAttributes)\n  }\n  return blockAttributeNames\n}\n\nexport const getTextConfig = (attributeName) => config.textAttributes[attributeName]\n\nexport const getTextAttributeNames = () => {\n  if (!textAttributeNames) {\n    textAttributeNames = Object.keys(config.textAttributes)\n  }\n  return textAttributeNames\n}\n\nexport const getListAttributeNames = () => {\n  if (!listAttributeNames) {\n    listAttributeNames = []\n    for (const key in config.blockAttributes) {\n      const { listAttribute } = config.blockAttributes[key]\n      if (listAttribute != null) {\n        listAttributeNames.push(listAttribute)\n      }\n    }\n  }\n  return listAttributeNames\n}\n", "/* eslint-disable\n*/\nexport const installDefaultCSSForTagName = function(tagName, defaultCSS) {\n  const styleElement = insertStyleElementForTagName(tagName)\n  styleElement.textContent = defaultCSS.replace(/%t/g, tagName)\n}\n\nconst insertStyleElementForTagName = function(tagName) {\n  const element = document.createElement(\"style\")\n  element.setAttribute(\"type\", \"text/css\")\n  element.setAttribute(\"data-tag-name\", tagName.toLowerCase())\n  const nonce = getCSPNonce()\n  if (nonce) {\n    element.setAttribute(\"nonce\", nonce)\n  }\n  document.head.insertBefore(element, document.head.firstChild)\n  return element\n}\n\nconst getCSPNonce = function() {\n  const element = getMetaElement(\"trix-csp-nonce\") || getMetaElement(\"csp-nonce\")\n  if (element) {\n    const { nonce, content } = element\n    return nonce == \"\" ? content : nonce\n  }\n}\n\nconst getMetaElement = (name) => document.head.querySelector(`meta[name=${name}]`)\n", "const testTransferData = { \"application/x-trix-feature-detection\": \"test\" }\n\nexport const dataTransferIsPlainText = function(dataTransfer) {\n  const text = dataTransfer.getData(\"text/plain\")\n  const html = dataTransfer.getData(\"text/html\")\n\n  if (text && html) {\n    const { body } = new DOMParser().parseFromString(html, \"text/html\")\n    if (body.textContent === text) {\n      return !body.querySelector(\"*\")\n    }\n  } else {\n    return text?.length\n  }\n}\n\nexport const dataTransferIsMsOfficePaste = ({ dataTransfer }) => {\n  return dataTransfer.types.includes(\"Files\") &&\n    dataTransfer.types.includes(\"text/html\") &&\n    dataTransfer.getData(\"text/html\").includes(\"urn:schemas-microsoft-com:office:office\")\n}\n\nexport const dataTransferIsWritable = function(dataTransfer) {\n  if (!dataTransfer?.setData) return false\n\n  for (const key in testTransferData) {\n    const value = testTransferData[key]\n\n    try {\n      dataTransfer.setData(key, value)\n      if (!dataTransfer.getData(key) === value) return false\n    } catch (error) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const keyEventIsKeyboardCommand = (function() {\n  if (/Mac|^iP/.test(navigator.platform)) {\n    return (event) => event.metaKey\n  } else {\n    return (event) => event.ctrlKey\n  }\n})()\n\nexport function shouldRenderInmmediatelyToDealWithIOSDictation(inputEvent) {\n  if (/iPhone|iPad/.test(navigator.userAgent)) {\n    // Handle garbled content and duplicated newlines when using dictation on iOS 18+. Upon dictation completion, iOS sends\n    // the list of insertText / insertParagraph events in a quick sequence. If we don't render\n    // the editor synchronously, the internal range fails to update and results in garbled content or duplicated newlines.\n    //\n    // This workaround is necessary because iOS doesn't send composing events as expected while dictating:\n    // https://bugs.webkit.org/show_bug.cgi?id=261764\n    return !inputEvent.inputType || inputEvent.inputType === \"insertParagraph\"\n  } else {\n    return false\n  }\n}\n", "export const defer = (fn) => setTimeout(fn, 1)\n", "/* eslint-disable\n    id-length,\n*/\nexport const copyObject = function(object = {}) {\n  const result = {}\n  for (const key in object) {\n    const value = object[key]\n    result[key] = value\n  }\n  return result\n}\n\nexport const objectsAreEqual = function(a = {}, b = {}) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n  for (const key in a) {\n    const value = a[key]\n    if (value !== b[key]) {\n      return false\n    }\n  }\n  return true\n}\n", "import { copyObject, objectsAreEqual } from \"trix/core/helpers/objects\"\n\nexport const normalizeRange = function(range) {\n  if (range == null) return\n\n  if (!Array.isArray(range)) {\n    range = [ range, range ]\n  }\n  return [ copyValue(range[0]), copyValue(range[1] != null ? range[1] : range[0]) ]\n}\n\nexport const rangeIsCollapsed = function(range) {\n  if (range == null) return\n\n  const [ start, end ] = normalizeRange(range)\n  return rangeValuesAreEqual(start, end)\n}\n\nexport const rangesAreEqual = function(leftRange, rightRange) {\n  if (leftRange == null || rightRange == null) return\n\n  const [ leftStart, leftEnd ] = normalizeRange(leftRange)\n  const [ rightStart, rightEnd ] = normalizeRange(rightRange)\n  return rangeValuesAreEqual(leftStart, rightStart) && rangeValuesAreEqual(leftEnd, rightEnd)\n}\n\nconst copyValue = function(value) {\n  if (typeof value === \"number\") {\n    return value\n  } else {\n    return copyObject(value)\n  }\n}\n\nconst rangeValuesAreEqual = function(left, right) {\n  if (typeof left === \"number\") {\n    return left === right\n  } else {\n    return objectsAreEqual(left, right)\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class SelectionChangeObserver extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.update = this.update.bind(this)\n    this.selectionManagers = []\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      document.addEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false\n      return document.removeEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  registerSelectionManager(selectionManager) {\n    if (!this.selectionManagers.includes(selectionManager)) {\n      this.selectionManagers.push(selectionManager)\n      return this.start()\n    }\n  }\n\n  unregisterSelectionManager(selectionManager) {\n    this.selectionManagers = this.selectionManagers.filter((sm) => sm !== selectionManager)\n    if (this.selectionManagers.length === 0) {\n      return this.stop()\n    }\n  }\n\n  notifySelectionManagersOfSelectionChange() {\n    return this.selectionManagers.map((selectionManager) => selectionManager.selectionDidChange())\n  }\n\n  update() {\n    this.notifySelectionManagersOfSelectionChange()\n  }\n\n  reset() {\n    this.update()\n  }\n}\n\nexport const selectionChangeObserver = new SelectionChangeObserver()\n\nexport const getDOMSelection = function() {\n  const selection = window.getSelection()\n  if (selection.rangeCount > 0) {\n    return selection\n  }\n}\n\nexport const getDOMRange = function() {\n  const domRange = getDOMSelection()?.getRangeAt(0)\n  if (domRange) {\n    if (!domRangeIsPrivate(domRange)) {\n      return domRange\n    }\n  }\n}\n\nexport const setDOMRange = function(domRange) {\n  const selection = window.getSelection()\n  selection.removeAllRanges()\n  selection.addRange(domRange)\n  return selectionChangeObserver.update()\n}\n\n// In Firefox, clicking certain <input> elements changes the selection to a\n// private element used to draw its UI. Attempting to access properties of those\n// elements throws an error.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=208427\nconst domRangeIsPrivate = (domRange) => nodeIsPrivate(domRange.startContainer) || nodeIsPrivate(domRange.endContainer)\n\nconst nodeIsPrivate = (node) => !Object.getPrototypeOf(node)\n", "/* eslint-disable\n    id-length,\n    no-useless-escape,\n*/\nimport { NON_BREAKING_SPACE, ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nexport const normalizeSpaces = (string) =>\n  string.replace(new RegExp(`${ZERO_WIDTH_SPACE}`, \"g\"), \"\").replace(new RegExp(`${NON_BREAKING_SPACE}`, \"g\"), \" \")\n\nexport const normalizeNewlines = (string) => string.replace(/\\r\\n?/g, \"\\n\")\n\nexport const breakableWhitespacePattern = new RegExp(`[^\\\\S${NON_BREAKING_SPACE}]`)\n\nexport const squishBreakableWhitespace = (string) =>\n  string\n    // Replace all breakable whitespace characters with a space\n    .replace(new RegExp(`${breakableWhitespacePattern.source}`, \"g\"), \" \")\n    // Replace two or more spaces with a single space\n    .replace(/\\ {2,}/g, \" \")\n\nexport const summarizeStringChange = function(oldString, newString) {\n  let added, removed\n  oldString = UTF16String.box(oldString)\n  newString = UTF16String.box(newString)\n\n  if (newString.length < oldString.length) {\n    [ removed, added ] = utf16StringDifferences(oldString, newString)\n  } else {\n    [ added, removed ] = utf16StringDifferences(newString, oldString)\n  }\n\n  return { added, removed }\n}\n\nconst utf16StringDifferences = function(a, b) {\n  if (a.isEqualTo(b)) {\n    return [ \"\", \"\" ]\n  }\n\n  const diffA = utf16StringDifference(a, b)\n  const { length } = diffA.utf16String\n\n  let diffB\n\n  if (length) {\n    const { offset } = diffA\n    const codepoints = a.codepoints.slice(0, offset).concat(a.codepoints.slice(offset + length))\n    diffB = utf16StringDifference(b, UTF16String.fromCodepoints(codepoints))\n  } else {\n    diffB = utf16StringDifference(b, a)\n  }\n\n  return [ diffA.utf16String.toString(), diffB.utf16String.toString() ]\n}\n\nconst utf16StringDifference = function(a, b) {\n  let leftIndex = 0\n  let rightIndexA = a.length\n  let rightIndexB = b.length\n\n  while (leftIndex < rightIndexA && a.charAt(leftIndex).isEqualTo(b.charAt(leftIndex))) {\n    leftIndex++\n  }\n\n  while (rightIndexA > leftIndex + 1 && a.charAt(rightIndexA - 1).isEqualTo(b.charAt(rightIndexB - 1))) {\n    rightIndexA--\n    rightIndexB--\n  }\n\n  return {\n    utf16String: a.slice(leftIndex, rightIndexA),\n    offset: leftIndex,\n  }\n}\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport { arraysAreEqual } from \"trix/core/helpers\"\n\nexport default class Hash extends TrixObject {\n  static fromCommonAttributesOfObjects(objects = []) {\n    if (!objects.length) {\n      return new this()\n    }\n    let hash = box(objects[0])\n    let keys = hash.getKeys()\n\n    objects.slice(1).forEach((object) => {\n      keys = hash.getKeysCommonToHash(box(object))\n      hash = hash.slice(keys)\n    })\n\n    return hash\n  }\n\n  static box(values) {\n    return box(values)\n  }\n\n  constructor(values = {}) {\n    super(...arguments)\n    this.values = copy(values)\n  }\n\n  add(key, value) {\n    return this.merge(object(key, value))\n  }\n\n  remove(key) {\n    return new Hash(copy(this.values, key))\n  }\n\n  get(key) {\n    return this.values[key]\n  }\n\n  has(key) {\n    return key in this.values\n  }\n\n  merge(values) {\n    return new Hash(merge(this.values, unbox(values)))\n  }\n\n  slice(keys) {\n    const values = {}\n\n    Array.from(keys).forEach((key) => {\n      if (this.has(key)) {\n        values[key] = this.values[key]\n      }\n    })\n\n    return new Hash(values)\n  }\n\n  getKeys() {\n    return Object.keys(this.values)\n  }\n\n  getKeysCommonToHash(hash) {\n    hash = box(hash)\n    return this.getKeys().filter((key) => this.values[key] === hash.values[key])\n  }\n\n  isEqualTo(values) {\n    return arraysAreEqual(this.toArray(), box(values).toArray())\n  }\n\n  isEmpty() {\n    return this.getKeys().length === 0\n  }\n\n  toArray() {\n    if (!this.array) {\n      const result = []\n      for (const key in this.values) {\n        const value = this.values[key]\n        result.push(result.push(key, value))\n      }\n      this.array = result.slice(0)\n    }\n\n    return this.array\n  }\n\n  toObject() {\n    return copy(this.values)\n  }\n\n  toJSON() {\n    return this.toObject()\n  }\n\n  contentsForInspection() {\n    return { values: JSON.stringify(this.values) }\n  }\n}\n\nconst object = function(key, value) {\n  const result = {}\n  result[key] = value\n  return result\n}\n\nconst merge = function(object, values) {\n  const result = copy(object)\n  for (const key in values) {\n    const value = values[key]\n    result[key] = value\n  }\n  return result\n}\n\nconst copy = function(object, keyToRemove) {\n  const result = {}\n  const sortedKeys = Object.keys(object).sort()\n\n  sortedKeys.forEach((key) => {\n    if (key !== keyToRemove) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nconst box = function(object) {\n  if (object instanceof Hash) {\n    return object\n  } else {\n    return new Hash(object)\n  }\n}\n\nconst unbox = function(object) {\n  if (object instanceof Hash) {\n    return object.values\n  } else {\n    return object\n  }\n}\n", "export default class ObjectGroup {\n  static groupObjects(ungroupedObjects = [], { depth, asTree } = {}) {\n    let group\n    if (asTree) {\n      if (depth == null) {\n        depth = 0\n      }\n    }\n    const objects = []\n\n    Array.from(ungroupedObjects).forEach((object) => {\n      if (group) {\n        if (object.canBeGrouped?.(depth) && group[group.length - 1].canBeGroupedWith?.(object, depth)) {\n          group.push(object)\n          return\n        } else {\n          objects.push(new this(group, { depth, asTree }))\n          group = null\n        }\n      }\n\n      if (object.canBeGrouped?.(depth)) {\n        group = [ object ]\n      } else {\n        objects.push(object)\n      }\n    })\n\n    if (group) {\n      objects.push(new this(group, { depth, asTree }))\n    }\n    return objects\n  }\n\n  constructor(objects = [], { depth, asTree }) {\n    this.objects = objects\n    if (asTree) {\n      this.depth = depth\n      this.objects = this.constructor.groupObjects(this.objects, { asTree, depth: this.depth + 1 })\n    }\n  }\n\n  getObjects() {\n    return this.objects\n  }\n\n  getDepth() {\n    return this.depth\n  }\n\n  getCacheKey() {\n    const keys = [ \"objectGroup\" ]\n    Array.from(this.getObjects()).forEach((object) => {\n      keys.push(object.getCacheKey())\n    })\n    return keys.join(\"/\")\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class ObjectMap extends BasicObject {\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = {}\n\n    Array.from(objects).forEach((object) => {\n      const hash = JSON.stringify(object)\n      if (this.objects[hash] == null) {\n        this.objects[hash] = object\n      }\n    })\n  }\n\n  find(object) {\n    const hash = JSON.stringify(object)\n    return this.objects[hash]\n  }\n}\n", "export default class ElementStore {\n  constructor(elements) {\n    this.reset(elements)\n  }\n\n  add(element) {\n    const key = getKey(element)\n    this.elements[key] = element\n  }\n\n  remove(element) {\n    const key = getKey(element)\n    const value = this.elements[key]\n    if (value) {\n      delete this.elements[key]\n      return value\n    }\n  }\n\n  reset(elements = []) {\n    this.elements = {}\n    Array.from(elements).forEach((element) => {\n      this.add(element)\n    })\n    return elements\n  }\n}\n\nconst getKey = (element) => element.dataset.trixStoreKey\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class Operation extends BasicObject {\n  isPerforming() {\n    return this.performing === true\n  }\n\n  hasPerformed() {\n    return this.performed === true\n  }\n\n  hasSucceeded() {\n    return this.performed && this.succeeded\n  }\n\n  hasFailed() {\n    return this.performed && !this.succeeded\n  }\n\n  getPromise() {\n    if (!this.promise) {\n      this.promise = new Promise((resolve, reject) => {\n        this.performing = true\n        return this.perform((succeeded, result) => {\n          this.succeeded = succeeded\n          this.performing = false\n          this.performed = true\n\n          if (this.succeeded) {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        })\n      })\n    }\n\n    return this.promise\n  }\n\n  perform(callback) {\n    return callback(false)\n  }\n\n  release() {\n    this.promise?.cancel?.()\n    this.promise = null\n    this.performing = null\n    this.performed = null\n    this.succeeded = null\n  }\n}\n\nOperation.proxyMethod(\"getPromise().then\")\nOperation.proxyMethod(\"getPromise().catch\")\n", "import BasicObject from \"trix/core/basic_object\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\n\nexport default class ObjectView extends BasicObject {\n  constructor(object, options = {}) {\n    super(...arguments)\n    this.object = object\n    this.options = options\n    this.childViews = []\n    this.rootView = this\n  }\n\n  getNodes() {\n    if (!this.nodes) { this.nodes = this.createNodes() }\n    return this.nodes.map((node) => node.cloneNode(true))\n  }\n\n  invalidate() {\n    this.nodes = null\n    this.childViews = []\n    return this.parentView?.invalidate()\n  }\n\n  invalidateViewForObject(object) {\n    return this.findViewForObject(object)?.invalidate()\n  }\n\n  findOrCreateCachedChildView(viewClass, object, options) {\n    let view = this.getCachedViewForObject(object)\n    if (view) {\n      this.recordChildView(view)\n    } else {\n      view = this.createChildView(...arguments)\n      this.cacheViewForObject(view, object)\n    }\n    return view\n  }\n\n  createChildView(viewClass, object, options = {}) {\n    if (object instanceof ObjectGroup) {\n      options.viewClass = viewClass\n      viewClass = ObjectGroupView\n    }\n\n    const view = new viewClass(object, options)\n    return this.recordChildView(view)\n  }\n\n  recordChildView(view) {\n    view.parentView = this\n    view.rootView = this.rootView\n    this.childViews.push(view)\n    return view\n  }\n\n  getAllChildViews() {\n    let views = []\n\n    this.childViews.forEach((childView) => {\n      views.push(childView)\n      views = views.concat(childView.getAllChildViews())\n    })\n\n    return views\n  }\n\n  findElement() {\n    return this.findElementForObject(this.object)\n  }\n\n  findElementForObject(object) {\n    const id = object?.id\n    if (id) {\n      return this.rootView.element.querySelector(`[data-trix-id='${id}']`)\n    }\n  }\n\n  findViewForObject(object) {\n    for (const view of this.getAllChildViews()) {\n      if (view.object === object) {\n        return view\n      }\n    }\n  }\n\n  getViewCache() {\n    if (this.rootView === this) {\n      if (this.isViewCachingEnabled()) {\n        if (!this.viewCache) { this.viewCache = {} }\n        return this.viewCache\n      }\n    } else {\n      return this.rootView.getViewCache()\n    }\n  }\n\n  isViewCachingEnabled() {\n    return this.shouldCacheViews !== false\n  }\n\n  enableViewCaching() {\n    this.shouldCacheViews = true\n  }\n\n  disableViewCaching() {\n    this.shouldCacheViews = false\n  }\n\n  getCachedViewForObject(object) {\n    return this.getViewCache()?.[object.getCacheKey()]\n  }\n\n  cacheViewForObject(view, object) {\n    const cache = this.getViewCache()\n    if (cache) {\n      cache[object.getCacheKey()] = view\n    }\n  }\n\n  garbageCollectCachedViews() {\n    const cache = this.getViewCache()\n    if (cache) {\n      const views = this.getAllChildViews().concat(this)\n      const objectKeys = views.map((view) => view.object.getCacheKey())\n      for (const key in cache) {\n        if (!objectKeys.includes(key)) {\n          delete cache[key]\n        }\n      }\n    }\n  }\n}\n\nexport class ObjectGroupView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.objectGroup = this.object\n    this.viewClass = this.options.viewClass\n    delete this.options.viewClass\n  }\n\n  getChildViews() {\n    if (!this.childViews.length) {\n      Array.from(this.objectGroup.getObjects()).forEach((object) => {\n        this.findOrCreateCachedChildView(this.viewClass, object, this.options)\n      })\n    }\n    return this.childViews\n  }\n\n  createNodes() {\n    const element = this.createContainerElement()\n\n    this.getChildViews().forEach((view) => {\n      Array.from(view.getNodes()).forEach((node) => {\n        element.appendChild(node)\n      })\n    })\n\n    return [ element ]\n  }\n\n  createContainerElement(depth = this.objectGroup.getDepth()) {\n    return this.getChildViews()[0].createContainerElement(depth)\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport { nodeIsAttachmentElement, removeNode, tagName, walkTree } from \"trix/core/helpers\"\nimport DOMPurify from \"dompurify\"\nimport * as config from \"trix/config\"\n\nDOMPurify.addHook(\"uponSanitizeAttribute\", function (node, data) {\n  const allowedAttributePattern = /^data-trix-/\n  if (allowedAttributePattern.test(data.attrName)) {\n    data.forceKeepAttr = true\n  }\n})\n\nconst DEFAULT_ALLOWED_ATTRIBUTES = \"style href src width height language class\".split(\" \")\nconst DEFAULT_FORBIDDEN_PROTOCOLS = \"javascript:\".split(\" \")\nconst DEFAULT_FORBIDDEN_ELEMENTS = \"script iframe form noscript\".split(\" \")\n\nexport default class HTMLSanitizer extends BasicObject {\n  static setHTML(element, html) {\n    const sanitizedElement = new this(html).sanitize()\n    const sanitizedHtml = sanitizedElement.getHTML ? sanitizedElement.getHTML() : sanitizedElement.outerHTML\n    element.innerHTML = sanitizedHtml\n  }\n\n  static sanitize(html, options) {\n    const sanitizer = new this(html, options)\n    sanitizer.sanitize()\n    return sanitizer\n  }\n\n  constructor(html, { allowedAttributes, forbiddenProtocols, forbiddenElements } = {}) {\n    super(...arguments)\n    this.allowedAttributes = allowedAttributes || DEFAULT_ALLOWED_ATTRIBUTES\n    this.forbiddenProtocols = forbiddenProtocols || DEFAULT_FORBIDDEN_PROTOCOLS\n    this.forbiddenElements = forbiddenElements || DEFAULT_FORBIDDEN_ELEMENTS\n    this.body = createBodyElementForHTML(html)\n  }\n\n  sanitize() {\n    this.sanitizeElements()\n    this.normalizeListElementNesting()\n    DOMPurify.setConfig(config.dompurify)\n    this.body = DOMPurify.sanitize(this.body)\n\n    return this.body\n  }\n\n  getHTML() {\n    return this.body.innerHTML\n  }\n\n  getBody() {\n    return this.body\n  }\n\n  // Private\n\n  sanitizeElements() {\n    const walker = walkTree(this.body)\n    const nodesToRemove = []\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          if (this.elementIsRemovable(node)) {\n            nodesToRemove.push(node)\n          } else {\n            this.sanitizeElement(node)\n          }\n          break\n        case Node.COMMENT_NODE:\n          nodesToRemove.push(node)\n          break\n      }\n    }\n\n    nodesToRemove.forEach((node) => removeNode(node))\n\n    return this.body\n  }\n\n  sanitizeElement(element) {\n    if (element.hasAttribute(\"href\")) {\n      if (this.forbiddenProtocols.includes(element.protocol)) {\n        element.removeAttribute(\"href\")\n      }\n    }\n\n    Array.from(element.attributes).forEach(({ name }) => {\n      if (!this.allowedAttributes.includes(name) && name.indexOf(\"data-trix\") !== 0) {\n        element.removeAttribute(name)\n      }\n    })\n\n    return element\n  }\n\n  normalizeListElementNesting() {\n    Array.from(this.body.querySelectorAll(\"ul,ol\")).forEach((listElement) => {\n      const previousElement = listElement.previousElementSibling\n      if (previousElement) {\n        if (tagName(previousElement) === \"li\") {\n          previousElement.appendChild(listElement)\n        }\n      }\n    })\n\n    return this.body\n  }\n\n  elementIsRemovable(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    return this.elementIsForbidden(element) || this.elementIsntSerializable(element)\n  }\n\n  elementIsForbidden(element) {\n    return this.forbiddenElements.includes(tagName(element))\n  }\n\n  elementIsntSerializable(element) {\n    return element.getAttribute(\"data-trix-serialize\") === \"false\" && !nodeIsAttachmentElement(element)\n  }\n}\n\nconst createBodyElementForHTML = function(html = \"\") {\n  // Remove everything after </html>\n  html = html.replace(/<\\/html[^>]*>[^]*$/i, \"</html>\")\n  const doc = document.implementation.createHTMLDocument(\"\")\n  doc.documentElement.innerHTML = html\n\n  Array.from(doc.head.querySelectorAll(\"style\")).forEach((element) => {\n    doc.body.appendChild(element)\n  })\n\n  return doc.body\n}\n", "import * as config from \"trix/config\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { copyObject, makeElement } from \"trix/core/helpers\"\nimport ObjectView from \"trix/views/object_view\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nconst { css } = config\n\nexport default class AttachmentView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.attachment = this.object\n    this.attachment.uploadProgressDelegate = this\n    this.attachmentPiece = this.options.piece\n  }\n\n  createContentNodes() {\n    return []\n  }\n\n  createNodes() {\n    let innerElement\n    const figure = innerElement = makeElement({\n      tagName: \"figure\",\n      className: this.getClassName(),\n      data: this.getData(),\n      editable: false,\n    })\n\n    const href = this.getHref()\n    if (href) {\n      innerElement = makeElement({ tagName: \"a\", editable: false, attributes: { href, tabindex: -1 } })\n      figure.appendChild(innerElement)\n    }\n\n    if (this.attachment.hasContent()) {\n      HTMLSanitizer.setHTML(innerElement, this.attachment.getContent())\n    } else {\n      this.createContentNodes().forEach((node) => {\n        innerElement.appendChild(node)\n      })\n    }\n\n    innerElement.appendChild(this.createCaptionElement())\n\n    if (this.attachment.isPending()) {\n      this.progressElement = makeElement({\n        tagName: \"progress\",\n        attributes: {\n          class: css.attachmentProgress,\n          value: this.attachment.getUploadProgress(),\n          max: 100,\n        },\n        data: {\n          trixMutable: true,\n          trixStoreKey: [ \"progressElement\", this.attachment.id ].join(\"/\"),\n        },\n      })\n\n      figure.appendChild(this.progressElement)\n    }\n\n    return [ createCursorTarget(\"left\"), figure, createCursorTarget(\"right\") ]\n  }\n\n  createCaptionElement() {\n    const figcaption = makeElement({ tagName: \"figcaption\", className: css.attachmentCaption })\n    const caption = this.attachmentPiece.getCaption()\n    if (caption) {\n      figcaption.classList.add(`${css.attachmentCaption}--edited`)\n      figcaption.textContent = caption\n    } else {\n      let name, size\n      const captionConfig = this.getCaptionConfig()\n      if (captionConfig.name) {\n        name = this.attachment.getFilename()\n      }\n      if (captionConfig.size) {\n        size = this.attachment.getFormattedFilesize()\n      }\n\n      if (name) {\n        const nameElement = makeElement({ tagName: \"span\", className: css.attachmentName, textContent: name })\n        figcaption.appendChild(nameElement)\n      }\n\n      if (size) {\n        if (name) {\n          figcaption.appendChild(document.createTextNode(\" \"))\n        }\n        const sizeElement = makeElement({ tagName: \"span\", className: css.attachmentSize, textContent: size })\n        figcaption.appendChild(sizeElement)\n      }\n    }\n\n    return figcaption\n  }\n\n  getClassName() {\n    const names = [ css.attachment, `${css.attachment}--${this.attachment.getType()}` ]\n    const extension = this.attachment.getExtension()\n    if (extension) {\n      names.push(`${css.attachment}--${extension}`)\n    }\n    return names.join(\" \")\n  }\n\n  getData() {\n    const data = {\n      trixAttachment: JSON.stringify(this.attachment),\n      trixContentType: this.attachment.getContentType(),\n      trixId: this.attachment.id,\n    }\n\n    const { attributes } = this.attachmentPiece\n    if (!attributes.isEmpty()) {\n      data.trixAttributes = JSON.stringify(attributes)\n    }\n\n    if (this.attachment.isPending()) {\n      data.trixSerialize = false\n    }\n\n    return data\n  }\n\n  getHref() {\n    if (!htmlContainsTagName(this.attachment.getContent(), \"a\")) {\n      return this.attachment.getHref()\n    }\n  }\n\n  getCaptionConfig() {\n    const type = this.attachment.getType()\n    const captionConfig = copyObject(config.attachments[type]?.caption)\n    if (type === \"file\") {\n      captionConfig.name = true\n    }\n    return captionConfig\n  }\n\n  findProgressElement() {\n    return this.findElement()?.querySelector(\"progress\")\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeUploadProgress() {\n    const value = this.attachment.getUploadProgress()\n    const progressElement = this.findProgressElement()\n    if (progressElement) {\n      progressElement.value = value\n    }\n  }\n}\n\nconst createCursorTarget = (name) =>\n  makeElement({\n    tagName: \"span\",\n    textContent: ZERO_WIDTH_SPACE,\n    data: {\n      trixCursorTarget: name,\n      trixSerialize: false,\n    },\n  })\n\nconst htmlContainsTagName = function(html, tagName) {\n  const div = makeElement(\"div\")\n  HTMLSanitizer.setHTML(div, html || \"\")\n  return div.querySelector(tagName)\n}\n", "import * as config from \"trix/config\"\nimport { makeElement } from \"trix/core/helpers\"\n\nimport AttachmentView from \"trix/views/attachment_view\"\n\nexport default class PreviewableAttachmentView extends AttachmentView {\n  constructor() {\n    super(...arguments)\n    this.attachment.previewDelegate = this\n  }\n\n  createContentNodes() {\n    this.image = makeElement({\n      tagName: \"img\",\n      attributes: {\n        src: \"\",\n      },\n      data: {\n        trixMutable: true,\n      },\n    })\n\n    this.refresh(this.image)\n    return [ this.image ]\n  }\n\n  createCaptionElement() {\n    const figcaption = super.createCaptionElement(...arguments)\n    if (!figcaption.textContent) {\n      figcaption.setAttribute(\"data-trix-placeholder\", config.lang.captionPlaceholder)\n    }\n    return figcaption\n  }\n\n  refresh(image) {\n    if (!image) { image = this.findElement()?.querySelector(\"img\") }\n    if (image) {\n      return this.updateAttributesForImage(image)\n    }\n  }\n\n  updateAttributesForImage(image) {\n    const url = this.attachment.getURL()\n    const previewURL = this.attachment.getPreviewURL()\n    image.src = previewURL || url\n\n    if (previewURL === url) {\n      image.removeAttribute(\"data-trix-serialized-attributes\")\n    } else {\n      const serializedAttributes = JSON.stringify({ src: url })\n      image.setAttribute(\"data-trix-serialized-attributes\", serializedAttributes)\n    }\n\n    const width = this.attachment.getWidth()\n    const height = this.attachment.getHeight()\n\n    if (width != null) {\n      image.width = width\n    }\n    if (height != null) {\n      image.height = height\n    }\n\n    const storeKey = [ \"imageElement\", this.attachment.id, image.src, image.width, image.height ].join(\"/\")\n    image.dataset.trixStoreKey = storeKey\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes() {\n    this.refresh(this.image)\n    return this.refresh()\n  }\n}\n", "/* eslint-disable\n    no-useless-escape,\n    no-var,\n*/\nimport { NON_BREAKING_SPACE } from \"trix/constants\"\n\nimport ObjectView from \"trix/views/object_view\"\nimport AttachmentView from \"trix/views/attachment_view\"\nimport PreviewableAttachmentView from \"trix/views/previewable_attachment_view\"\n\nimport { findInnerElement, getTextConfig, makeElement } from \"trix/core/helpers\"\n\nexport default class PieceView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.piece = this.object\n    this.attributes = this.piece.getAttributes()\n    this.textConfig = this.options.textConfig\n    this.context = this.options.context\n\n    if (this.piece.attachment) {\n      this.attachment = this.piece.attachment\n    } else {\n      this.string = this.piece.toString()\n    }\n  }\n\n  createNodes() {\n    let nodes = this.attachment ? this.createAttachmentNodes() : this.createStringNodes()\n    const element = this.createElement()\n    if (element) {\n      const innerElement = findInnerElement(element)\n      Array.from(nodes).forEach((node) => {\n        innerElement.appendChild(node)\n      })\n      nodes = [ element ]\n    }\n    return nodes\n  }\n\n  createAttachmentNodes() {\n    const constructor = this.attachment.isPreviewable() ? PreviewableAttachmentView : AttachmentView\n\n    const view = this.createChildView(constructor, this.piece.attachment, { piece: this.piece })\n    return view.getNodes()\n  }\n\n  createStringNodes() {\n    if (this.textConfig?.plaintext) {\n      return [ document.createTextNode(this.string) ]\n    } else {\n      const nodes = []\n      const iterable = this.string.split(\"\\n\")\n      for (let index = 0; index < iterable.length; index++) {\n        const substring = iterable[index]\n        if (index > 0) {\n          const element = makeElement(\"br\")\n          nodes.push(element)\n        }\n\n        if (substring.length) {\n          const node = document.createTextNode(this.preserveSpaces(substring))\n          nodes.push(node)\n        }\n      }\n      return nodes\n    }\n  }\n\n  createElement() {\n    let element, key, value\n    const styles = {}\n\n    for (key in this.attributes) {\n      value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.tagName) {\n          var innerElement\n          const pendingElement = makeElement(config.tagName)\n\n          if (innerElement) {\n            innerElement.appendChild(pendingElement)\n            innerElement = pendingElement\n          } else {\n            element = innerElement = pendingElement\n          }\n        }\n\n        if (config.styleProperty) {\n          styles[config.styleProperty] = value\n        }\n\n        if (config.style) {\n          for (key in config.style) {\n            value = config.style[key]\n            styles[key] = value\n          }\n        }\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      if (!element) { element = makeElement(\"span\") }\n      for (key in styles) {\n        value = styles[key]\n        element.style[key] = value\n      }\n    }\n    return element\n  }\n\n  createContainerElement() {\n    for (const key in this.attributes) {\n      const value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.groupTagName) {\n          const attributes = {}\n          attributes[key] = value\n          return makeElement(config.groupTagName, attributes)\n        }\n      }\n    }\n  }\n\n  preserveSpaces(string) {\n    if (this.context.isLast) {\n      string = string.replace(/\\ $/, NON_BREAKING_SPACE)\n    }\n\n    string = string\n      .replace(/(\\S)\\ {3}(\\S)/g, `$1 ${NON_BREAKING_SPACE} $2`)\n      .replace(/\\ {2}/g, `${NON_BREAKING_SPACE} `)\n      .replace(/\\ {2}/g, ` ${NON_BREAKING_SPACE}`)\n\n    if (this.context.isFirst || this.context.followsWhitespace) {\n      string = string.replace(/^\\ /, NON_BREAKING_SPACE)\n    }\n\n    return string\n  }\n}\n", "/* eslint-disable\n    no-var,\n*/\nimport ObjectView from \"trix/views/object_view\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport PieceView from \"trix/views/piece_view\"\n\nexport default class TextView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.text = this.object\n    this.textConfig = this.options.textConfig\n  }\n\n  createNodes() {\n    const nodes = []\n    const pieces = ObjectGroup.groupObjects(this.getPieces())\n    const lastIndex = pieces.length - 1\n\n    for (let index = 0; index < pieces.length; index++) {\n      const piece = pieces[index]\n      const context = {}\n      if (index === 0) {\n        context.isFirst = true\n      }\n      if (index === lastIndex) {\n        context.isLast = true\n      }\n      if (endsWithWhitespace(previousPiece)) {\n        context.followsWhitespace = true\n      }\n\n      const view = this.findOrCreateCachedChildView(PieceView, piece, { textConfig: this.textConfig, context })\n      nodes.push(...Array.from(view.getNodes() || []))\n\n      var previousPiece = piece\n    }\n    return nodes\n  }\n\n  getPieces() {\n    return Array.from(this.text.getPieces()).filter((piece) => !piece.hasAttribute(\"blockBreak\"))\n  }\n}\n\nconst endsWithWhitespace = (piece) => /\\s$/.test(piece?.toString())\n", "import * as config from \"trix/config\"\nimport ObjectView from \"trix/views/object_view\"\nimport TextView from \"trix/views/text_view\"\n\nimport { getBlockConfig, makeElement } from \"trix/core/helpers\"\nconst { css } = config\n\nexport default class BlockView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.block = this.object\n    this.attributes = this.block.getAttributes()\n  }\n\n  createNodes() {\n    const comment = document.createComment(\"block\")\n    const nodes = [ comment ]\n    if (this.block.isEmpty()) {\n      nodes.push(makeElement(\"br\"))\n    } else {\n      const textConfig = getBlockConfig(this.block.getLastAttribute())?.text\n      const textView = this.findOrCreateCachedChildView(TextView, this.block.text, { textConfig })\n      nodes.push(...Array.from(textView.getNodes() || []))\n      if (this.shouldAddExtraNewlineElement()) {\n        nodes.push(makeElement(\"br\"))\n      }\n    }\n\n    if (this.attributes.length) {\n      return nodes\n    } else {\n      let attributes\n      const { tagName } = config.blockAttributes.default\n      if (this.block.isRTL()) {\n        attributes = { dir: \"rtl\" }\n      }\n\n      const element = makeElement({ tagName, attributes })\n      nodes.forEach((node) => element.appendChild(node))\n      return [ element ]\n    }\n  }\n\n  createContainerElement(depth) {\n    const attributes = {}\n    let className\n    const attributeName = this.attributes[depth]\n\n    const { tagName, htmlAttributes = [] } = getBlockConfig(attributeName)\n\n    if (depth === 0 && this.block.isRTL()) {\n      Object.assign(attributes, { dir: \"rtl\" })\n    }\n\n    if (attributeName === \"attachmentGallery\") {\n      const size = this.block.getBlockBreakPosition()\n      className = `${css.attachmentGallery} ${css.attachmentGallery}--${size}`\n    }\n\n    Object.entries(this.block.htmlAttributes).forEach(([ name, value ]) => {\n      if (htmlAttributes.includes(name)) {\n        attributes[name] = value\n      }\n    })\n\n    return makeElement({ tagName, className, attributes })\n  }\n\n  // A single <br> at the end of a block element has no visual representation\n  // so add an extra one.\n  shouldAddExtraNewlineElement() {\n    return /\\n\\n$/.test(this.block.toString())\n  }\n}\n", "import { makeElement } from \"trix/core/helpers\"\n\nimport ElementStore from \"trix/core/collections/element_store\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport ObjectView from \"trix/views/object_view\"\nimport BlockView from \"trix/views/block_view\"\n\nimport { defer } from \"trix/core/helpers\"\n\nexport default class DocumentView extends ObjectView {\n  static render(document) {\n    const element = makeElement(\"div\")\n    const view = new this(document, { element })\n    view.render()\n    view.sync()\n    return element\n  }\n\n  constructor() {\n    super(...arguments)\n    this.element = this.options.element\n    this.elementStore = new ElementStore()\n    this.setDocument(this.object)\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = this.object = document\n    }\n  }\n\n  render() {\n    this.childViews = []\n\n    this.shadowElement = makeElement(\"div\")\n\n    if (!this.document.isEmpty()) {\n      const objects = ObjectGroup.groupObjects(this.document.getBlocks(), { asTree: true })\n\n      Array.from(objects).forEach((object) => {\n        const view = this.findOrCreateCachedChildView(BlockView, object)\n        Array.from(view.getNodes()).map((node) => this.shadowElement.appendChild(node))\n      })\n    }\n  }\n\n  isSynced() {\n    return elementsHaveEqualHTML(this.shadowElement, this.element)\n  }\n\n  sync() {\n    const fragment = this.createDocumentFragmentForSync()\n    while (this.element.lastChild) {\n      this.element.removeChild(this.element.lastChild)\n    }\n    this.element.appendChild(fragment)\n    return this.didSync()\n  }\n\n  // Private\n\n  didSync() {\n    this.elementStore.reset(findStoredElements(this.element))\n    return defer(() => this.garbageCollectCachedViews())\n  }\n\n  createDocumentFragmentForSync() {\n    const fragment = document.createDocumentFragment()\n\n    Array.from(this.shadowElement.childNodes).forEach((node) => {\n      fragment.appendChild(node.cloneNode(true))\n    })\n\n    Array.from(findStoredElements(fragment)).forEach((element) => {\n      const storedElement = this.elementStore.remove(element)\n      if (storedElement) {\n        element.parentNode.replaceChild(storedElement, element)\n      }\n    })\n\n    return fragment\n  }\n}\n\nconst findStoredElements = (element) => element.querySelectorAll(\"[data-trix-store-key]\")\n\nconst elementsHaveEqualHTML = (element, otherElement) =>\n  ignoreSpaces(element.innerHTML) === ignoreSpaces(otherElement.innerHTML)\n\nconst ignoreSpaces = (html) => html.replace(/&nbsp;/g, \" \")\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Piece extends TrixObject {\n  static types = {}\n\n  static registerType(type, constructor) {\n    constructor.type = type\n    this.types[type] = constructor\n  }\n\n  static fromJSON(pieceJSON) {\n    const constructor = this.types[pieceJSON.type]\n    if (constructor) {\n      return constructor.fromJSON(pieceJSON)\n    }\n  }\n\n  constructor(value, attributes = {}) {\n    super(...arguments)\n    this.attributes = Hash.box(attributes)\n  }\n\n  copyWithAttributes(attributes) {\n    return new this.constructor(this.getValue(), attributes)\n  }\n\n  copyWithAdditionalAttributes(attributes) {\n    return this.copyWithAttributes(this.attributes.merge(attributes))\n  }\n\n  copyWithoutAttribute(attribute) {\n    return this.copyWithAttributes(this.attributes.remove(attribute))\n  }\n\n  copy() {\n    return this.copyWithAttributes(this.attributes)\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  getAttributesHash() {\n    return this.attributes\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  hasSameStringValueAsPiece(piece) {\n    return piece && this.toString() === piece.toString()\n  }\n\n  hasSameAttributesAsPiece(piece) {\n    return piece && (this.attributes === piece.attributes || this.attributes.isEqualTo(piece.attributes))\n  }\n\n  isBlockBreak() {\n    return false\n  }\n\n  isEqualTo(piece) {\n    return (\n      super.isEqualTo(...arguments) ||\n      this.hasSameConstructorAs(piece) &&\n        this.hasSameStringValueAsPiece(piece) &&\n        this.hasSameAttributesAsPiece(piece)\n    )\n  }\n\n  isEmpty() {\n    return this.length === 0\n  }\n\n  isSerializable() {\n    return true\n  }\n\n  toJSON() {\n    return {\n      type: this.constructor.type,\n      attributes: this.getAttributes(),\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      type: this.constructor.type,\n      attributes: this.attributes.inspect(),\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped() {\n    return this.hasAttribute(\"href\")\n  }\n\n  canBeGroupedWith(piece) {\n    return this.getAttribute(\"href\") === piece.getAttribute(\"href\")\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.length\n  }\n\n  canBeConsolidatedWith(piece) {\n    return false\n  }\n}\n", "import Operation from \"trix/core/utilities/operation\"\n\nexport default class ImagePreloadOperation extends Operation {\n  constructor(url) {\n    super(...arguments)\n    this.url = url\n  }\n\n  perform(callback) {\n    const image = new Image()\n\n    image.onload = () => {\n      image.width = this.width = image.naturalWidth\n      image.height = this.height = image.naturalHeight\n      return callback(true, image)\n    }\n\n    image.onerror = () => callback(false)\n\n    image.src = this.url\n  }\n}\n", "import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\nimport ImagePreloadOperation from \"trix/operations/image_preload_operation\"\n\nexport default class Attachment extends TrixObject {\n  static previewablePattern = /^image(\\/(gif|png|webp|jpe?g)|$)/\n\n  static attachmentForFile(file) {\n    const attributes = this.attributesForFile(file)\n    const attachment = new this(attributes)\n    attachment.setFile(file)\n    return attachment\n  }\n\n  static attributesForFile(file) {\n    return new Hash({\n      filename: file.name,\n      filesize: file.size,\n      contentType: file.type,\n    })\n  }\n\n  static fromJSON(attachmentJSON) {\n    return new this(attachmentJSON)\n  }\n\n  constructor(attributes = {}) {\n    super(attributes)\n    this.releaseFile = this.releaseFile.bind(this)\n    this.attributes = Hash.box(attributes)\n    this.didChangeAttributes()\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  setAttributes(attributes = {}) {\n    const newAttributes = this.attributes.merge(attributes)\n    if (!this.attributes.isEqualTo(newAttributes)) {\n      this.attributes = newAttributes\n      this.didChangeAttributes()\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangeAttributes?.(this)\n    }\n  }\n\n  didChangeAttributes() {\n    if (this.isPreviewable()) {\n      return this.preloadURL()\n    }\n  }\n\n  isPending() {\n    return this.file != null && !(this.getURL() || this.getHref())\n  }\n\n  isPreviewable() {\n    if (this.attributes.has(\"previewable\")) {\n      return this.attributes.get(\"previewable\")\n    } else {\n      return Attachment.previewablePattern.test(this.getContentType())\n    }\n  }\n\n  getType() {\n    if (this.hasContent()) {\n      return \"content\"\n    } else if (this.isPreviewable()) {\n      return \"preview\"\n    } else {\n      return \"file\"\n    }\n  }\n\n  getURL() {\n    return this.attributes.get(\"url\")\n  }\n\n  getHref() {\n    return this.attributes.get(\"href\")\n  }\n\n  getFilename() {\n    return this.attributes.get(\"filename\") || \"\"\n  }\n\n  getFilesize() {\n    return this.attributes.get(\"filesize\")\n  }\n\n  getFormattedFilesize() {\n    const filesize = this.attributes.get(\"filesize\")\n    if (typeof filesize === \"number\") {\n      return config.fileSize.formatter(filesize)\n    } else {\n      return \"\"\n    }\n  }\n\n  getExtension() {\n    return this.getFilename()\n      .match(/\\.(\\w+)$/)?.[1]\n      .toLowerCase()\n  }\n\n  getContentType() {\n    return this.attributes.get(\"contentType\")\n  }\n\n  hasContent() {\n    return this.attributes.has(\"content\")\n  }\n\n  getContent() {\n    return this.attributes.get(\"content\")\n  }\n\n  getWidth() {\n    return this.attributes.get(\"width\")\n  }\n\n  getHeight() {\n    return this.attributes.get(\"height\")\n  }\n\n  getFile() {\n    return this.file\n  }\n\n  setFile(file) {\n    this.file = file\n    if (this.isPreviewable()) {\n      return this.preloadFile()\n    }\n  }\n\n  releaseFile() {\n    this.releasePreloadedFile()\n    this.file = null\n  }\n\n  getUploadProgress() {\n    return this.uploadProgress != null ? this.uploadProgress : 0\n  }\n\n  setUploadProgress(value) {\n    if (this.uploadProgress !== value) {\n      this.uploadProgress = value\n      return this.uploadProgressDelegate?.attachmentDidChangeUploadProgress?.(this)\n    }\n  }\n\n  toJSON() {\n    return this.getAttributes()\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attributes.getCacheKey(), this.getPreviewURL() ].join(\"/\")\n  }\n\n  // Previewable\n\n  getPreviewURL() {\n    return this.previewURL || this.preloadingURL\n  }\n\n  setPreviewURL(url) {\n    if (url !== this.getPreviewURL()) {\n      this.previewURL = url\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangePreviewURL?.(this)\n    }\n  }\n\n  preloadURL() {\n    return this.preload(this.getURL(), this.releaseFile)\n  }\n\n  preloadFile() {\n    if (this.file) {\n      this.fileObjectURL = URL.createObjectURL(this.file)\n      return this.preload(this.fileObjectURL)\n    }\n  }\n\n  releasePreloadedFile() {\n    if (this.fileObjectURL) {\n      URL.revokeObjectURL(this.fileObjectURL)\n      this.fileObjectURL = null\n    }\n  }\n\n  preload(url, callback) {\n    if (url && url !== this.getPreviewURL()) {\n      this.preloadingURL = url\n      const operation = new ImagePreloadOperation(url)\n      return operation\n        .then(({ width, height }) => {\n          if (!this.getWidth() || !this.getHeight()) {\n            this.setAttributes({ width, height })\n          }\n          this.preloadingURL = null\n          this.setPreviewURL(url)\n          return callback?.()\n        })\n        .catch(() => {\n          this.preloadingURL = null\n          return callback?.()\n        })\n    }\n  }\n}\n", "import { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport Attachment from \"trix/models/attachment\"\nimport Piece from \"trix/models/piece\"\n\nexport default class AttachmentPiece extends Piece {\n  static permittedAttributes = [ \"caption\", \"presentation\" ]\n\n  static fromJSON(pieceJSON) {\n    return new this(Attachment.fromJSON(pieceJSON.attachment), pieceJSON.attributes)\n  }\n\n  constructor(attachment) {\n    super(...arguments)\n    this.attachment = attachment\n    this.length = 1\n    this.ensureAttachmentExclusivelyHasAttribute(\"href\")\n    if (!this.attachment.hasContent()) {\n      this.removeProhibitedAttributes()\n    }\n  }\n\n  ensureAttachmentExclusivelyHasAttribute(attribute) {\n    if (this.hasAttribute(attribute)) {\n      if (!this.attachment.hasAttribute(attribute)) {\n        this.attachment.setAttributes(this.attributes.slice([ attribute ]))\n      }\n      this.attributes = this.attributes.remove(attribute)\n    }\n  }\n\n  removeProhibitedAttributes() {\n    const attributes = this.attributes.slice(AttachmentPiece.permittedAttributes)\n    if (!attributes.isEqualTo(this.attributes)) {\n      this.attributes = attributes\n    }\n  }\n\n  getValue() {\n    return this.attachment\n  }\n\n  isSerializable() {\n    return !this.attachment.isPending()\n  }\n\n  getCaption() {\n    return this.attributes.get(\"caption\") || \"\"\n  }\n\n  isEqualTo(piece) {\n    return super.isEqualTo(piece) && this.attachment.id === piece?.attachment?.id\n  }\n\n  toString() {\n    return OBJECT_REPLACEMENT_CHARACTER\n  }\n\n  toJSON() {\n    const json = super.toJSON(...arguments)\n    json.attachment = this.attachment\n    return json\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attachment.getCacheKey() ].join(\"/\")\n  }\n\n  toConsole() {\n    return JSON.stringify(this.toString())\n  }\n}\n\nPiece.registerType(\"attachment\", AttachmentPiece)\n", "import Piece from \"trix/models/piece\"\n\nimport { normalizeNewlines } from \"trix/core/helpers\"\n\nexport default class StringPiece extends Piece {\n  static fromJSON(pieceJSON) {\n    return new this(pieceJSON.string, pieceJSON.attributes)\n  }\n\n  constructor(string) {\n    super(...arguments)\n    this.string = normalizeNewlines(string)\n    this.length = this.string.length\n  }\n\n  getValue() {\n    return this.string\n  }\n\n  toString() {\n    return this.string.toString()\n  }\n\n  isBlockBreak() {\n    return this.toString() === \"\\n\" && this.getAttribute(\"blockBreak\") === true\n  }\n\n  toJSON() {\n    const result = super.toJSON(...arguments)\n    result.string = this.string\n    return result\n  }\n\n  // Splittable\n\n  canBeConsolidatedWith(piece) {\n    return piece && this.hasSameConstructorAs(piece) && this.hasSameAttributesAsPiece(piece)\n  }\n\n  consolidateWith(piece) {\n    return new this.constructor(this.toString() + piece.toString(), this.attributes)\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.length) {\n      left = this\n      right = null\n    } else {\n      left = new this.constructor(this.string.slice(0, offset), this.attributes)\n      right = new this.constructor(this.string.slice(offset), this.attributes)\n    }\n    return [ left, right ]\n  }\n\n  toConsole() {\n    let { string } = this\n    if (string.length > 15) {\n      string = string.slice(0, 14) + \"…\"\n    }\n    return JSON.stringify(string.toString())\n  }\n}\n\nPiece.registerType(\"string\", StringPiece)\n", "/* eslint-disable\n    prefer-const,\n*/\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { spliceArray } from \"trix/core/helpers\"\n\nexport default class SplittableList extends TrixObject {\n  static box(objects) {\n    if (objects instanceof this) {\n      return objects\n    } else {\n      return new this(objects)\n    }\n  }\n\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = objects.slice(0)\n    this.length = this.objects.length\n  }\n\n  indexOf(object) {\n    return this.objects.indexOf(object)\n  }\n\n  splice(...args) {\n    return new this.constructor(spliceArray(this.objects, ...args))\n  }\n\n  eachObject(callback) {\n    return this.objects.map((object, index) => callback(object, index))\n  }\n\n  insertObjectAtIndex(object, index) {\n    return this.splice(index, 0, object)\n  }\n\n  insertSplittableListAtIndex(splittableList, index) {\n    return this.splice(index, 0, ...splittableList.objects)\n  }\n\n  insertSplittableListAtPosition(splittableList, position) {\n    const [ objects, index ] = this.splitObjectAtPosition(position)\n    return new this.constructor(objects).insertSplittableListAtIndex(splittableList, index)\n  }\n\n  editObjectAtIndex(index, callback) {\n    return this.replaceObjectAtIndex(callback(this.objects[index]), index)\n  }\n\n  replaceObjectAtIndex(object, index) {\n    return this.splice(index, 1, object)\n  }\n\n  removeObjectAtIndex(index) {\n    return this.splice(index, 1)\n  }\n\n  getObjectAtIndex(index) {\n    return this.objects[index]\n  }\n\n  getSplittableListInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects.slice(leftIndex, rightIndex + 1))\n  }\n\n  selectSplittableList(test) {\n    const objects = this.objects.filter((object) => test(object))\n    return new this.constructor(objects)\n  }\n\n  removeObjectsInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects).splice(leftIndex, rightIndex - leftIndex + 1)\n  }\n\n  transformObjectsInRange(range, transform) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    const transformedObjects = objects.map((object, index) =>\n      leftIndex <= index && index <= rightIndex ? transform(object) : object\n    )\n    return new this.constructor(transformedObjects)\n  }\n\n  splitObjectsAtRange(range) {\n    let rightOuterIndex\n    let [ objects, leftInnerIndex, offset ] = this.splitObjectAtPosition(startOfRange(range))\n    ;[ objects, rightOuterIndex ] = new this.constructor(objects).splitObjectAtPosition(endOfRange(range) + offset)\n\n    return [ objects, leftInnerIndex, rightOuterIndex - 1 ]\n  }\n\n  getObjectAtPosition(position) {\n    const { index } = this.findIndexAndOffsetAtPosition(position)\n    return this.objects[index]\n  }\n\n  splitObjectAtPosition(position) {\n    let splitIndex, splitOffset\n    const { index, offset } = this.findIndexAndOffsetAtPosition(position)\n    const objects = this.objects.slice(0)\n    if (index != null) {\n      if (offset === 0) {\n        splitIndex = index\n        splitOffset = 0\n      } else {\n        const object = this.getObjectAtIndex(index)\n        const [ leftObject, rightObject ] = object.splitAtOffset(offset)\n        objects.splice(index, 1, leftObject, rightObject)\n        splitIndex = index + 1\n        splitOffset = leftObject.getLength() - offset\n      }\n    } else {\n      splitIndex = objects.length\n      splitOffset = 0\n    }\n\n    return [ objects, splitIndex, splitOffset ]\n  }\n\n  consolidate() {\n    const objects = []\n    let pendingObject = this.objects[0]\n\n    this.objects.slice(1).forEach((object) => {\n      if (pendingObject.canBeConsolidatedWith?.(object)) {\n        pendingObject = pendingObject.consolidateWith(object)\n      } else {\n        objects.push(pendingObject)\n        pendingObject = object\n      }\n    })\n\n    if (pendingObject) {\n      objects.push(pendingObject)\n    }\n\n    return new this.constructor(objects)\n  }\n\n  consolidateFromIndexToIndex(startIndex, endIndex) {\n    const objects = this.objects.slice(0)\n    const objectsInRange = objects.slice(startIndex, endIndex + 1)\n    const consolidatedInRange = new this.constructor(objectsInRange).consolidate().toArray()\n    return this.splice(startIndex, objectsInRange.length, ...consolidatedInRange)\n  }\n\n  findIndexAndOffsetAtPosition(position) {\n    let index\n    let currentPosition = 0\n    for (index = 0; index < this.objects.length; index++) {\n      const object = this.objects[index]\n      const nextPosition = currentPosition + object.getLength()\n      if (currentPosition <= position && position < nextPosition) {\n        return { index, offset: position - currentPosition }\n      }\n      currentPosition = nextPosition\n    }\n    return { index: null, offset: null }\n  }\n\n  findPositionAtIndexAndOffset(index, offset) {\n    let position = 0\n    for (let currentIndex = 0; currentIndex < this.objects.length; currentIndex++) {\n      const object = this.objects[currentIndex]\n      if (currentIndex < index) {\n        position += object.getLength()\n      } else if (currentIndex === index) {\n        position += offset\n        break\n      }\n    }\n    return position\n  }\n\n  getEndPosition() {\n    if (this.endPosition == null) {\n      this.endPosition = 0\n      this.objects.forEach((object) => this.endPosition += object.getLength())\n    }\n\n    return this.endPosition\n  }\n\n  toString() {\n    return this.objects.join(\"\")\n  }\n\n  toArray() {\n    return this.objects.slice(0)\n  }\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  isEqualTo(splittableList) {\n    return super.isEqualTo(...arguments) || objectArraysAreEqual(this.objects, splittableList?.objects)\n  }\n\n  contentsForInspection() {\n    return {\n      objects: `[${this.objects.map((object) => object.inspect()).join(\", \")}]`,\n    }\n  }\n}\n\nconst objectArraysAreEqual = function(left, right = []) {\n  if (left.length !== right.length) {\n    return false\n  }\n  let result = true\n  for (let index = 0; index < left.length; index++) {\n    const object = left[index]\n    if (result && !object.isEqualTo(right[index])) {\n      result = false\n    }\n  }\n  return result\n}\n\nconst startOfRange = (range) => range[0]\n\nconst endOfRange = (range) => range[1]\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { getDirection } from \"trix/core/helpers\"\n\nimport Piece from \"trix/models/piece\"\nimport AttachmentPiece from \"trix/models/attachment_piece\"\nimport StringPiece from \"trix/models/string_piece\"\nimport SplittableList from \"trix/models/splittable_list\"\n\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Text extends TrixObject {\n  static textForAttachmentWithAttributes(attachment, attributes) {\n    const piece = new AttachmentPiece(attachment, attributes)\n    return new this([ piece ])\n  }\n\n  static textForStringWithAttributes(string, attributes) {\n    const piece = new StringPiece(string, attributes)\n    return new this([ piece ])\n  }\n\n  static fromJSON(textJSON) {\n    const pieces = Array.from(textJSON).map((pieceJSON) => Piece.fromJSON(pieceJSON))\n    return new this(pieces)\n  }\n\n  constructor(pieces = []) {\n    super(...arguments)\n    const notEmpty = pieces.filter((piece) => !piece.isEmpty())\n    this.pieceList = new SplittableList(notEmpty)\n  }\n\n  copy() {\n    return this.copyWithPieceList(this.pieceList)\n  }\n\n  copyWithPieceList(pieceList) {\n    return new this.constructor(pieceList.consolidate().toArray())\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const pieces = this.getPieces().map((piece) => objectMap.find(piece) || piece)\n    return new this.constructor(pieces)\n  }\n\n  appendText(text) {\n    return this.insertTextAtPosition(text, this.getLength())\n  }\n\n  insertTextAtPosition(text, position) {\n    return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(text.pieceList, position))\n  }\n\n  removeTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.removeObjectsInRange(range))\n  }\n\n  replaceTextAtRange(text, range) {\n    return this.removeTextAtRange(range).insertTextAtPosition(text, range[0])\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    if (range[0] <= position && position <= range[1]) return\n    const text = this.getTextAtRange(range)\n    const length = text.getLength()\n    if (range[0] < position) {\n      position -= length\n    }\n    return this.removeTextAtRange(range).insertTextAtPosition(text, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    const attributes = {}\n    attributes[attribute] = value\n    return this.addAttributesAtRange(attributes, range)\n  }\n\n  addAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAdditionalAttributes(attributes))\n    )\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithoutAttribute(attribute))\n    )\n  }\n\n  setAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAttributes(attributes))\n    )\n  }\n\n  getAttributesAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)?.getAttributes() || {}\n  }\n\n  getCommonAttributes() {\n    const objects = Array.from(this.pieceList.toArray()).map((piece) => piece.getAttributes())\n    return Hash.fromCommonAttributesOfObjects(objects).toObject()\n  }\n\n  getCommonAttributesAtRange(range) {\n    return this.getTextAtRange(range).getCommonAttributes() || {}\n  }\n\n  getExpandedRangeForAttributeAtOffset(attributeName, offset) {\n    let right\n    let left = right = offset\n    const length = this.getLength()\n\n    while (left > 0 && this.getCommonAttributesAtRange([ left - 1, right ])[attributeName]) {\n      left--\n    }\n    while (right < length && this.getCommonAttributesAtRange([ offset, right + 1 ])[attributeName]) {\n      right++\n    }\n\n    return [ left, right ]\n  }\n\n  getTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.getSplittableListInRange(range))\n  }\n\n  getStringAtRange(range) {\n    return this.pieceList.getSplittableListInRange(range).toString()\n  }\n\n  getStringAtPosition(position) {\n    return this.getStringAtRange([ position, position + 1 ])\n  }\n\n  startsWithString(string) {\n    return this.getStringAtRange([ 0, string.length ]) === string\n  }\n\n  endsWithString(string) {\n    const length = this.getLength()\n    return this.getStringAtRange([ length - string.length, length ]) === string\n  }\n\n  getAttachmentPieces() {\n    return this.pieceList.toArray().filter((piece) => !!piece.attachment)\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getAttachmentAndPositionById(attachmentId) {\n    let position = 0\n    for (const piece of this.pieceList.toArray()) {\n      if (piece.attachment?.id === attachmentId) {\n        return { attachment: piece.attachment, position }\n      }\n      position += piece.length\n    }\n    return { attachment: null, position: null }\n  }\n\n  getAttachmentById(attachmentId) {\n    const { attachment } = this.getAttachmentAndPositionById(attachmentId)\n    return attachment\n  }\n\n  getRangeOfAttachment(attachment) {\n    const attachmentAndPosition = this.getAttachmentAndPositionById(attachment.id)\n    const position = attachmentAndPosition.position\n    attachment = attachmentAndPosition.attachment\n    if (attachment) {\n      return [ position, position + 1 ]\n    }\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    if (range) {\n      return this.addAttributesAtRange(attributes, range)\n    } else {\n      return this\n    }\n  }\n\n  getLength() {\n    return this.pieceList.getEndPosition()\n  }\n\n  isEmpty() {\n    return this.getLength() === 0\n  }\n\n  isEqualTo(text) {\n    return super.isEqualTo(text) || text?.pieceList?.isEqualTo(this.pieceList)\n  }\n\n  isBlockBreak() {\n    return this.getLength() === 1 && this.pieceList.getObjectAtIndex(0).isBlockBreak()\n  }\n\n  eachPiece(callback) {\n    return this.pieceList.eachObject(callback)\n  }\n\n  getPieces() {\n    return this.pieceList.toArray()\n  }\n\n  getPieceAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)\n  }\n\n  contentsForInspection() {\n    return { pieceList: this.pieceList.inspect() }\n  }\n\n  toSerializableText() {\n    const pieceList = this.pieceList.selectSplittableList((piece) => piece.isSerializable())\n    return this.copyWithPieceList(pieceList)\n  }\n\n  toString() {\n    return this.pieceList.toString()\n  }\n\n  toJSON() {\n    return this.pieceList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.pieceList.toArray().map((piece) => JSON.parse(piece.toConsole())))\n  }\n\n  // BIDI\n\n  getDirection() {\n    return getDirection(this.toString())\n  }\n\n  isRTL() {\n    return this.getDirection() === \"rtl\"\n  }\n}\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Text from \"trix/models/text\"\n\nimport {\n  arraysAreEqual,\n  getBlockConfig,\n  getListAttributeNames,\n  objectsAreEqual,\n  spliceArray,\n} from \"trix/core/helpers\"\n\nexport default class Block extends TrixObject {\n  static fromJSON(blockJSON) {\n    const text = Text.fromJSON(blockJSON.text)\n    return new this(text, blockJSON.attributes, blockJSON.htmlAttributes)\n  }\n\n  constructor(text, attributes, htmlAttributes) {\n    super(...arguments)\n    this.text = applyBlockBreakToText(text || new Text())\n    this.attributes = attributes || []\n    this.htmlAttributes = htmlAttributes || {}\n  }\n\n  isEmpty() {\n    return this.text.isBlockBreak()\n  }\n\n  isEqualTo(block) {\n    if (super.isEqualTo(block)) return true\n\n    return this.text.isEqualTo(block?.text) && arraysAreEqual(this.attributes, block?.attributes) && objectsAreEqual(this.htmlAttributes, block?.htmlAttributes)\n  }\n\n  copyWithText(text) {\n    return new Block(text, this.attributes, this.htmlAttributes)\n  }\n\n  copyWithoutText() {\n    return this.copyWithText(null)\n  }\n\n  copyWithAttributes(attributes) {\n    return new Block(this.text, attributes, this.htmlAttributes)\n  }\n\n  copyWithoutAttributes() {\n    return this.copyWithAttributes(null)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const mappedText = objectMap.find(this.text)\n    if (mappedText) {\n      return this.copyWithText(mappedText)\n    } else {\n      return this.copyWithText(this.text.copyUsingObjectMap(objectMap))\n    }\n  }\n\n  addAttribute(attribute) {\n    const attributes = this.attributes.concat(expandAttribute(attribute))\n    return this.copyWithAttributes(attributes)\n  }\n\n  addHTMLAttribute(attribute, value) {\n    const htmlAttributes = Object.assign({}, this.htmlAttributes, { [attribute]: value })\n    return new Block(this.text, this.attributes, htmlAttributes)\n  }\n\n  removeAttribute(attribute) {\n    const { listAttribute } = getBlockConfig(attribute)\n    const attributes = removeLastValue(removeLastValue(this.attributes, attribute), listAttribute)\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeLastAttribute() {\n    return this.removeAttribute(this.getLastAttribute())\n  }\n\n  getLastAttribute() {\n    return getLastElement(this.attributes)\n  }\n\n  getAttributes() {\n    return this.attributes.slice(0)\n  }\n\n  getAttributeLevel() {\n    return this.attributes.length\n  }\n\n  getAttributeAtLevel(level) {\n    return this.attributes[level - 1]\n  }\n\n  hasAttribute(attributeName) {\n    return this.attributes.includes(attributeName)\n  }\n\n  hasAttributes() {\n    return this.getAttributeLevel() > 0\n  }\n\n  getLastNestableAttribute() {\n    return getLastElement(this.getNestableAttributes())\n  }\n\n  getNestableAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).nestable)\n  }\n\n  getNestingLevel() {\n    return this.getNestableAttributes().length\n  }\n\n  decreaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      return this.removeAttribute(attribute)\n    } else {\n      return this\n    }\n  }\n\n  increaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      const index = this.attributes.lastIndexOf(attribute)\n      const attributes = spliceArray(this.attributes, index + 1, 0, ...expandAttribute(attribute))\n      return this.copyWithAttributes(attributes)\n    } else {\n      return this\n    }\n  }\n\n  getListItemAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).listAttribute)\n  }\n\n  isListItem() {\n    return getBlockConfig(this.getLastAttribute())?.listAttribute\n  }\n\n  isTerminalBlock() {\n    return getBlockConfig(this.getLastAttribute())?.terminal\n  }\n\n  breaksOnReturn() {\n    return getBlockConfig(this.getLastAttribute())?.breakOnReturn\n  }\n\n  findLineBreakInDirectionFromPosition(direction, position) {\n    const string = this.toString()\n    let result\n    switch (direction) {\n      case \"forward\":\n        result = string.indexOf(\"\\n\", position)\n        break\n      case \"backward\":\n        result = string.slice(0, position).lastIndexOf(\"\\n\")\n    }\n\n    if (result !== -1) {\n      return result\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      text: this.text.inspect(),\n      attributes: this.attributes,\n    }\n  }\n\n  toString() {\n    return this.text.toString()\n  }\n\n  toJSON() {\n    return {\n      text: this.text,\n      attributes: this.attributes,\n      htmlAttributes: this.htmlAttributes,\n    }\n  }\n\n  // BIDI\n\n  getDirection() {\n    return this.text.getDirection()\n  }\n\n  isRTL() {\n    return this.text.isRTL()\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.text.getLength()\n  }\n\n  canBeConsolidatedWith(block) {\n    return !this.hasAttributes() && !block.hasAttributes() && this.getDirection() === block.getDirection()\n  }\n\n  consolidateWith(block) {\n    const newlineText = Text.textForStringWithAttributes(\"\\n\")\n    const text = this.getTextWithoutBlockBreak().appendText(newlineText)\n    return this.copyWithText(text.appendText(block.text))\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.getLength()) {\n      left = this\n      right = null\n    } else {\n      left = this.copyWithText(this.text.getTextAtRange([ 0, offset ]))\n      right = this.copyWithText(this.text.getTextAtRange([ offset, this.getLength() ]))\n    }\n    return [ left, right ]\n  }\n\n  getBlockBreakPosition() {\n    return this.text.getLength() - 1\n  }\n\n  getTextWithoutBlockBreak() {\n    if (textEndsInBlockBreak(this.text)) {\n      return this.text.getTextAtRange([ 0, this.getBlockBreakPosition() ])\n    } else {\n      return this.text.copy()\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped(depth) {\n    return this.attributes[depth]\n  }\n\n  canBeGroupedWith(otherBlock, depth) {\n    const otherAttributes = otherBlock.getAttributes()\n    const otherAttribute = otherAttributes[depth]\n    const attribute = this.attributes[depth]\n\n    return (\n      attribute === otherAttribute &&\n      !(getBlockConfig(attribute).group === false && !getListAttributeNames().includes(otherAttributes[depth + 1])) &&\n      (this.getDirection() === otherBlock.getDirection() || otherBlock.isEmpty())\n    )\n  }\n}\n\n// Block breaks\n\nconst applyBlockBreakToText = function(text) {\n  text = unmarkExistingInnerBlockBreaksInText(text)\n  text = addBlockBreakToText(text)\n  return text\n}\n\nconst unmarkExistingInnerBlockBreaksInText = function(text) {\n  let modified = false\n  const pieces = text.getPieces()\n\n  let innerPieces = pieces.slice(0, pieces.length - 1)\n  const lastPiece = pieces[pieces.length - 1]\n\n  if (!lastPiece) return text\n\n  innerPieces = innerPieces.map((piece) => {\n    if (piece.isBlockBreak()) {\n      modified = true\n      return unmarkBlockBreakPiece(piece)\n    } else {\n      return piece\n    }\n  })\n\n  if (modified) {\n    return new Text([ ...innerPieces, lastPiece ])\n  } else {\n    return text\n  }\n}\n\nconst blockBreakText = Text.textForStringWithAttributes(\"\\n\", { blockBreak: true })\n\nconst addBlockBreakToText = function(text) {\n  if (textEndsInBlockBreak(text)) {\n    return text\n  } else {\n    return text.appendText(blockBreakText)\n  }\n}\n\nconst textEndsInBlockBreak = function(text) {\n  const length = text.getLength()\n  if (length === 0) {\n    return false\n  }\n  const endText = text.getTextAtRange([ length - 1, length ])\n  return endText.isBlockBreak()\n}\n\nconst unmarkBlockBreakPiece = (piece) => piece.copyWithoutAttribute(\"blockBreak\")\n\n// Attributes\n\nconst expandAttribute = function(attribute) {\n  const { listAttribute } = getBlockConfig(attribute)\n  if (listAttribute) {\n    return [ listAttribute, attribute ]\n  } else {\n    return [ attribute ]\n  }\n}\n\n// Array helpers\n\nconst getLastElement = (array) => array.slice(-1)[0]\n\nconst removeLastValue = function(array, value) {\n  const index = array.lastIndexOf(value)\n  if (index === -1) {\n    return array\n  } else {\n    return spliceArray(array, index, 1)\n  }\n}\n", "import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport SplittableList from \"trix/models/splittable_list\"\nimport Hash from \"trix/core/collections/hash\"\nimport ObjectMap from \"trix/core/collections/object_map\"\n\nimport { arraysAreEqual, getBlockConfig, normalizeRange, rangeIsCollapsed } from \"trix/core/helpers\"\n\nexport default class Document extends TrixObject {\n  static fromJSON(documentJSON) {\n    const blocks = Array.from(documentJSON).map((blockJSON) => Block.fromJSON(blockJSON))\n    return new this(blocks)\n  }\n\n  static fromString(string, textAttributes) {\n    const text = Text.textForStringWithAttributes(string, textAttributes)\n    return new this([ new Block(text) ])\n  }\n\n  constructor(blocks = []) {\n    super(...arguments)\n    if (blocks.length === 0) {\n      blocks = [ new Block() ]\n    }\n    this.blockList = SplittableList.box(blocks)\n  }\n\n  isEmpty() {\n    const block = this.getBlockAtIndex(0)\n    return this.blockList.length === 1 && block.isEmpty() && !block.hasAttributes()\n  }\n\n  copy(options = {}) {\n    const blocks = options.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray()\n\n    return new this.constructor(blocks)\n  }\n\n  copyUsingObjectsFromDocument(sourceDocument) {\n    const objectMap = new ObjectMap(sourceDocument.getObjects())\n    return this.copyUsingObjectMap(objectMap)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const blocks = this.getBlocks().map((block) => {\n      const mappedBlock = objectMap.find(block)\n      return mappedBlock || block.copyUsingObjectMap(objectMap)\n    })\n    return new this.constructor(blocks)\n  }\n\n  copyWithBaseBlockAttributes(blockAttributes = []) {\n    const blocks = this.getBlocks().map((block) => {\n      const attributes = blockAttributes.concat(block.getAttributes())\n      return block.copyWithAttributes(attributes)\n    })\n\n    return new this.constructor(blocks)\n  }\n\n  replaceBlock(oldBlock, newBlock) {\n    const index = this.blockList.indexOf(oldBlock)\n    if (index === -1) {\n      return this\n    }\n    return new this.constructor(this.blockList.replaceObjectAtIndex(newBlock, index))\n  }\n\n  insertDocumentAtRange(document, range) {\n    const { blockList } = document\n    range = normalizeRange(range)\n    let [ position ] = range\n    const { index, offset } = this.locationFromPosition(position)\n\n    let result = this\n    const block = this.getBlockAtPosition(position)\n\n    if (rangeIsCollapsed(range) && block.isEmpty() && !block.hasAttributes()) {\n      result = new this.constructor(result.blockList.removeObjectAtIndex(index))\n    } else if (block.getBlockBreakPosition() === offset) {\n      position++\n    }\n\n    result = result.removeTextAtRange(range)\n    return new this.constructor(result.blockList.insertSplittableListAtPosition(blockList, position))\n  }\n\n  mergeDocumentAtRange(document, range) {\n    let formattedDocument, result\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const blockAttributes = this.getBlockAtIndex(startLocation.index).getAttributes()\n    const baseBlockAttributes = document.getBaseBlockAttributes()\n    const trailingBlockAttributes = blockAttributes.slice(-baseBlockAttributes.length)\n\n    if (arraysAreEqual(baseBlockAttributes, trailingBlockAttributes)) {\n      const leadingBlockAttributes = blockAttributes.slice(0, -baseBlockAttributes.length)\n      formattedDocument = document.copyWithBaseBlockAttributes(leadingBlockAttributes)\n    } else {\n      formattedDocument = document.copy({ consolidateBlocks: true }).copyWithBaseBlockAttributes(blockAttributes)\n    }\n\n    const blockCount = formattedDocument.getBlockCount()\n    const firstBlock = formattedDocument.getBlockAtIndex(0)\n\n    if (arraysAreEqual(blockAttributes, firstBlock.getAttributes())) {\n      const firstText = firstBlock.getTextWithoutBlockBreak()\n      result = this.insertTextAtRange(firstText, range)\n\n      if (blockCount > 1) {\n        formattedDocument = new this.constructor(formattedDocument.getBlocks().slice(1))\n        const position = startPosition + firstText.getLength()\n        result = result.insertDocumentAtRange(formattedDocument, position)\n      }\n    } else {\n      result = this.insertDocumentAtRange(formattedDocument, range)\n    }\n\n    return result\n  }\n\n  insertTextAtRange(text, range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { index, offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    return new this.constructor(\n      document.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(block.text.insertTextAtPosition(text, offset))\n      )\n    )\n  }\n\n  removeTextAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ leftPosition, rightPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this\n    }\n    const [ leftLocation, rightLocation ] = Array.from(this.locationRangeFromRange(range))\n\n    const leftIndex = leftLocation.index\n    const leftOffset = leftLocation.offset\n    const leftBlock = this.getBlockAtIndex(leftIndex)\n\n    const rightIndex = rightLocation.index\n    const rightOffset = rightLocation.offset\n    const rightBlock = this.getBlockAtIndex(rightIndex)\n\n    const removeRightNewline =\n      rightPosition - leftPosition === 1 &&\n      leftBlock.getBlockBreakPosition() === leftOffset &&\n      rightBlock.getBlockBreakPosition() !== rightOffset &&\n      rightBlock.text.getStringAtPosition(rightOffset) === \"\\n\"\n\n    if (removeRightNewline) {\n      blocks = this.blockList.editObjectAtIndex(rightIndex, (block) =>\n        block.copyWithText(block.text.removeTextAtRange([ rightOffset, rightOffset + 1 ]))\n      )\n    } else {\n      let block\n      const leftText = leftBlock.text.getTextAtRange([ 0, leftOffset ])\n      const rightText = rightBlock.text.getTextAtRange([ rightOffset, rightBlock.getLength() ])\n      const text = leftText.appendText(rightText)\n\n      const removingLeftBlock = leftIndex !== rightIndex && leftOffset === 0\n      const useRightBlock = removingLeftBlock && leftBlock.getAttributeLevel() >= rightBlock.getAttributeLevel()\n\n      if (useRightBlock) {\n        block = rightBlock.copyWithText(text)\n      } else {\n        block = leftBlock.copyWithText(text)\n      }\n\n      const affectedBlockCount = rightIndex + 1 - leftIndex\n      blocks = this.blockList.splice(leftIndex, affectedBlockCount, block)\n    }\n\n    return new this.constructor(blocks)\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    let text\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    if (startPosition <= position && position <= endPosition) {\n      return this\n    }\n\n    let document = this.getDocumentAtRange(range)\n    let result = this.removeTextAtRange(range)\n\n    const movingRightward = startPosition < position\n    if (movingRightward) {\n      position -= document.getLength()\n    }\n\n    const [ firstBlock, ...blocks ] = document.getBlocks()\n    if (blocks.length === 0) {\n      text = firstBlock.getTextWithoutBlockBreak()\n      if (movingRightward) {\n        position += 1\n      }\n    } else {\n      text = firstBlock.text\n    }\n\n    result = result.insertTextAtRange(text, position)\n    if (blocks.length === 0) {\n      return result\n    }\n\n    document = new this.constructor(blocks)\n    position += text.getLength()\n\n    return result.insertDocumentAtRange(document, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(\n      range,\n      (block, textRange, index) =>\n        blockList = blockList.editObjectAtIndex(index, function() {\n          if (getBlockConfig(attribute)) {\n            return block.addAttribute(attribute, value)\n          } else {\n            if (textRange[0] === textRange[1]) {\n              return block\n            } else {\n              return block.copyWithText(block.text.addAttributeAtRange(attribute, value, textRange))\n            }\n          }\n        })\n    )\n    return new this.constructor(blockList)\n  }\n\n  addAttribute(attribute, value) {\n    let { blockList } = this\n    this.eachBlock(\n      (block, index) => blockList = blockList.editObjectAtIndex(index, () => block.addAttribute(attribute, value))\n    )\n    return new this.constructor(blockList)\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (getBlockConfig(attribute)) {\n        blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(attribute))\n      } else if (textRange[0] !== textRange[1]) {\n        blockList = blockList.editObjectAtIndex(index, () =>\n          block.copyWithText(block.text.removeAttributeAtRange(attribute, textRange))\n        )\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    const [ startPosition ] = Array.from(range)\n    const { index } = this.locationFromPosition(startPosition)\n    const text = this.getTextAtIndex(index)\n\n    return new this.constructor(\n      this.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(text.updateAttributesForAttachment(attributes, attachment))\n      )\n    )\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.removeAttributeAtRange(attribute, range)\n  }\n\n  setHTMLAttributeAtPosition(position, name, value) {\n    const block = this.getBlockAtPosition(position)\n    const updatedBlock = block.addHTMLAttribute(name, value)\n    return this.replaceBlock(block, updatedBlock)\n  }\n\n  insertBlockBreakAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    if (offset === 0) {\n      blocks = [ new Block() ]\n    }\n    return new this.constructor(\n      document.blockList.insertSplittableListAtPosition(new SplittableList(blocks), startPosition)\n    )\n  }\n\n  applyBlockAttributeAtRange(attributeName, value, range) {\n    const expanded = this.expandRangeToLineBreaksAndSplitBlocks(range)\n    let document = expanded.document\n    range = expanded.range\n    const blockConfig = getBlockConfig(attributeName)\n\n    if (blockConfig.listAttribute) {\n      document = document.removeLastListAttributeAtRange(range, { exceptAttributeName: attributeName })\n      const converted = document.convertLineBreaksToBlockBreaksInRange(range)\n      document = converted.document\n      range = converted.range\n    } else if (blockConfig.exclusive) {\n      document = document.removeBlockAttributesAtRange(range)\n    } else if (blockConfig.terminal) {\n      document = document.removeLastTerminalAttributeAtRange(range)\n    } else {\n      document = document.consolidateBlocksAtRange(range)\n    }\n\n    return document.addAttributeAtRange(attributeName, value, range)\n  }\n\n  removeLastListAttributeAtRange(range, options = {}) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).listAttribute) {\n        return\n      }\n      if (lastAttributeName === options.exceptAttributeName) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeLastTerminalAttributeAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).terminal) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeBlockAttributesAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (block.hasAttributes()) {\n        blockList = blockList.editObjectAtIndex(index, () => block.copyWithoutAttributes())\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  expandRangeToLineBreaksAndSplitBlocks(range) {\n    let position\n    range = normalizeRange(range)\n    let [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    let document = this\n\n    const startBlock = document.getBlockAtIndex(startLocation.index)\n    startLocation.offset = startBlock.findLineBreakInDirectionFromPosition(\"backward\", startLocation.offset)\n    if (startLocation.offset != null) {\n      position = document.positionFromLocation(startLocation)\n      document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      endLocation.index += 1\n      endLocation.offset -= document.getBlockAtIndex(startLocation.index).getLength()\n      startLocation.index += 1\n    }\n    startLocation.offset = 0\n\n    if (endLocation.offset === 0 && endLocation.index > startLocation.index) {\n      endLocation.index -= 1\n      endLocation.offset = document.getBlockAtIndex(endLocation.index).getBlockBreakPosition()\n    } else {\n      const endBlock = document.getBlockAtIndex(endLocation.index)\n      if (endBlock.text.getStringAtRange([ endLocation.offset - 1, endLocation.offset ]) === \"\\n\") {\n        endLocation.offset -= 1\n      } else {\n        endLocation.offset = endBlock.findLineBreakInDirectionFromPosition(\"forward\", endLocation.offset)\n      }\n      if (endLocation.offset !== endBlock.getBlockBreakPosition()) {\n        position = document.positionFromLocation(endLocation)\n        document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      }\n    }\n\n    startPosition = document.positionFromLocation(startLocation)\n    endPosition = document.positionFromLocation(endLocation)\n    range = normalizeRange([ startPosition, endPosition ])\n\n    return { document, range }\n  }\n\n  convertLineBreaksToBlockBreaksInRange(range) {\n    range = normalizeRange(range)\n    let [ position ] = range\n    const string = this.getStringAtRange(range).slice(0, -1)\n    let document = this\n\n    string.replace(/.*?\\n/g, function(match) {\n      position += match.length\n      document = document.insertBlockBreakAtRange([ position - 1, position ])\n    })\n\n    return { document, range }\n  }\n\n  consolidateBlocksAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startIndex = this.locationFromPosition(startPosition).index\n    const endIndex = this.locationFromPosition(endPosition).index\n    return new this.constructor(this.blockList.consolidateFromIndexToIndex(startIndex, endIndex))\n  }\n\n  getDocumentAtRange(range) {\n    range = normalizeRange(range)\n    const blocks = this.blockList.getSplittableListInRange(range).toArray()\n    return new this.constructor(blocks)\n  }\n\n  getStringAtRange(range) {\n    let endIndex\n    const array = range = normalizeRange(range),\n      endPosition = array[array.length - 1]\n    if (endPosition !== this.getLength()) {\n      endIndex = -1\n    }\n    return this.getDocumentAtRange(range).toString().slice(0, endIndex)\n  }\n\n  getBlockAtIndex(index) {\n    return this.blockList.getObjectAtIndex(index)\n  }\n\n  getBlockAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getBlockAtIndex(index)\n  }\n\n  getTextAtIndex(index) {\n    return this.getBlockAtIndex(index)?.text\n  }\n\n  getTextAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index)\n  }\n\n  getPieceAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getPieceAtPosition(offset)\n  }\n\n  getCharacterAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getStringAtRange([ offset, offset + 1 ])\n  }\n\n  getLength() {\n    return this.blockList.getEndPosition()\n  }\n\n  getBlocks() {\n    return this.blockList.toArray()\n  }\n\n  getBlockCount() {\n    return this.blockList.length\n  }\n\n  getEditCount() {\n    return this.editCount\n  }\n\n  eachBlock(callback) {\n    return this.blockList.eachObject(callback)\n  }\n\n  eachBlockAtRange(range, callback) {\n    let block, textRange\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n\n    if (startLocation.index === endLocation.index) {\n      block = this.getBlockAtIndex(startLocation.index)\n      textRange = [ startLocation.offset, endLocation.offset ]\n      return callback(block, textRange, startLocation.index)\n    } else {\n      for (let index = startLocation.index; index <= endLocation.index; index++) {\n        block = this.getBlockAtIndex(index)\n        if (block) {\n          switch (index) {\n            case startLocation.index:\n              textRange = [ startLocation.offset, block.text.getLength() ]\n              break\n            case endLocation.index:\n              textRange = [ 0, endLocation.offset ]\n              break\n            default:\n              textRange = [ 0, block.text.getLength() ]\n          }\n          callback(block, textRange, index)\n        }\n      }\n    }\n  }\n\n  getCommonAttributesAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this.getCommonAttributesAtPosition(startPosition)\n    } else {\n      const textAttributes = []\n      const blockAttributes = []\n\n      this.eachBlockAtRange(range, function(block, textRange) {\n        if (textRange[0] !== textRange[1]) {\n          textAttributes.push(block.text.getCommonAttributesAtRange(textRange))\n          return blockAttributes.push(attributesForBlock(block))\n        }\n      })\n\n      return Hash.fromCommonAttributesOfObjects(textAttributes)\n        .merge(Hash.fromCommonAttributesOfObjects(blockAttributes))\n        .toObject()\n    }\n  }\n\n  getCommonAttributesAtPosition(position) {\n    let key, value\n    const { index, offset } = this.locationFromPosition(position)\n    const block = this.getBlockAtIndex(index)\n    if (!block) {\n      return {}\n    }\n\n    const commonAttributes = attributesForBlock(block)\n    const attributes = block.text.getAttributesAtPosition(offset)\n    const attributesLeft = block.text.getAttributesAtPosition(offset - 1)\n    const inheritableAttributes = Object.keys(config.textAttributes).filter((key) => {\n      return config.textAttributes[key].inheritable\n    })\n\n    for (key in attributesLeft) {\n      value = attributesLeft[key]\n      if (value === attributes[key] || inheritableAttributes.includes(key)) {\n        commonAttributes[key] = value\n      }\n    }\n\n    return commonAttributes\n  }\n\n  getRangeOfCommonAttributeAtPosition(attributeName, position) {\n    const { index, offset } = this.locationFromPosition(position)\n    const text = this.getTextAtIndex(index)\n    const [ startOffset, endOffset ] = Array.from(text.getExpandedRangeForAttributeAtOffset(attributeName, offset))\n\n    const start = this.positionFromLocation({ index, offset: startOffset })\n    const end = this.positionFromLocation({ index, offset: endOffset })\n    return normalizeRange([ start, end ])\n  }\n\n  getBaseBlockAttributes() {\n    let baseBlockAttributes = this.getBlockAtIndex(0).getAttributes()\n\n    for (let blockIndex = 1; blockIndex < this.getBlockCount(); blockIndex++) {\n      const blockAttributes = this.getBlockAtIndex(blockIndex).getAttributes()\n      const lastAttributeIndex = Math.min(baseBlockAttributes.length, blockAttributes.length)\n\n      baseBlockAttributes = (() => {\n        const result = []\n        for (let index = 0; index < lastAttributeIndex; index++) {\n          if (blockAttributes[index] !== baseBlockAttributes[index]) {\n            break\n          }\n          result.push(blockAttributes[index])\n        }\n        return result\n      })()\n    }\n\n    return baseBlockAttributes\n  }\n\n  getAttachmentById(attachmentId) {\n    for (const attachment of this.getAttachments()) {\n      if (attachment.id === attachmentId) {\n        return attachment\n      }\n    }\n  }\n\n  getAttachmentPieces() {\n    let attachmentPieces = []\n    this.blockList.eachObject(({ text }) => attachmentPieces = attachmentPieces.concat(text.getAttachmentPieces()))\n    return attachmentPieces\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getRangeOfAttachment(attachment) {\n    let position = 0\n    const iterable = this.blockList.toArray()\n    for (let index = 0; index < iterable.length; index++) {\n      const { text } = iterable[index]\n      const textRange = text.getRangeOfAttachment(attachment)\n      if (textRange) {\n        return normalizeRange([ position + textRange[0], position + textRange[1] ])\n      }\n      position += text.getLength()\n    }\n  }\n\n  getLocationRangeOfAttachment(attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.locationRangeFromRange(range)\n  }\n\n  getAttachmentPieceForAttachment(attachment) {\n    for (const piece of this.getAttachmentPieces()) {\n      if (piece.attachment === attachment) {\n        return piece\n      }\n    }\n  }\n\n  findRangesForBlockAttribute(attributeName) {\n    let position = 0\n    const ranges = []\n\n    this.getBlocks().forEach((block) => {\n      const length = block.getLength()\n      if (block.hasAttribute(attributeName)) {\n        ranges.push([ position, position + length ])\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  findRangesForTextAttribute(attributeName, { withValue } = {}) {\n    let position = 0\n    let range = []\n    const ranges = []\n\n    const match = function(piece) {\n      if (withValue) {\n        return piece.getAttribute(attributeName) === withValue\n      } else {\n        return piece.hasAttribute(attributeName)\n      }\n    }\n\n    this.getPieces().forEach((piece) => {\n      const length = piece.getLength()\n      if (match(piece)) {\n        if (range[1] === position) {\n          range[1] = position + length\n        } else {\n          ranges.push(range = [ position, position + length ])\n        }\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  locationFromPosition(position) {\n    const location = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, position))\n    if (location.index != null) {\n      return location\n    } else {\n      const blocks = this.getBlocks()\n      return { index: blocks.length - 1, offset: blocks[blocks.length - 1].getLength() }\n    }\n  }\n\n  positionFromLocation(location) {\n    return this.blockList.findPositionAtIndexAndOffset(location.index, location.offset)\n  }\n\n  locationRangeFromPosition(position) {\n    return normalizeRange(this.locationFromPosition(position))\n  }\n\n  locationRangeFromRange(range) {\n    range = normalizeRange(range)\n    if (!range) return\n\n    const [ startPosition, endPosition ] = Array.from(range)\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    return normalizeRange([ startLocation, endLocation ])\n  }\n\n  rangeFromLocationRange(locationRange) {\n    let rightPosition\n    locationRange = normalizeRange(locationRange)\n    const leftPosition = this.positionFromLocation(locationRange[0])\n    if (!rangeIsCollapsed(locationRange)) {\n      rightPosition = this.positionFromLocation(locationRange[1])\n    }\n    return normalizeRange([ leftPosition, rightPosition ])\n  }\n\n  isEqualTo(document) {\n    return this.blockList.isEqualTo(document?.blockList)\n  }\n\n  getTexts() {\n    return this.getBlocks().map((block) => block.text)\n  }\n\n  getPieces() {\n    const pieces = []\n\n    Array.from(this.getTexts()).forEach((text) => {\n      pieces.push(...Array.from(text.getPieces() || []))\n    })\n\n    return pieces\n  }\n\n  getObjects() {\n    return this.getBlocks().concat(this.getTexts()).concat(this.getPieces())\n  }\n\n  toSerializableDocument() {\n    const blocks = []\n    this.blockList.eachObject((block) => blocks.push(block.copyWithText(block.text.toSerializableText())))\n    return new this.constructor(blocks)\n  }\n\n  toString() {\n    return this.blockList.toString()\n  }\n\n  toJSON() {\n    return this.blockList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.blockList.toArray().map((block) => JSON.parse(block.text.toConsole())))\n  }\n}\n\nconst attributesForBlock = function(block) {\n  const attributes = {}\n  const attributeName = block.getLastAttribute()\n  if (attributeName) {\n    attributes[attributeName] = true\n  }\n  return attributes\n}\n", "/* eslint-disable\n    no-case-declarations,\n    no-irregular-whitespace,\n*/\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\nimport Document from \"trix/models/document\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nimport {\n  arraysAreEqual,\n  breakableWhitespacePattern,\n  elementContainsNode,\n  findClosestElementFromNode,\n  getBlockTagNames,\n  makeElement,\n  nodeIsAttachmentElement,\n  normalizeSpaces,\n  removeNode,\n  squishBreakableWhitespace,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nconst pieceForString = (string, attributes = {}) => {\n  const type = \"string\"\n  string = normalizeSpaces(string)\n  return { string, attributes, type }\n}\n\nconst pieceForAttachment = (attachment, attributes = {}) => {\n  const type = \"attachment\"\n  return { attachment, attributes, type }\n}\n\nconst blockForAttributes = (attributes = {}, htmlAttributes = {}) => {\n  const text = []\n  return { text, attributes, htmlAttributes }\n}\n\nconst parseTrixDataAttribute = (element, name) => {\n  try {\n    return JSON.parse(element.getAttribute(`data-trix-${name}`))\n  } catch (error) {\n    return {}\n  }\n}\n\nconst getImageDimensions = (element) => {\n  const width = element.getAttribute(\"width\")\n  const height = element.getAttribute(\"height\")\n  const dimensions = {}\n  if (width) {\n    dimensions.width = parseInt(width, 10)\n  }\n  if (height) {\n    dimensions.height = parseInt(height, 10)\n  }\n  return dimensions\n}\n\nexport default class HTMLParser extends BasicObject {\n  static parse(html, options) {\n    const parser = new this(html, options)\n    parser.parse()\n    return parser\n  }\n\n  constructor(html, { referenceElement } = {}) {\n    super(...arguments)\n    this.html = html\n    this.referenceElement = referenceElement\n    this.blocks = []\n    this.blockElements = []\n    this.processedElements = []\n  }\n\n  getDocument() {\n    return Document.fromJSON(this.blocks)\n  }\n\n  // HTML parsing\n\n  parse() {\n    try {\n      this.createHiddenContainer()\n      HTMLSanitizer.setHTML(this.containerElement, this.html)\n      const walker = walkTree(this.containerElement, { usingFilter: nodeFilter })\n      while (walker.nextNode()) {\n        this.processNode(walker.currentNode)\n      }\n      return this.translateBlockElementMarginsToNewlines()\n    } finally {\n      this.removeHiddenContainer()\n    }\n  }\n\n  createHiddenContainer() {\n    if (this.referenceElement) {\n      this.containerElement = this.referenceElement.cloneNode(false)\n      this.containerElement.removeAttribute(\"id\")\n      this.containerElement.setAttribute(\"data-trix-internal\", \"\")\n      this.containerElement.style.display = \"none\"\n      return this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)\n    } else {\n      this.containerElement = makeElement({ tagName: \"div\", style: { display: \"none\" } })\n      return document.body.appendChild(this.containerElement)\n    }\n  }\n\n  removeHiddenContainer() {\n    return removeNode(this.containerElement)\n  }\n\n  processNode(node) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        if (!this.isInsignificantTextNode(node)) {\n          this.appendBlockForTextNode(node)\n          return this.processTextNode(node)\n        }\n        break\n      case Node.ELEMENT_NODE:\n        this.appendBlockForElement(node)\n        return this.processElement(node)\n    }\n  }\n\n  appendBlockForTextNode(node) {\n    const element = node.parentNode\n    if (element === this.currentBlockElement && this.isBlockElement(node.previousSibling)) {\n      return this.appendStringWithAttributes(\"\\n\")\n    } else if (element === this.containerElement || this.isBlockElement(element)) {\n      const attributes = this.getBlockAttributes(element)\n      const htmlAttributes = this.getBlockHTMLAttributes(element)\n      if (!arraysAreEqual(attributes, this.currentBlock?.attributes)) {\n        this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n        this.currentBlockElement = element\n      }\n    }\n  }\n\n  appendBlockForElement(element) {\n    const elementIsBlockElement = this.isBlockElement(element)\n    const currentBlockContainsElement = elementContainsNode(this.currentBlockElement, element)\n\n    if (elementIsBlockElement && !this.isBlockElement(element.firstChild)) {\n      if (!this.isInsignificantTextNode(element.firstChild) || !this.isBlockElement(element.firstElementChild)) {\n        const attributes = this.getBlockAttributes(element)\n        const htmlAttributes = this.getBlockHTMLAttributes(element)\n        if (element.firstChild) {\n          if (!(currentBlockContainsElement && arraysAreEqual(attributes, this.currentBlock.attributes))) {\n            this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n            this.currentBlockElement = element\n          } else {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n        }\n      }\n    } else if (this.currentBlockElement && !currentBlockContainsElement && !elementIsBlockElement) {\n      const parentBlockElement = this.findParentBlockElement(element)\n      if (parentBlockElement) {\n        return this.appendBlockForElement(parentBlockElement)\n      } else {\n        this.currentBlock = this.appendEmptyBlock()\n        this.currentBlockElement = null\n      }\n    }\n  }\n\n  findParentBlockElement(element) {\n    let { parentElement } = element\n    while (parentElement && parentElement !== this.containerElement) {\n      if (this.isBlockElement(parentElement) && this.blockElements.includes(parentElement)) {\n        return parentElement\n      } else {\n        parentElement = parentElement.parentElement\n      }\n    }\n    return null\n  }\n\n  processTextNode(node) {\n    let string = node.data\n    if (!elementCanDisplayPreformattedText(node.parentNode)) {\n      string = squishBreakableWhitespace(string)\n      if (stringEndsWithWhitespace(node.previousSibling?.textContent)) {\n        string = leftTrimBreakableWhitespace(string)\n      }\n    }\n    return this.appendStringWithAttributes(string, this.getTextAttributes(node.parentNode))\n  }\n\n  processElement(element) {\n    let attributes\n    if (nodeIsAttachmentElement(element)) {\n      attributes = parseTrixDataAttribute(element, \"attachment\")\n      if (Object.keys(attributes).length) {\n        const textAttributes = this.getTextAttributes(element)\n        this.appendAttachmentWithAttributes(attributes, textAttributes)\n        // We have everything we need so avoid processing inner nodes\n        element.innerHTML = \"\"\n      }\n      return this.processedElements.push(element)\n    } else {\n      switch (tagName(element)) {\n        case \"br\":\n          if (!this.isExtraBR(element) && !this.isBlockElement(element.nextSibling)) {\n            this.appendStringWithAttributes(\"\\n\", this.getTextAttributes(element))\n          }\n          return this.processedElements.push(element)\n        case \"img\":\n          attributes = { url: element.getAttribute(\"src\"), contentType: \"image\" }\n          const object = getImageDimensions(element)\n          for (const key in object) {\n            const value = object[key]\n            attributes[key] = value\n          }\n          this.appendAttachmentWithAttributes(attributes, this.getTextAttributes(element))\n          return this.processedElements.push(element)\n        case \"tr\":\n          if (this.needsTableSeparator(element)) {\n            return this.appendStringWithAttributes(config.parser.tableRowSeparator)\n          }\n          break\n        case \"td\":\n          if (this.needsTableSeparator(element)) {\n            return this.appendStringWithAttributes(config.parser.tableCellSeparator)\n          }\n          break\n      }\n    }\n  }\n\n  // Document construction\n\n  appendBlockForAttributesWithElement(attributes, element, htmlAttributes = {}) {\n    this.blockElements.push(element)\n    const block = blockForAttributes(attributes, htmlAttributes)\n    this.blocks.push(block)\n    return block\n  }\n\n  appendEmptyBlock() {\n    return this.appendBlockForAttributesWithElement([], null)\n  }\n\n  appendStringWithAttributes(string, attributes) {\n    return this.appendPiece(pieceForString(string, attributes))\n  }\n\n  appendAttachmentWithAttributes(attachment, attributes) {\n    return this.appendPiece(pieceForAttachment(attachment, attributes))\n  }\n\n  appendPiece(piece) {\n    if (this.blocks.length === 0) {\n      this.appendEmptyBlock()\n    }\n    return this.blocks[this.blocks.length - 1].text.push(piece)\n  }\n\n  appendStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[text.length - 1]\n\n    if (piece?.type === \"string\") {\n      piece.string += string\n    } else {\n      return text.push(pieceForString(string))\n    }\n  }\n\n  prependStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[0]\n\n    if (piece?.type === \"string\") {\n      piece.string = string + piece.string\n    } else {\n      return text.unshift(pieceForString(string))\n    }\n  }\n\n  // Attribute parsing\n\n  getTextAttributes(element) {\n    let value\n    const attributes = {}\n    for (const attribute in config.textAttributes) {\n      const configAttr = config.textAttributes[attribute]\n      if (\n        configAttr.tagName &&\n        findClosestElementFromNode(element, {\n          matchingSelector: configAttr.tagName,\n          untilNode: this.containerElement,\n        })\n      ) {\n        attributes[attribute] = true\n      } else if (configAttr.parser) {\n        value = configAttr.parser(element)\n        if (value) {\n          let attributeInheritedFromBlock = false\n          for (const blockElement of this.findBlockElementAncestors(element)) {\n            if (configAttr.parser(blockElement) === value) {\n              attributeInheritedFromBlock = true\n              break\n            }\n          }\n          if (!attributeInheritedFromBlock) {\n            attributes[attribute] = value\n          }\n        }\n      } else if (configAttr.styleProperty) {\n        value = element.style[configAttr.styleProperty]\n        if (value) {\n          attributes[attribute] = value\n        }\n      }\n    }\n\n    if (nodeIsAttachmentElement(element)) {\n      const object = parseTrixDataAttribute(element, \"attributes\")\n      for (const key in object) {\n        value = object[key]\n        attributes[key] = value\n      }\n    }\n\n    return attributes\n  }\n\n  getBlockAttributes(element) {\n    const attributes = []\n    while (element && element !== this.containerElement) {\n      for (const attribute in config.blockAttributes) {\n        const attrConfig = config.blockAttributes[attribute]\n        if (attrConfig.parse !== false) {\n          if (tagName(element) === attrConfig.tagName) {\n            if (attrConfig.test?.(element) || !attrConfig.test) {\n              attributes.push(attribute)\n              if (attrConfig.listAttribute) {\n                attributes.push(attrConfig.listAttribute)\n              }\n            }\n          }\n        }\n      }\n      element = element.parentNode\n    }\n    return attributes.reverse()\n  }\n\n  getBlockHTMLAttributes(element) {\n    const attributes = {}\n    const blockConfig = Object.values(config.blockAttributes).find(settings => settings.tagName === tagName(element))\n    const allowedAttributes = blockConfig?.htmlAttributes || []\n\n    allowedAttributes.forEach((attribute) => {\n      if (element.hasAttribute(attribute)) {\n        attributes[attribute] = element.getAttribute(attribute)\n      }\n    })\n\n    return attributes\n  }\n\n  findBlockElementAncestors(element) {\n    const ancestors = []\n    while (element && element !== this.containerElement) {\n      const tag = tagName(element)\n      if (getBlockTagNames().includes(tag)) {\n        ancestors.push(element)\n      }\n      element = element.parentNode\n    }\n    return ancestors\n  }\n\n  // Element inspection\n\n  isBlockElement(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    if (nodeIsAttachmentElement(element)) return\n    if (findClosestElementFromNode(element, { matchingSelector: \"td\", untilNode: this.containerElement })) return\n\n    return getBlockTagNames().includes(tagName(element)) ||\n      window.getComputedStyle(element).display === \"block\"\n  }\n\n  isInsignificantTextNode(node) {\n    if (node?.nodeType !== Node.TEXT_NODE) return\n    if (!stringIsAllBreakableWhitespace(node.data)) return\n    const { parentNode, previousSibling, nextSibling } = node\n    if (nodeEndsWithNonWhitespace(parentNode.previousSibling) && !this.isBlockElement(parentNode.previousSibling)) return\n    if (elementCanDisplayPreformattedText(parentNode)) return\n    return !previousSibling || this.isBlockElement(previousSibling) || !nextSibling || this.isBlockElement(nextSibling)\n  }\n\n  isExtraBR(element) {\n    return tagName(element) === \"br\" && this.isBlockElement(element.parentNode) && element.parentNode.lastChild === element\n  }\n\n  needsTableSeparator(element) {\n    if (config.parser.removeBlankTableCells) {\n      const content = element.previousSibling?.textContent\n      return content && /\\S/.test(content)\n    } else {\n      return element.previousSibling\n    }\n  }\n\n  // Margin translation\n\n  translateBlockElementMarginsToNewlines() {\n    const defaultMargin = this.getMarginOfDefaultBlockElement()\n\n    for (let index = 0; index < this.blocks.length; index++) {\n      const margin = this.getMarginOfBlockElementAtIndex(index)\n      if (margin) {\n        if (margin.top > defaultMargin.top * 2) {\n          this.prependStringToTextAtIndex(\"\\n\", index)\n        }\n\n        if (margin.bottom > defaultMargin.bottom * 2) {\n          this.appendStringToTextAtIndex(\"\\n\", index)\n        }\n      }\n    }\n  }\n\n  getMarginOfBlockElementAtIndex(index) {\n    const element = this.blockElements[index]\n    if (element) {\n      if (element.textContent) {\n        if (!getBlockTagNames().includes(tagName(element)) && !this.processedElements.includes(element)) {\n          return getBlockElementMargin(element)\n        }\n      }\n    }\n  }\n\n  getMarginOfDefaultBlockElement() {\n    const element = makeElement(config.blockAttributes.default.tagName)\n    this.containerElement.appendChild(element)\n    return getBlockElementMargin(element)\n  }\n}\n\n// Helpers\n\nconst elementCanDisplayPreformattedText = function(element) {\n  const { whiteSpace } = window.getComputedStyle(element)\n  return [ \"pre\", \"pre-wrap\", \"pre-line\" ].includes(whiteSpace)\n}\n\nconst nodeEndsWithNonWhitespace = (node) => node && !stringEndsWithWhitespace(node.textContent)\n\nconst getBlockElementMargin = function(element) {\n  const style = window.getComputedStyle(element)\n  if (style.display === \"block\") {\n    return { top: parseInt(style.marginTop), bottom: parseInt(style.marginBottom) }\n  }\n}\n\nconst nodeFilter = function(node) {\n  if (tagName(node) === \"style\") {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\n// Whitespace\n\nconst leftTrimBreakableWhitespace = (string) => string.replace(new RegExp(`^${breakableWhitespacePattern.source}+`), \"\")\n\nconst stringIsAllBreakableWhitespace = (string) => new RegExp(`^${breakableWhitespacePattern.source}*$`).test(string)\n\nconst stringEndsWithWhitespace = (string) => /\\s$/.test(string)\n", "/* eslint-disable\n    no-empty,\n*/\nimport { removeNode } from \"trix/core/helpers\"\n\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nconst unserializableElementSelector = \"[data-trix-serialize=false]\"\nconst unserializableAttributeNames = [\n  \"contenteditable\",\n  \"data-trix-id\",\n  \"data-trix-store-key\",\n  \"data-trix-mutable\",\n  \"data-trix-placeholder\",\n  \"tabindex\",\n]\nconst serializedAttributesAttribute = \"data-trix-serialized-attributes\"\nconst serializedAttributesSelector = `[${serializedAttributesAttribute}]`\n\nconst blockCommentPattern = new RegExp(\"<!--block-->\", \"g\")\n\nconst serializers = {\n  \"application/json\": function(serializable) {\n    let document\n    if (serializable instanceof Document) {\n      document = serializable\n    } else if (serializable instanceof HTMLElement) {\n      document = HTMLParser.parse(serializable.innerHTML).getDocument()\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    return document.toSerializableDocument().toJSONString()\n  },\n\n  \"text/html\": function(serializable) {\n    let element\n    if (serializable instanceof Document) {\n      element = DocumentView.render(serializable)\n    } else if (serializable instanceof HTMLElement) {\n      element = serializable.cloneNode(true)\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    // Remove unserializable elements\n    Array.from(element.querySelectorAll(unserializableElementSelector)).forEach((el) => {\n      removeNode(el)\n    })\n\n    // Remove unserializable attributes\n    unserializableAttributeNames.forEach((attribute) => {\n      Array.from(element.querySelectorAll(`[${attribute}]`)).forEach((el) => {\n        el.removeAttribute(attribute)\n      })\n    })\n\n    // Rewrite elements with serialized attribute overrides\n    Array.from(element.querySelectorAll(serializedAttributesSelector)).forEach((el) => {\n      try {\n        const attributes = JSON.parse(el.getAttribute(serializedAttributesAttribute))\n        el.removeAttribute(serializedAttributesAttribute)\n        for (const name in attributes) {\n          const value = attributes[name]\n          el.setAttribute(name, value)\n        }\n      } catch (error) {}\n    })\n\n    return element.innerHTML.replace(blockCommentPattern, \"\")\n  },\n}\n\nconst deserializers = {\n  \"application/json\": function(string) {\n    return Document.fromJSONString(string)\n  },\n\n  \"text/html\": function(string) {\n    return HTMLParser.parse(string).getDocument()\n  },\n}\n\nexport const serializeToContentType = function(serializable, contentType) {\n  const serializer = serializers[contentType]\n  if (serializer) {\n    return serializer(serializable)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n\nexport const deserializeFromContentType = function(string, contentType) {\n  const deserializer = deserializers[contentType]\n  if (deserializer) {\n    return deserializer(string)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n", "import \"trix/models/attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class ManagedAttachment extends BasicObject {\n  constructor(attachmentManager, attachment) {\n    super(...arguments)\n    this.attachmentManager = attachmentManager\n    this.attachment = attachment\n    this.id = this.attachment.id\n    this.file = this.attachment.file\n  }\n\n  remove() {\n    return this.attachmentManager.requestRemovalOfAttachment(this.attachment)\n  }\n}\n\nManagedAttachment.proxyMethod(\"attachment.getAttribute\")\nManagedAttachment.proxyMethod(\"attachment.hasAttribute\")\nManagedAttachment.proxyMethod(\"attachment.setAttribute\")\nManagedAttachment.proxyMethod(\"attachment.getAttributes\")\nManagedAttachment.proxyMethod(\"attachment.setAttributes\")\nManagedAttachment.proxyMethod(\"attachment.isPending\")\nManagedAttachment.proxyMethod(\"attachment.isPreviewable\")\nManagedAttachment.proxyMethod(\"attachment.getURL\")\nManagedAttachment.proxyMethod(\"attachment.getHref\")\nManagedAttachment.proxyMethod(\"attachment.getFilename\")\nManagedAttachment.proxyMethod(\"attachment.getFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getFormattedFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getExtension\")\nManagedAttachment.proxyMethod(\"attachment.getContentType\")\nManagedAttachment.proxyMethod(\"attachment.getFile\")\nManagedAttachment.proxyMethod(\"attachment.setFile\")\nManagedAttachment.proxyMethod(\"attachment.releaseFile\")\nManagedAttachment.proxyMethod(\"attachment.getUploadProgress\")\nManagedAttachment.proxyMethod(\"attachment.setUploadProgress\")\n\n", "import ManagedAttachment from \"trix/models/managed_attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class AttachmentManager extends BasicObject {\n  constructor(attachments = []) {\n    super(...arguments)\n    this.managedAttachments = {}\n    Array.from(attachments).forEach((attachment) => {\n      this.manageAttachment(attachment)\n    })\n  }\n\n  getAttachments() {\n    const result = []\n    for (const id in this.managedAttachments) {\n      const attachment = this.managedAttachments[id]\n      result.push(attachment)\n    }\n    return result\n  }\n\n  manageAttachment(attachment) {\n    if (!this.managedAttachments[attachment.id]) {\n      this.managedAttachments[attachment.id] = new ManagedAttachment(this, attachment)\n    }\n    return this.managedAttachments[attachment.id]\n  }\n\n  attachmentIsManaged(attachment) {\n    return attachment.id in this.managedAttachments\n  }\n\n  requestRemovalOfAttachment(attachment) {\n    if (this.attachmentIsManaged(attachment)) {\n      return this.delegate?.attachmentManagerDidRequestRemovalOfAttachment?.(attachment)\n    }\n  }\n\n  unmanageAttachment(attachment) {\n    const managedAttachment = this.managedAttachments[attachment.id]\n    delete this.managedAttachments[attachment.id]\n    return managedAttachment\n  }\n}\n", "export default class LineBreakInsertion {\n  constructor(composition) {\n    this.composition = composition\n    this.document = this.composition.document\n    const selectedRange = this.composition.getSelectedRange()\n    this.startPosition = selectedRange[0]\n    this.endPosition = selectedRange[1]\n\n    this.startLocation = this.document.locationFromPosition(this.startPosition)\n    this.endLocation = this.document.locationFromPosition(this.endPosition)\n\n    this.block = this.document.getBlockAtIndex(this.endLocation.index)\n    this.breaksOnReturn = this.block.breaksOnReturn()\n    this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1)\n    this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset)\n  }\n\n  shouldInsertBlockBreak() {\n    if (this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty()) {\n      return this.startLocation.offset !== 0\n    } else {\n      return this.breaksOnReturn && this.nextCharacter !== \"\\n\"\n    }\n  }\n\n  shouldBreakFormattedBlock() {\n    return (\n      this.block.hasAttributes() &&\n      !this.block.isListItem() &&\n      (this.breaksOnReturn && this.nextCharacter === \"\\n\" || this.previousCharacter === \"\\n\")\n    )\n  }\n\n  shouldDecreaseListLevel() {\n    return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty()\n  }\n\n  shouldPrependListItem() {\n    return this.block.isListItem() && this.startLocation.offset === 0 && !this.block.isEmpty()\n  }\n\n  shouldRemoveLastBlockAttribute() {\n    return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty()\n  }\n}\n", "import * as config from \"trix/config\"\nimport { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport BasicObject from \"trix/core/basic_object\"\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport Attachment from \"trix/models/attachment\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\nimport LineBreakInsertion from \"trix/models/line_break_insertion\"\n\nimport {\n  arrayStartsWith,\n  extend,\n  getAllAttributeNames,\n  getBlockConfig,\n  getTextConfig,\n  normalizeRange,\n  objectsAreEqual,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  summarizeArrayChange,\n} from \"trix/core/helpers\"\n\nconst PLACEHOLDER = \" \"\n\nexport default class Composition extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.document = new Document()\n    this.attachments = []\n    this.currentAttributes = {}\n    this.revision = 0\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = document\n      this.refreshAttachments()\n      this.revision++\n      return this.delegate?.compositionDidChangeDocument?.(document)\n    }\n  }\n\n  // Snapshots\n\n  getSnapshot() {\n    return {\n      document: this.document,\n      selectedRange: this.getSelectedRange(),\n    }\n  }\n\n  loadSnapshot({ document, selectedRange }) {\n    this.delegate?.compositionWillLoadSnapshot?.()\n    this.setDocument(document != null ? document : new Document())\n    this.setSelection(selectedRange != null ? selectedRange : [ 0, 0 ])\n    return this.delegate?.compositionDidLoadSnapshot?.()\n  }\n\n  // Responder protocol\n\n  insertText(text, { updatePosition } = { updatePosition: true }) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertTextAtRange(text, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + text.getLength()\n\n    if (updatePosition) {\n      this.setSelection(endPosition)\n    }\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertBlock(block = new Block()) {\n    const document = new Document([ block ])\n    return this.insertDocument(document)\n  }\n\n  insertDocument(document = new Document()) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength()\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertString(string, options) {\n    const attributes = this.getCurrentTextAttributes()\n    const text = Text.textForStringWithAttributes(string, attributes)\n    return this.insertText(text, options)\n  }\n\n  insertBlockBreak() {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertBlockBreakAtRange(selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertLineBreak() {\n    const insertion = new LineBreakInsertion(this)\n\n    if (insertion.shouldDecreaseListLevel()) {\n      this.decreaseListLevel()\n      return this.setSelection(insertion.startPosition)\n    } else if (insertion.shouldPrependListItem()) {\n      const document = new Document([ insertion.block.copyWithoutText() ])\n      return this.insertDocument(document)\n    } else if (insertion.shouldInsertBlockBreak()) {\n      return this.insertBlockBreak()\n    } else if (insertion.shouldRemoveLastBlockAttribute()) {\n      return this.removeLastBlockAttribute()\n    } else if (insertion.shouldBreakFormattedBlock()) {\n      return this.breakFormattedBlock(insertion)\n    } else {\n      return this.insertString(\"\\n\")\n    }\n  }\n\n  insertHTML(html) {\n    const document = HTMLParser.parse(html).getDocument()\n    const selectedRange = this.getSelectedRange()\n\n    this.setDocument(this.document.mergeDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength() - 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  replaceHTML(html) {\n    const document = HTMLParser.parse(html).getDocument().copyUsingObjectsFromDocument(this.document)\n    const locationRange = this.getLocationRange({ strict: false })\n    const selectedRange = this.document.rangeFromLocationRange(locationRange)\n    this.setDocument(document)\n    return this.setSelection(selectedRange)\n  }\n\n  insertFile(file) {\n    return this.insertFiles([ file ])\n  }\n\n  insertFiles(files) {\n    const attachments = []\n\n    Array.from(files).forEach((file) => {\n      if (this.delegate?.compositionShouldAcceptFile(file)) {\n        const attachment = Attachment.attachmentForFile(file)\n        attachments.push(attachment)\n      }\n    })\n\n    return this.insertAttachments(attachments)\n  }\n\n  insertAttachment(attachment) {\n    return this.insertAttachments([ attachment ])\n  }\n\n  insertAttachments(attachments) {\n    let text = new Text()\n\n    Array.from(attachments).forEach((attachment) => {\n      const type = attachment.getType()\n      const presentation = config.attachments[type]?.presentation\n\n      const attributes = this.getCurrentTextAttributes()\n      if (presentation) {\n        attributes.presentation = presentation\n      }\n\n      const attachmentText = Text.textForAttachmentWithAttributes(attachment, attributes)\n      text = text.appendText(attachmentText)\n    })\n\n    return this.insertText(text)\n  }\n\n  shouldManageDeletingInDirection(direction) {\n    const locationRange = this.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      if (direction === \"backward\" && locationRange[0].offset === 0) {\n        return true\n      }\n      if (this.shouldManageMovingCursorInDirection(direction)) {\n        return true\n      }\n    } else {\n      if (locationRange[0].index !== locationRange[1].index) {\n        return true\n      }\n    }\n    return false\n  }\n\n  deleteInDirection(direction, { length } = {}) {\n    let attachment, deletingIntoPreviousBlock, selectionSpansBlocks\n    const locationRange = this.getLocationRange()\n    let range = this.getSelectedRange()\n    const selectionIsCollapsed = rangeIsCollapsed(range)\n\n    if (selectionIsCollapsed) {\n      deletingIntoPreviousBlock = direction === \"backward\" && locationRange[0].offset === 0\n    } else {\n      selectionSpansBlocks = locationRange[0].index !== locationRange[1].index\n    }\n\n    if (deletingIntoPreviousBlock) {\n      if (this.canDecreaseBlockAttributeLevel()) {\n        const block = this.getBlock()\n\n        if (block.isListItem()) {\n          this.decreaseListLevel()\n        } else {\n          this.decreaseBlockAttributeLevel()\n        }\n\n        this.setSelection(range[0])\n        if (block.isEmpty()) {\n          return false\n        }\n      }\n    }\n\n    if (selectionIsCollapsed) {\n      range = this.getExpandedRangeInDirection(direction, { length })\n      if (direction === \"backward\") {\n        attachment = this.getAttachmentAtRange(range)\n      }\n    }\n\n    if (attachment) {\n      this.editAttachment(attachment)\n      return false\n    } else {\n      this.setDocument(this.document.removeTextAtRange(range))\n      this.setSelection(range[0])\n      if (deletingIntoPreviousBlock || selectionSpansBlocks) {\n        return false\n      }\n    }\n  }\n\n  moveTextFromRange(range) {\n    const [ position ] = Array.from(this.getSelectedRange())\n    this.setDocument(this.document.moveTextFromRangeToPosition(range, position))\n    return this.setSelection(position)\n  }\n\n  removeAttachment(attachment) {\n    const range = this.document.getRangeOfAttachment(attachment)\n    if (range) {\n      this.stopEditingAttachment()\n      this.setDocument(this.document.removeTextAtRange(range))\n      return this.setSelection(range[0])\n    }\n  }\n\n  removeLastBlockAttribute() {\n    const [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    const block = this.document.getBlockAtPosition(endPosition)\n    this.removeCurrentAttribute(block.getLastAttribute())\n    return this.setSelection(startPosition)\n  }\n\n  insertPlaceholder() {\n    this.placeholderPosition = this.getPosition()\n    return this.insertString(PLACEHOLDER)\n  }\n\n  selectPlaceholder() {\n    if (this.placeholderPosition != null) {\n      this.setSelectedRange([ this.placeholderPosition, this.placeholderPosition + PLACEHOLDER.length ])\n      return this.getSelectedRange()\n    }\n  }\n\n  forgetPlaceholder() {\n    this.placeholderPosition = null\n  }\n\n  // Current attributes\n\n  hasCurrentAttribute(attributeName) {\n    const value = this.currentAttributes[attributeName]\n    return value != null && value !== false\n  }\n\n  toggleCurrentAttribute(attributeName) {\n    const value = !this.currentAttributes[attributeName]\n    if (value) {\n      return this.setCurrentAttribute(attributeName, value)\n    } else {\n      return this.removeCurrentAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      return this.canSetCurrentBlockAttribute(attributeName)\n    } else {\n      return this.canSetCurrentTextAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentTextAttribute(attributeName) {\n    const document = this.getSelectedDocument()\n    if (!document) return\n    for (const attachment of Array.from(document.getAttachments())) {\n      if (!attachment.hasContent()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  canSetCurrentBlockAttribute(attributeName) {\n    const block = this.getBlock()\n    if (!block) return\n    return !block.isTerminalBlock()\n  }\n\n  setCurrentAttribute(attributeName, value) {\n    if (getBlockConfig(attributeName)) {\n      return this.setBlockAttribute(attributeName, value)\n    } else {\n      this.setTextAttribute(attributeName, value)\n      this.currentAttributes[attributeName] = value\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  setHTMLAtributeAtPosition(position, attributeName, value) {\n    const block = this.document.getBlockAtPosition(position)\n    const allowedHTMLAttributes = getBlockConfig(block.getLastAttribute())?.htmlAttributes\n\n    if (block && allowedHTMLAttributes?.includes(attributeName)) {\n      const newDocument = this.document.setHTMLAttributeAtPosition(position, attributeName, value)\n      this.setDocument(newDocument)\n    }\n  }\n\n  setTextAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n\n    const [ startPosition, endPosition ] = Array.from(selectedRange)\n    if (startPosition === endPosition) {\n      if (attributeName === \"href\") {\n        const text = Text.textForStringWithAttributes(value, { href: value })\n        return this.insertText(text)\n      }\n    } else {\n      return this.setDocument(this.document.addAttributeAtRange(attributeName, value, selectedRange))\n    }\n  }\n\n  setBlockAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (this.canSetCurrentAttribute(attributeName)) {\n      this.setDocument(this.document.applyBlockAttributeAtRange(attributeName, value, selectedRange))\n      return this.setSelection(selectedRange)\n    }\n  }\n\n  removeCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      this.removeBlockAttribute(attributeName)\n      return this.updateCurrentAttributes()\n    } else {\n      this.removeTextAttribute(attributeName)\n      delete this.currentAttributes[attributeName]\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  removeTextAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  removeBlockAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  canDecreaseNestingLevel() {\n    return this.getBlock()?.getNestingLevel() > 0\n  }\n\n  canIncreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    if (getBlockConfig(block.getLastNestableAttribute())?.listAttribute) {\n      const previousBlock = this.getPreviousBlock()\n      if (previousBlock) {\n        return arrayStartsWith(previousBlock.getListItemAttributes(), block.getListItemAttributes())\n      }\n    } else {\n      return block.getNestingLevel() > 0\n    }\n  }\n\n  decreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.decreaseNestingLevel()))\n  }\n\n  increaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.increaseNestingLevel()))\n  }\n\n  canDecreaseBlockAttributeLevel() {\n    return this.getBlock()?.getAttributeLevel() > 0\n  }\n\n  decreaseBlockAttributeLevel() {\n    const attribute = this.getBlock()?.getLastAttribute()\n    if (attribute) {\n      return this.removeCurrentAttribute(attribute)\n    }\n  }\n\n  decreaseListLevel() {\n    let [ startPosition ] = Array.from(this.getSelectedRange())\n    const { index } = this.document.locationFromPosition(startPosition)\n    let endIndex = index\n    const attributeLevel = this.getBlock().getAttributeLevel()\n\n    let block = this.document.getBlockAtIndex(endIndex + 1)\n    while (block) {\n      if (!block.isListItem() || block.getAttributeLevel() <= attributeLevel) {\n        break\n      }\n      endIndex++\n      block = this.document.getBlockAtIndex(endIndex + 1)\n    }\n\n    startPosition = this.document.positionFromLocation({ index, offset: 0 })\n    const endPosition = this.document.positionFromLocation({ index: endIndex, offset: 0 })\n    return this.setDocument(this.document.removeLastListAttributeAtRange([ startPosition, endPosition ]))\n  }\n\n  updateCurrentAttributes() {\n    const selectedRange = this.getSelectedRange({ ignoreLock: true })\n    if (selectedRange) {\n      const currentAttributes = this.document.getCommonAttributesAtRange(selectedRange)\n\n      Array.from(getAllAttributeNames()).forEach((attributeName) => {\n        if (!currentAttributes[attributeName]) {\n          if (!this.canSetCurrentAttribute(attributeName)) {\n            currentAttributes[attributeName] = false\n          }\n        }\n      })\n\n      if (!objectsAreEqual(currentAttributes, this.currentAttributes)) {\n        this.currentAttributes = currentAttributes\n        return this.notifyDelegateOfCurrentAttributesChange()\n      }\n    }\n  }\n\n  getCurrentAttributes() {\n    return extend.call({}, this.currentAttributes)\n  }\n\n  getCurrentTextAttributes() {\n    const attributes = {}\n    for (const key in this.currentAttributes) {\n      const value = this.currentAttributes[key]\n      if (value !== false) {\n        if (getTextConfig(key)) {\n          attributes[key] = value\n        }\n      }\n    }\n    return attributes\n  }\n\n  // Selection freezing\n\n  freezeSelection() {\n    return this.setCurrentAttribute(\"frozen\", true)\n  }\n\n  thawSelection() {\n    return this.removeCurrentAttribute(\"frozen\")\n  }\n\n  hasFrozenSelection() {\n    return this.hasCurrentAttribute(\"frozen\")\n  }\n\n  setSelection(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.delegate?.compositionDidRequestChangingSelectionToLocationRange(locationRange)\n  }\n\n  getSelectedRange() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.rangeFromLocationRange(locationRange)\n    }\n  }\n\n  setSelectedRange(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.getSelectionManager().setLocationRange(locationRange)\n  }\n\n  getPosition() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.positionFromLocation(locationRange[0])\n    }\n  }\n\n  getLocationRange(options) {\n    if (this.targetLocationRange) {\n      return this.targetLocationRange\n    } else {\n      return this.getSelectionManager().getLocationRange(options) || normalizeRange({ index: 0, offset: 0 })\n    }\n  }\n\n  withTargetLocationRange(locationRange, fn) {\n    let result\n    this.targetLocationRange = locationRange\n    try {\n      result = fn()\n    } finally {\n      this.targetLocationRange = null\n    }\n    return result\n  }\n\n  withTargetRange(range, fn) {\n    const locationRange = this.document.locationRangeFromRange(range)\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  withTargetDOMRange(domRange, fn) {\n    const locationRange = this.createLocationRangeFromDOMRange(domRange, { strict: false })\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  getExpandedRangeInDirection(direction, { length } = {}) {\n    let [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    if (direction === \"backward\") {\n      if (length) {\n        startPosition -= length\n      } else {\n        startPosition = this.translateUTF16PositionFromOffset(startPosition, -1)\n      }\n    } else {\n      if (length) {\n        endPosition += length\n      } else {\n        endPosition = this.translateUTF16PositionFromOffset(endPosition, 1)\n      }\n    }\n    return normalizeRange([ startPosition, endPosition ])\n  }\n\n  shouldManageMovingCursorInDirection(direction) {\n    if (this.editingAttachment) {\n      return true\n    }\n    const range = this.getExpandedRangeInDirection(direction)\n    return this.getAttachmentAtRange(range) != null\n  }\n\n  moveCursorInDirection(direction) {\n    let canEditAttachment, range\n    if (this.editingAttachment) {\n      range = this.document.getRangeOfAttachment(this.editingAttachment)\n    } else {\n      const selectedRange = this.getSelectedRange()\n      range = this.getExpandedRangeInDirection(direction)\n      canEditAttachment = !rangesAreEqual(selectedRange, range)\n    }\n\n    if (direction === \"backward\") {\n      this.setSelectedRange(range[0])\n    } else {\n      this.setSelectedRange(range[1])\n    }\n\n    if (canEditAttachment) {\n      const attachment = this.getAttachmentAtRange(range)\n      if (attachment) {\n        return this.editAttachment(attachment)\n      }\n    }\n  }\n\n  expandSelectionInDirection(direction, { length } = {}) {\n    const range = this.getExpandedRangeInDirection(direction, { length })\n    return this.setSelectedRange(range)\n  }\n\n  expandSelectionForEditing() {\n    if (this.hasCurrentAttribute(\"href\")) {\n      return this.expandSelectionAroundCommonAttribute(\"href\")\n    }\n  }\n\n  expandSelectionAroundCommonAttribute(attributeName) {\n    const position = this.getPosition()\n    const range = this.document.getRangeOfCommonAttributeAtPosition(attributeName, position)\n    return this.setSelectedRange(range)\n  }\n\n  selectionContainsAttachments() {\n    return this.getSelectedAttachments()?.length > 0\n  }\n\n  selectionIsInCursorTarget() {\n    return this.editingAttachment || this.positionIsCursorTarget(this.getPosition())\n  }\n\n  positionIsCursorTarget(position) {\n    const location = this.document.locationFromPosition(position)\n    if (location) {\n      return this.locationIsCursorTarget(location)\n    }\n  }\n\n  positionIsBlockBreak(position) {\n    return this.document.getPieceAtPosition(position)?.isBlockBreak()\n  }\n\n  getSelectedDocument() {\n    const selectedRange = this.getSelectedRange()\n    if (selectedRange) {\n      return this.document.getDocumentAtRange(selectedRange)\n    }\n  }\n\n  getSelectedAttachments() {\n    return this.getSelectedDocument()?.getAttachments()\n  }\n\n  // Attachments\n\n  getAttachments() {\n    return this.attachments.slice(0)\n  }\n\n  refreshAttachments() {\n    const attachments = this.document.getAttachments()\n    const { added, removed } = summarizeArrayChange(this.attachments, attachments)\n    this.attachments = attachments\n\n    Array.from(removed).forEach((attachment) => {\n      attachment.delegate = null\n      this.delegate?.compositionDidRemoveAttachment?.(attachment)\n    })\n\n    return (() => {\n      const result = []\n\n      Array.from(added).forEach((attachment) => {\n        attachment.delegate = this\n        result.push(this.delegate?.compositionDidAddAttachment?.(attachment))\n      })\n\n      return result\n    })()\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidEditAttachment?.(attachment)\n  }\n\n  attachmentDidChangePreviewURL(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidChangeAttachmentPreviewURL?.(attachment)\n  }\n\n  // Attachment editing\n\n  editAttachment(attachment, options) {\n    if (attachment === this.editingAttachment) return\n    this.stopEditingAttachment()\n    this.editingAttachment = attachment\n    return this.delegate?.compositionDidStartEditingAttachment?.(this.editingAttachment, options)\n  }\n\n  stopEditingAttachment() {\n    if (!this.editingAttachment) return\n    this.delegate?.compositionDidStopEditingAttachment?.(this.editingAttachment)\n    this.editingAttachment = null\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    return this.setDocument(this.document.updateAttributesForAttachment(attributes, attachment))\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    return this.setDocument(this.document.removeAttributeForAttachment(attribute, attachment))\n  }\n\n  // Private\n\n  breakFormattedBlock(insertion) {\n    let { document } = insertion\n    const { block } = insertion\n    let position = insertion.startPosition\n    let range = [ position - 1, position ]\n\n    if (block.getBlockBreakPosition() === insertion.startLocation.offset) {\n      if (block.breaksOnReturn() && insertion.nextCharacter === \"\\n\") {\n        position += 1\n      } else {\n        document = document.removeTextAtRange(range)\n      }\n      range = [ position, position ]\n    } else if (insertion.nextCharacter === \"\\n\") {\n      if (insertion.previousCharacter === \"\\n\") {\n        range = [ position - 1, position + 1 ]\n      } else {\n        range = [ position, position + 1 ]\n        position += 1\n      }\n    } else if (insertion.startLocation.offset - 1 !== 0) {\n      position += 1\n    }\n\n    const newDocument = new Document([ block.removeLastAttribute().copyWithoutText() ])\n    this.setDocument(document.insertDocumentAtRange(newDocument, range))\n    return this.setSelection(position)\n  }\n\n  getPreviousBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      const { index } = locationRange[0]\n      if (index > 0) {\n        return this.document.getBlockAtIndex(index - 1)\n      }\n    }\n  }\n\n  getBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.getBlockAtIndex(locationRange[0].index)\n    }\n  }\n\n  getAttachmentAtRange(range) {\n    const document = this.document.getDocumentAtRange(range)\n    if (document.toString() === `${OBJECT_REPLACEMENT_CHARACTER}\\n`) {\n      return document.getAttachments()[0]\n    }\n  }\n\n  notifyDelegateOfCurrentAttributesChange() {\n    return this.delegate?.compositionDidChangeCurrentAttributes?.(this.currentAttributes)\n  }\n\n  notifyDelegateOfInsertionAtRange(range) {\n    return this.delegate?.compositionDidPerformInsertionAtRange?.(range)\n  }\n\n  translateUTF16PositionFromOffset(position, offset) {\n    const utf16string = this.document.toUTF16String()\n    const utf16position = utf16string.offsetFromUCS2Offset(position)\n    return utf16string.offsetToUCS2Offset(utf16position + offset)\n  }\n}\n\nComposition.proxyMethod(\"getSelectionManager().getPointRange\")\nComposition.proxyMethod(\"getSelectionManager().setLocationRangeFromPointRange\")\nComposition.proxyMethod(\"getSelectionManager().createLocationRangeFromDOMRange\")\nComposition.proxyMethod(\"getSelectionManager().locationIsCursorTarget\")\nComposition.proxyMethod(\"getSelectionManager().selectionIsExpanded\")\nComposition.proxyMethod(\"delegate?.getSelectionManager\")\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class UndoManager extends BasicObject {\n  constructor(composition) {\n    super(...arguments)\n    this.composition = composition\n    this.undoEntries = []\n    this.redoEntries = []\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    const previousEntry = this.undoEntries.slice(-1)[0]\n\n    if (!consolidatable || !entryHasDescriptionAndContext(previousEntry, description, context)) {\n      const undoEntry = this.createEntry({ description, context })\n      this.undoEntries.push(undoEntry)\n      this.redoEntries = []\n    }\n  }\n\n  undo() {\n    const undoEntry = this.undoEntries.pop()\n    if (undoEntry) {\n      const redoEntry = this.createEntry(undoEntry)\n      this.redoEntries.push(redoEntry)\n      return this.composition.loadSnapshot(undoEntry.snapshot)\n    }\n  }\n\n  redo() {\n    const redoEntry = this.redoEntries.pop()\n    if (redoEntry) {\n      const undoEntry = this.createEntry(redoEntry)\n      this.undoEntries.push(undoEntry)\n      return this.composition.loadSnapshot(redoEntry.snapshot)\n    }\n  }\n\n  canUndo() {\n    return this.undoEntries.length > 0\n  }\n\n  canRedo() {\n    return this.redoEntries.length > 0\n  }\n\n  // Private\n\n  createEntry({ description, context } = {}) {\n    return {\n      description: description?.toString(),\n      context: JSON.stringify(context),\n      snapshot: this.composition.getSnapshot(),\n    }\n  }\n}\n\nconst entryHasDescriptionAndContext = (entry, description, context) =>\n  entry?.description === description?.toString() && entry?.context === JSON.stringify(context)\n", "const BLOCK_ATTRIBUTE_NAME = \"attachmentGallery\"\nconst TEXT_ATTRIBUTE_NAME = \"presentation\"\nconst TEXT_ATTRIBUTE_VALUE = \"gallery\"\n\nexport default class Filter {\n  constructor(snapshot) {\n    this.document = snapshot.document\n    this.selectedRange = snapshot.selectedRange\n  }\n\n  perform() {\n    this.removeBlockAttribute()\n    return this.applyBlockAttribute()\n  }\n\n  getSnapshot() {\n    return { document: this.document, selectedRange: this.selectedRange }\n  }\n\n  // Private\n\n  removeBlockAttribute() {\n    return this.findRangesOfBlocks().map((range) => this.document = this.document.removeAttributeAtRange(BLOCK_ATTRIBUTE_NAME, range))\n  }\n\n  applyBlockAttribute() {\n    let offset = 0\n\n    this.findRangesOfPieces().forEach((range) => {\n      if (range[1] - range[0] > 1) {\n        range[0] += offset\n        range[1] += offset\n\n        if (this.document.getCharacterAtPosition(range[1]) !== \"\\n\") {\n          this.document = this.document.insertBlockBreakAtRange(range[1])\n          if (range[1] < this.selectedRange[1]) {\n            this.moveSelectedRangeForward()\n          }\n          range[1]++\n          offset++\n        }\n\n        if (range[0] !== 0) {\n          if (this.document.getCharacterAtPosition(range[0] - 1) !== \"\\n\") {\n            this.document = this.document.insertBlockBreakAtRange(range[0])\n            if (range[0] < this.selectedRange[0]) {\n              this.moveSelectedRangeForward()\n            }\n            range[0]++\n            offset++\n          }\n        }\n\n        this.document = this.document.applyBlockAttributeAtRange(BLOCK_ATTRIBUTE_NAME, true, range)\n      }\n    })\n  }\n\n  findRangesOfBlocks() {\n    return this.document.findRangesForBlockAttribute(BLOCK_ATTRIBUTE_NAME)\n  }\n\n  findRangesOfPieces() {\n    return this.document.findRangesForTextAttribute(TEXT_ATTRIBUTE_NAME, { withValue: TEXT_ATTRIBUTE_VALUE })\n  }\n\n  moveSelectedRangeForward() {\n    this.selectedRange[0] += 1\n    this.selectedRange[1] += 1\n  }\n}\n", "import Filter from \"./filter\"\n\nexport const attachmentGalleryFilter = function(snapshot) {\n  const filter = new Filter(snapshot)\n  filter.perform()\n  return filter.getSnapshot()\n}\n\n", "import Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nimport UndoManager from \"trix/models/undo_manager\"\nimport { attachmentGalleryFilter } from \"trix/filters/attachment_gallery_filter\"\nconst DEFAULT_FILTERS = [ attachmentGalleryFilter ]\n\nexport default class Editor {\n  constructor(composition, selectionManager, element) {\n    this.insertFiles = this.insertFiles.bind(this)\n    this.composition = composition\n    this.selectionManager = selectionManager\n    this.element = element\n    this.undoManager = new UndoManager(this.composition)\n    this.filters = DEFAULT_FILTERS.slice(0)\n  }\n\n  loadDocument(document) {\n    return this.loadSnapshot({ document, selectedRange: [ 0, 0 ] })\n  }\n\n  loadHTML(html = \"\") {\n    const document = HTMLParser.parse(html, { referenceElement: this.element }).getDocument()\n    return this.loadDocument(document)\n  }\n\n  loadJSON({ document, selectedRange }) {\n    document = Document.fromJSON(document)\n    return this.loadSnapshot({ document, selectedRange })\n  }\n\n  loadSnapshot(snapshot) {\n    this.undoManager = new UndoManager(this.composition)\n    return this.composition.loadSnapshot(snapshot)\n  }\n\n  getDocument() {\n    return this.composition.document\n  }\n\n  getSelectedDocument() {\n    return this.composition.getSelectedDocument()\n  }\n\n  getSnapshot() {\n    return this.composition.getSnapshot()\n  }\n\n  toJSON() {\n    return this.getSnapshot()\n  }\n\n  // Document manipulation\n\n  deleteInDirection(direction) {\n    return this.composition.deleteInDirection(direction)\n  }\n\n  insertAttachment(attachment) {\n    return this.composition.insertAttachment(attachment)\n  }\n\n  insertAttachments(attachments) {\n    return this.composition.insertAttachments(attachments)\n  }\n\n  insertDocument(document) {\n    return this.composition.insertDocument(document)\n  }\n\n  insertFile(file) {\n    return this.composition.insertFile(file)\n  }\n\n  insertFiles(files) {\n    return this.composition.insertFiles(files)\n  }\n\n  insertHTML(html) {\n    return this.composition.insertHTML(html)\n  }\n\n  insertString(string) {\n    return this.composition.insertString(string)\n  }\n\n  insertText(text) {\n    return this.composition.insertText(text)\n  }\n\n  insertLineBreak() {\n    return this.composition.insertLineBreak()\n  }\n\n  // Selection\n\n  getSelectedRange() {\n    return this.composition.getSelectedRange()\n  }\n\n  getPosition() {\n    return this.composition.getPosition()\n  }\n\n  getClientRectAtPosition(position) {\n    const locationRange = this.getDocument().locationRangeFromRange([ position, position + 1 ])\n    return this.selectionManager.getClientRectAtLocationRange(locationRange)\n  }\n\n  expandSelectionInDirection(direction) {\n    return this.composition.expandSelectionInDirection(direction)\n  }\n\n  moveCursorInDirection(direction) {\n    return this.composition.moveCursorInDirection(direction)\n  }\n\n  setSelectedRange(selectedRange) {\n    return this.composition.setSelectedRange(selectedRange)\n  }\n\n  // Attributes\n\n  activateAttribute(name, value = true) {\n    return this.composition.setCurrentAttribute(name, value)\n  }\n\n  attributeIsActive(name) {\n    return this.composition.hasCurrentAttribute(name)\n  }\n\n  canActivateAttribute(name) {\n    return this.composition.canSetCurrentAttribute(name)\n  }\n\n  deactivateAttribute(name) {\n    return this.composition.removeCurrentAttribute(name)\n  }\n\n  // HTML attributes\n  setHTMLAtributeAtPosition(position, name, value) {\n    this.composition.setHTMLAtributeAtPosition(position, name, value)\n  }\n\n  // Nesting level\n\n  canDecreaseNestingLevel() {\n    return this.composition.canDecreaseNestingLevel()\n  }\n\n  canIncreaseNestingLevel() {\n    return this.composition.canIncreaseNestingLevel()\n  }\n\n  decreaseNestingLevel() {\n    if (this.canDecreaseNestingLevel()) {\n      return this.composition.decreaseNestingLevel()\n    }\n  }\n\n  increaseNestingLevel() {\n    if (this.canIncreaseNestingLevel()) {\n      return this.composition.increaseNestingLevel()\n    }\n  }\n\n  // Undo/redo\n\n  canRedo() {\n    return this.undoManager.canRedo()\n  }\n\n  canUndo() {\n    return this.undoManager.canUndo()\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    return this.undoManager.recordUndoEntry(description, { context, consolidatable })\n  }\n\n  redo() {\n    if (this.canRedo()) {\n      return this.undoManager.redo()\n    }\n  }\n\n  undo() {\n    if (this.canUndo()) {\n      return this.undoManager.undo()\n    }\n  }\n}\n", "/* eslint-disable\n    no-var,\n    prefer-const,\n*/\nimport {\n  elementContainsNode,\n  findChildIndexOfNode,\n  nodeIsAttachmentElement,\n  nodeIsBlockContainer,\n  nodeIsBlockStart,\n  nodeIsBlockStartComment,\n  nodeIsCursorTarget,\n  nodeIsEmptyTextNode,\n  nodeIsTextNode,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nexport default class LocationMapper {\n  constructor(element) {\n    this.element = element\n  }\n\n  findLocationFromContainerAndOffset(container, offset, { strict } = { strict: true }) {\n    let childIndex = 0\n    let foundBlock = false\n    const location = { index: 0, offset: 0 }\n    const attachmentElement = this.findAttachmentElementParentForNode(container)\n\n    if (attachmentElement) {\n      container = attachmentElement.parentNode\n      offset = findChildIndexOfNode(attachmentElement)\n    }\n\n    const walker = walkTree(this.element, { usingFilter: rejectAttachmentContents })\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n\n      if (node === container && nodeIsTextNode(container)) {\n        if (!nodeIsCursorTarget(node)) {\n          location.offset += offset\n        }\n        break\n      } else {\n        if (node.parentNode === container) {\n          if (childIndex++ === offset) {\n            break\n          }\n        } else if (!elementContainsNode(container, node)) {\n          if (childIndex > 0) {\n            break\n          }\n        }\n\n        if (nodeIsBlockStart(node, { strict })) {\n          if (foundBlock) {\n            location.index++\n          }\n          location.offset = 0\n          foundBlock = true\n        } else {\n          location.offset += nodeLength(node)\n        }\n      }\n    }\n\n    return location\n  }\n\n  findContainerAndOffsetFromLocation(location) {\n    let container, offset\n    if (location.index === 0 && location.offset === 0) {\n      container = this.element\n      offset = 0\n\n      while (container.firstChild) {\n        container = container.firstChild\n        if (nodeIsBlockContainer(container)) {\n          offset = 1\n          break\n        }\n      }\n\n      return [ container, offset ]\n    }\n\n    let [ node, nodeOffset ] = this.findNodeAndOffsetFromLocation(location)\n    if (!node) return\n\n    if (nodeIsTextNode(node)) {\n      if (nodeLength(node) === 0) {\n        container = node.parentNode.parentNode\n        offset = findChildIndexOfNode(node.parentNode)\n        if (nodeIsCursorTarget(node, { name: \"right\" })) {\n          offset++\n        }\n      } else {\n        container = node\n        offset = location.offset - nodeOffset\n      }\n    } else {\n      container = node.parentNode\n\n      if (!nodeIsBlockStart(node.previousSibling)) {\n        if (!nodeIsBlockContainer(container)) {\n          while (node === container.lastChild) {\n            node = container\n            container = container.parentNode\n            if (nodeIsBlockContainer(container)) {\n              break\n            }\n          }\n        }\n      }\n\n      offset = findChildIndexOfNode(node)\n      if (location.offset !== 0) {\n        offset++\n      }\n    }\n\n    return [ container, offset ]\n  }\n\n  findNodeAndOffsetFromLocation(location) {\n    let node, nodeOffset\n    let offset = 0\n\n    for (const currentNode of this.getSignificantNodesForIndex(location.index)) {\n      const length = nodeLength(currentNode)\n\n      if (location.offset <= offset + length) {\n        if (nodeIsTextNode(currentNode)) {\n          node = currentNode\n          nodeOffset = offset\n          if (location.offset === nodeOffset && nodeIsCursorTarget(node)) {\n            break\n          }\n        } else if (!node) {\n          node = currentNode\n          nodeOffset = offset\n        }\n      }\n\n      offset += length\n      if (offset > location.offset) {\n        break\n      }\n    }\n\n    return [ node, nodeOffset ]\n  }\n\n  // Private\n\n  findAttachmentElementParentForNode(node) {\n    while (node && node !== this.element) {\n      if (nodeIsAttachmentElement(node)) {\n        return node\n      }\n      node = node.parentNode\n    }\n  }\n\n  getSignificantNodesForIndex(index) {\n    const nodes = []\n    const walker = walkTree(this.element, { usingFilter: acceptSignificantNodes })\n    let recordingNodes = false\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      if (nodeIsBlockStartComment(node)) {\n        var blockIndex\n        if (blockIndex != null) {\n          blockIndex++\n        } else {\n          blockIndex = 0\n        }\n\n        if (blockIndex === index) {\n          recordingNodes = true\n        } else if (recordingNodes) {\n          break\n        }\n      } else if (recordingNodes) {\n        nodes.push(node)\n      }\n    }\n\n    return nodes\n  }\n}\n\nconst nodeLength = function(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (nodeIsCursorTarget(node)) {\n      return 0\n    } else {\n      const string = node.textContent\n      return string.length\n    }\n  } else if (tagName(node) === \"br\" || nodeIsAttachmentElement(node)) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nconst acceptSignificantNodes = function(node) {\n  if (rejectEmptyTextNodes(node) === NodeFilter.FILTER_ACCEPT) {\n    return rejectAttachmentContents(node)\n  } else {\n    return NodeFilter.FILTER_REJECT\n  }\n}\n\nconst rejectEmptyTextNodes = function(node) {\n  if (nodeIsEmptyTextNode(node)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\nconst rejectAttachmentContents = function(node) {\n  if (nodeIsAttachmentElement(node.parentNode)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n", "/* eslint-disable\n    id-length,\n    no-empty,\n*/\nimport { getDOMRange, setDOMRange } from \"trix/core/helpers\"\n\nexport default class PointMapper {\n  createDOMRangeFromPoint({ x, y }) {\n    let domRange\n    if (document.caretPositionFromPoint) {\n      const { offsetNode, offset } = document.caretPositionFromPoint(x, y)\n      domRange = document.createRange()\n      domRange.setStart(offsetNode, offset)\n      return domRange\n    } else if (document.caretRangeFromPoint) {\n      return document.caretRangeFromPoint(x, y)\n    } else if (document.body.createTextRange) {\n      const originalDOMRange = getDOMRange()\n      try {\n        // IE 11 throws \"Unspecified error\" when using moveToPoint\n        // during a drag-and-drop operation.\n        const textRange = document.body.createTextRange()\n        textRange.moveToPoint(x, y)\n        textRange.select()\n      } catch (error) {}\n      domRange = getDOMRange()\n      setDOMRange(originalDOMRange)\n      return domRange\n    }\n  }\n\n  getClientRectsForDOMRange(domRange) {\n    const array = Array.from(domRange.getClientRects())\n    const start = array[0]\n    const end = array[array.length - 1]\n\n    return [ start, end ]\n  }\n}\n", "/* eslint-disable\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nimport LocationMapper from \"trix/models/location_mapper\"\nimport PointMapper from \"trix/models/point_mapper\"\n\nimport {\n  elementContainsNode,\n  getDOMRange,\n  getDOMSelection,\n  handleEvent,\n  innerElementIsActive,\n  nodeIsCursorTarget,\n  normalizeRange,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  setDOMRange,\n} from \"trix/core/helpers\"\n\nexport default class SelectionManager extends BasicObject {\n  constructor(element) {\n    super(...arguments)\n    this.didMouseDown = this.didMouseDown.bind(this)\n    this.selectionDidChange = this.selectionDidChange.bind(this)\n    this.element = element\n    this.locationMapper = new LocationMapper(this.element)\n    this.pointMapper = new PointMapper()\n    this.lockCount = 0\n    handleEvent(\"mousedown\", { onElement: this.element, withCallback: this.didMouseDown })\n  }\n\n  getLocationRange(options = {}) {\n    if (options.strict === false) {\n      return this.createLocationRangeFromDOMRange(getDOMRange())\n    } else if (options.ignoreLock) {\n      return this.currentLocationRange\n    } else if (this.lockedLocationRange) {\n      return this.lockedLocationRange\n    } else {\n      return this.currentLocationRange\n    }\n  }\n\n  setLocationRange(locationRange) {\n    if (this.lockedLocationRange) return\n    locationRange = normalizeRange(locationRange)\n\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      setDOMRange(domRange)\n      this.updateCurrentLocationRange(locationRange)\n    }\n  }\n\n  setLocationRangeFromPointRange(pointRange) {\n    pointRange = normalizeRange(pointRange)\n    const startLocation = this.getLocationAtPoint(pointRange[0])\n    const endLocation = this.getLocationAtPoint(pointRange[1])\n    this.setLocationRange([ startLocation, endLocation ])\n  }\n\n  getClientRectAtLocationRange(locationRange) {\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      return this.getClientRectsForDOMRange(domRange)[1]\n    }\n  }\n\n  locationIsCursorTarget(location) {\n    const node = Array.from(this.findNodeAndOffsetFromLocation(location))[0]\n    return nodeIsCursorTarget(node)\n  }\n\n  lock() {\n    if (this.lockCount++ === 0) {\n      this.updateCurrentLocationRange()\n      this.lockedLocationRange = this.getLocationRange()\n    }\n  }\n\n  unlock() {\n    if (--this.lockCount === 0) {\n      const { lockedLocationRange } = this\n      this.lockedLocationRange = null\n      if (lockedLocationRange != null) {\n        return this.setLocationRange(lockedLocationRange)\n      }\n    }\n  }\n\n  clearSelection() {\n    return getDOMSelection()?.removeAllRanges()\n  }\n\n  selectionIsCollapsed() {\n    return getDOMRange()?.collapsed === true\n  }\n\n  selectionIsExpanded() {\n    return !this.selectionIsCollapsed()\n  }\n\n  createLocationRangeFromDOMRange(domRange, options) {\n    if (domRange == null || !this.domRangeWithinElement(domRange)) return\n\n    const start = this.findLocationFromContainerAndOffset(domRange.startContainer, domRange.startOffset, options)\n    if (!start) return\n\n    const end = domRange.collapsed\n      ? undefined\n      : this.findLocationFromContainerAndOffset(domRange.endContainer, domRange.endOffset, options)\n\n    return normalizeRange([ start, end ])\n  }\n\n  didMouseDown() {\n    return this.pauseTemporarily()\n  }\n\n  pauseTemporarily() {\n    let resumeHandlers\n    this.paused = true\n\n    const resume = () => {\n      this.paused = false\n      clearTimeout(resumeTimeout)\n\n      Array.from(resumeHandlers).forEach((handler) => {\n        handler.destroy()\n      })\n\n      if (elementContainsNode(document, this.element)) {\n        return this.selectionDidChange()\n      }\n    }\n\n    const resumeTimeout = setTimeout(resume, 200)\n\n    resumeHandlers = [ \"mousemove\", \"keydown\" ].map((eventName) =>\n      handleEvent(eventName, { onElement: document, withCallback: resume })\n    )\n  }\n\n  selectionDidChange() {\n    if (!this.paused && !innerElementIsActive(this.element)) {\n      return this.updateCurrentLocationRange()\n    }\n  }\n\n  updateCurrentLocationRange(locationRange) {\n    if (locationRange != null ? locationRange : locationRange = this.createLocationRangeFromDOMRange(getDOMRange())) {\n      if (!rangesAreEqual(locationRange, this.currentLocationRange)) {\n        this.currentLocationRange = locationRange\n        return this.delegate?.locationRangeDidChange?.(this.currentLocationRange.slice(0))\n      }\n    }\n  }\n\n  createDOMRangeFromLocationRange(locationRange) {\n    const rangeStart = this.findContainerAndOffsetFromLocation(locationRange[0])\n    const rangeEnd = rangeIsCollapsed(locationRange)\n      ? rangeStart\n      : this.findContainerAndOffsetFromLocation(locationRange[1]) || rangeStart\n\n    if (rangeStart != null && rangeEnd != null) {\n      const domRange = document.createRange()\n      domRange.setStart(...Array.from(rangeStart || []))\n      domRange.setEnd(...Array.from(rangeEnd || []))\n      return domRange\n    }\n  }\n\n  getLocationAtPoint(point) {\n    const domRange = this.createDOMRangeFromPoint(point)\n    if (domRange) {\n      return this.createLocationRangeFromDOMRange(domRange)?.[0]\n    }\n  }\n\n  domRangeWithinElement(domRange) {\n    if (domRange.collapsed) {\n      return elementContainsNode(this.element, domRange.startContainer)\n    } else {\n      return (\n        elementContainsNode(this.element, domRange.startContainer) &&\n        elementContainsNode(this.element, domRange.endContainer)\n      )\n    }\n  }\n}\n\nSelectionManager.proxyMethod(\"locationMapper.findLocationFromContainerAndOffset\")\nSelectionManager.proxyMethod(\"locationMapper.findContainerAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"locationMapper.findNodeAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"pointMapper.createDOMRangeFromPoint\")\nSelectionManager.proxyMethod(\"pointMapper.getClientRectsForDOMRange\")\n\n", "import { removeNode } from \"trix/core/helpers\"\n\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\n\nimport { defer, handleEvent, makeElement, tagName, triggerEvent } from \"trix/core/helpers\"\nconst { lang, css, keyNames } = config\n\nconst undoable = function(fn) {\n  return function() {\n    const commands = fn.apply(this, arguments)\n    commands.do()\n    if (!this.undos) {\n      this.undos = []\n    }\n    this.undos.push(commands.undo)\n  }\n}\n\nexport default class AttachmentEditorController extends BasicObject {\n  constructor(attachmentPiece, element, container, options = {}) {\n    super(...arguments)\n    this.didClickToolbar = this.didClickToolbar.bind(this)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didKeyDownCaption = this.didKeyDownCaption.bind(this)\n    this.didInputCaption = this.didInputCaption.bind(this)\n    this.didChangeCaption = this.didChangeCaption.bind(this)\n    this.didBlurCaption = this.didBlurCaption.bind(this)\n    this.attachmentPiece = attachmentPiece\n    this.element = element\n    this.container = container\n    this.options = options\n    this.attachment = this.attachmentPiece.attachment\n    if (tagName(this.element) === \"a\") {\n      this.element = this.element.firstChild\n    }\n    this.install()\n  }\n\n  install() {\n    this.makeElementMutable()\n    this.addToolbar()\n    if (this.attachment.isPreviewable()) {\n      this.installCaptionEditor()\n    }\n  }\n\n  uninstall() {\n    let undo = this.undos.pop()\n    this.savePendingCaption()\n    while (undo) {\n      undo()\n      undo = this.undos.pop()\n    }\n    this.delegate?.didUninstallAttachmentEditor(this)\n  }\n\n  // Private\n\n  savePendingCaption() {\n    if (this.pendingCaption != null) {\n      const caption = this.pendingCaption\n      this.pendingCaption = null\n      if (caption) {\n        this.delegate?.attachmentEditorDidRequestUpdatingAttributesForAttachment?.({ caption }, this.attachment)\n      } else {\n        this.delegate?.attachmentEditorDidRequestRemovingAttributeForAttachment?.(\"caption\", this.attachment)\n      }\n    }\n  }\n\n  // Installing and uninstalling\n\n  makeElementMutable = undoable(() => {\n    return {\n      do: () => {\n        this.element.dataset.trixMutable = true\n      },\n      undo: () => delete this.element.dataset.trixMutable,\n    }\n  })\n\n  addToolbar = undoable(() => {\n    // <div class=\"#{css.attachmentMetadataContainer}\" data-trix-mutable=\"true\">\n    //   <div class=\"trix-button-row\">\n    //     <span class=\"trix-button-group trix-button-group--actions\">\n    //       <button type=\"button\" class=\"trix-button trix-button--remove\" title=\"#{lang.remove}\" data-trix-action=\"remove\">#{lang.remove}</button>\n    //     </span>\n    //   </div>\n    // </div>\n    const element = makeElement({\n      tagName: \"div\",\n      className: css.attachmentToolbar,\n      data: { trixMutable: true },\n      childNodes: makeElement({\n        tagName: \"div\",\n        className: \"trix-button-row\",\n        childNodes: makeElement({\n          tagName: \"span\",\n          className: \"trix-button-group trix-button-group--actions\",\n          childNodes: makeElement({\n            tagName: \"button\",\n            className: \"trix-button trix-button--remove\",\n            textContent: lang.remove,\n            attributes: { title: lang.remove },\n            data: { trixAction: \"remove\" },\n          }),\n        }),\n      }),\n    })\n\n    if (this.attachment.isPreviewable()) {\n      // <div class=\"#{css.attachmentMetadataContainer}\">\n      //   <span class=\"#{css.attachmentMetadata}\">\n      //     <span class=\"#{css.attachmentName}\" title=\"#{name}\">#{name}</span>\n      //     <span class=\"#{css.attachmentSize}\">#{size}</span>\n      //   </span>\n      // </div>\n      element.appendChild(\n        makeElement({\n          tagName: \"div\",\n          className: css.attachmentMetadataContainer,\n          childNodes: makeElement({\n            tagName: \"span\",\n            className: css.attachmentMetadata,\n            childNodes: [\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentName,\n                textContent: this.attachment.getFilename(),\n                attributes: { title: this.attachment.getFilename() },\n              }),\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentSize,\n                textContent: this.attachment.getFormattedFilesize(),\n              }),\n            ],\n          }),\n        })\n      )\n    }\n\n    handleEvent(\"click\", { onElement: element, withCallback: this.didClickToolbar })\n    handleEvent(\"click\", {\n      onElement: element,\n      matchingSelector: \"[data-trix-action]\",\n      withCallback: this.didClickActionButton,\n    })\n\n    triggerEvent(\"trix-attachment-before-toolbar\", { onElement: this.element, attributes: { toolbar: element, attachment: this.attachment } })\n\n    return {\n      do: () => this.element.appendChild(element),\n      undo: () => removeNode(element),\n    }\n  })\n\n  installCaptionEditor = undoable(() => {\n    const textarea = makeElement({\n      tagName: \"textarea\",\n      className: css.attachmentCaptionEditor,\n      attributes: { placeholder: lang.captionPlaceholder },\n      data: { trixMutable: true },\n    })\n    textarea.value = this.attachmentPiece.getCaption()\n\n    const textareaClone = textarea.cloneNode()\n    textareaClone.classList.add(\"trix-autoresize-clone\")\n    textareaClone.tabIndex = -1\n\n    const autoresize = function() {\n      textareaClone.value = textarea.value\n      textarea.style.height = textareaClone.scrollHeight + \"px\"\n    }\n\n    handleEvent(\"input\", { onElement: textarea, withCallback: autoresize })\n    handleEvent(\"input\", { onElement: textarea, withCallback: this.didInputCaption })\n    handleEvent(\"keydown\", { onElement: textarea, withCallback: this.didKeyDownCaption })\n    handleEvent(\"change\", { onElement: textarea, withCallback: this.didChangeCaption })\n    handleEvent(\"blur\", { onElement: textarea, withCallback: this.didBlurCaption })\n\n    const figcaption = this.element.querySelector(\"figcaption\")\n    const editingFigcaption = figcaption.cloneNode()\n\n    return {\n      do: () => {\n        figcaption.style.display = \"none\"\n        editingFigcaption.appendChild(textarea)\n        editingFigcaption.appendChild(textareaClone)\n        editingFigcaption.classList.add(`${css.attachmentCaption}--editing`)\n        figcaption.parentElement.insertBefore(editingFigcaption, figcaption)\n        autoresize()\n        if (this.options.editCaption) {\n          return defer(() => textarea.focus())\n        }\n      },\n      undo() {\n        removeNode(editingFigcaption)\n        figcaption.style.display = null\n      },\n    }\n  })\n\n  // Event handlers\n\n  didClickToolbar(event) {\n    event.preventDefault()\n    return event.stopPropagation()\n  }\n\n  didClickActionButton(event) {\n    const action = event.target.getAttribute(\"data-trix-action\")\n    switch (action) {\n      case \"remove\":\n        return this.delegate?.attachmentEditorDidRequestRemovalOfAttachment(this.attachment)\n    }\n  }\n\n  didKeyDownCaption(event) {\n    if (keyNames[event.keyCode] === \"return\") {\n      event.preventDefault()\n      this.savePendingCaption()\n      return this.delegate?.attachmentEditorDidRequestDeselectingAttachment?.(this.attachment)\n    }\n  }\n\n  didInputCaption(event) {\n    this.pendingCaption = event.target.value.replace(/\\s/g, \" \").trim()\n  }\n\n  didChangeCaption(event) {\n    return this.savePendingCaption()\n  }\n\n  didBlurCaption(event) {\n    return this.savePendingCaption()\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\nimport DocumentView from \"trix/views/document_view\"\nimport AttachmentEditorController from \"trix/controllers/attachment_editor_controller\"\n\nimport { defer, findClosestElementFromNode, handleEvent, innerElementIsActive } from \"trix/core/helpers\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nexport default class CompositionController extends BasicObject {\n  constructor(element, composition) {\n    super(...arguments)\n    this.didFocus = this.didFocus.bind(this)\n    this.didBlur = this.didBlur.bind(this)\n    this.didClickAttachment = this.didClickAttachment.bind(this)\n\n    this.element = element\n    this.composition = composition\n    this.documentView = new DocumentView(this.composition.document, { element: this.element })\n\n    handleEvent(\"focus\", { onElement: this.element, withCallback: this.didFocus })\n    handleEvent(\"blur\", { onElement: this.element, withCallback: this.didBlur })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: \"a[contenteditable=false]\",\n      preventDefault: true,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attachmentSelector,\n      withCallback: this.didClickAttachment,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: `a${attachmentSelector}`, preventDefault: true })\n  }\n\n  didFocus(event) {\n    const perform = () => {\n      if (!this.focused) {\n        this.focused = true\n        return this.delegate?.compositionControllerDidFocus?.()\n      }\n    }\n\n    return this.blurPromise?.then(perform) || perform()\n  }\n\n  didBlur(event) {\n    this.blurPromise = new Promise((resolve) => {\n      return defer(() => {\n        if (!innerElementIsActive(this.element)) {\n          this.focused = null\n          this.delegate?.compositionControllerDidBlur?.()\n        }\n        this.blurPromise = null\n        return resolve()\n      })\n    })\n  }\n\n  didClickAttachment(event, target) {\n    const attachment = this.findAttachmentForElement(target)\n    const editCaption = !!findClosestElementFromNode(event.target, { matchingSelector: \"figcaption\" })\n    return this.delegate?.compositionControllerDidSelectAttachment?.(attachment, { editCaption })\n  }\n\n  getSerializableElement() {\n    if (this.isEditingAttachment()) {\n      return this.documentView.shadowElement\n    } else {\n      return this.element\n    }\n  }\n\n  render() {\n    if (this.revision !== this.composition.revision) {\n      this.documentView.setDocument(this.composition.document)\n      this.documentView.render()\n      this.revision = this.composition.revision\n    }\n\n    if (this.canSyncDocumentView() && !this.documentView.isSynced()) {\n      this.delegate?.compositionControllerWillSyncDocumentView?.()\n      this.documentView.sync()\n      this.delegate?.compositionControllerDidSyncDocumentView?.()\n    }\n\n    return this.delegate?.compositionControllerDidRender?.()\n  }\n\n  rerenderViewForObject(object) {\n    this.invalidateViewForObject(object)\n    return this.render()\n  }\n\n  invalidateViewForObject(object) {\n    return this.documentView.invalidateViewForObject(object)\n  }\n\n  isViewCachingEnabled() {\n    return this.documentView.isViewCachingEnabled()\n  }\n\n  enableViewCaching() {\n    return this.documentView.enableViewCaching()\n  }\n\n  disableViewCaching() {\n    return this.documentView.disableViewCaching()\n  }\n\n  refreshViewCache() {\n    return this.documentView.garbageCollectCachedViews()\n  }\n\n  // Attachment editor management\n\n  isEditingAttachment() {\n    return !!this.attachmentEditor\n  }\n\n  installAttachmentEditorForAttachment(attachment, options) {\n    if (this.attachmentEditor?.attachment === attachment) return\n    const element = this.documentView.findElementForObject(attachment)\n    if (!element) return\n\n    this.uninstallAttachmentEditor()\n    const attachmentPiece = this.composition.document.getAttachmentPieceForAttachment(attachment)\n    this.attachmentEditor = new AttachmentEditorController(attachmentPiece, element, this.element, options)\n    this.attachmentEditor.delegate = this\n  }\n\n  uninstallAttachmentEditor() {\n    return this.attachmentEditor?.uninstall()\n  }\n\n  // Attachment controller delegate\n\n  didUninstallAttachmentEditor() {\n    this.attachmentEditor = null\n    return this.render()\n  }\n\n  attachmentEditorDidRequestUpdatingAttributesForAttachment(attributes, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.updateAttributesForAttachment(attributes, attachment)\n  }\n\n  attachmentEditorDidRequestRemovingAttributeForAttachment(attribute, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.removeAttributeForAttachment(attribute, attachment)\n  }\n\n  attachmentEditorDidRequestRemovalOfAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestRemovalOfAttachment?.(attachment)\n  }\n\n  attachmentEditorDidRequestDeselectingAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestDeselectingAttachment?.(attachment)\n  }\n\n  // Private\n\n  canSyncDocumentView() {\n    return !this.isEditingAttachment()\n  }\n\n  findAttachmentForElement(element) {\n    return this.composition.document.getAttachmentById(parseInt(element.dataset.trixId, 10))\n  }\n}\n", "import \"trix/views/object_view\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class Controller extends BasicObject {}\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport {\n  findClosestElementFromNode,\n  nodeIsBlockStartComment,\n  nodeIsEmptyTextNode,\n  normalizeSpaces,\n  summarizeStringChange,\n  tagName,\n} from \"trix/core/helpers\"\n\nconst mutableAttributeName = \"data-trix-mutable\"\nconst mutableSelector = `[${mutableAttributeName}]`\n\nconst options = {\n  attributes: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport default class MutationObserver extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didMutate = this.didMutate.bind(this)\n    this.element = element\n    this.observer = new window.MutationObserver(this.didMutate)\n    this.start()\n  }\n\n  start() {\n    this.reset()\n    return this.observer.observe(this.element, options)\n  }\n\n  stop() {\n    return this.observer.disconnect()\n  }\n\n  didMutate(mutations) {\n    this.mutations.push(...Array.from(this.findSignificantMutations(mutations) || []))\n\n    if (this.mutations.length) {\n      this.delegate?.elementDidMutate?.(this.getMutationSummary())\n      return this.reset()\n    }\n  }\n\n  // Private\n\n  reset() {\n    this.mutations = []\n  }\n\n  findSignificantMutations(mutations) {\n    return mutations.filter((mutation) => {\n      return this.mutationIsSignificant(mutation)\n    })\n  }\n\n  mutationIsSignificant(mutation) {\n    if (this.nodeIsMutable(mutation.target)) {\n      return false\n    }\n    for (const node of Array.from(this.nodesModifiedByMutation(mutation))) {\n      if (this.nodeIsSignificant(node)) return true\n    }\n    return false\n  }\n\n  nodeIsSignificant(node) {\n    return node !== this.element && !this.nodeIsMutable(node) && !nodeIsEmptyTextNode(node)\n  }\n\n  nodeIsMutable(node) {\n    return findClosestElementFromNode(node, { matchingSelector: mutableSelector })\n  }\n\n  nodesModifiedByMutation(mutation) {\n    const nodes = []\n    switch (mutation.type) {\n      case \"attributes\":\n        if (mutation.attributeName !== mutableAttributeName) {\n          nodes.push(mutation.target)\n        }\n        break\n      case \"characterData\":\n        // Changes to text nodes should consider the parent element\n        nodes.push(mutation.target.parentNode)\n        nodes.push(mutation.target)\n        break\n      case \"childList\":\n        // Consider each added or removed node\n        nodes.push(...Array.from(mutation.addedNodes || []))\n        nodes.push(...Array.from(mutation.removedNodes || []))\n        break\n    }\n    return nodes\n  }\n\n  getMutationSummary() {\n    return this.getTextMutationSummary()\n  }\n\n  getTextMutationSummary() {\n    const { additions, deletions } = this.getTextChangesFromCharacterData()\n    const textChanges = this.getTextChangesFromChildList()\n\n    Array.from(textChanges.additions).forEach((addition) => {\n      if (!Array.from(additions).includes(addition)) {\n        additions.push(addition)\n      }\n    })\n\n    deletions.push(...Array.from(textChanges.deletions || []))\n\n    const summary = {}\n\n    const added = additions.join(\"\")\n    if (added) {\n      summary.textAdded = added\n    }\n\n    const deleted = deletions.join(\"\")\n    if (deleted) {\n      summary.textDeleted = deleted\n    }\n\n    return summary\n  }\n\n  getMutationsByType(type) {\n    return Array.from(this.mutations).filter((mutation) => mutation.type === type)\n  }\n\n  getTextChangesFromChildList() {\n    let textAdded, textRemoved\n    const addedNodes = []\n    const removedNodes = []\n\n    Array.from(this.getMutationsByType(\"childList\")).forEach((mutation) => {\n      addedNodes.push(...Array.from(mutation.addedNodes || []))\n      removedNodes.push(...Array.from(mutation.removedNodes || []))\n    })\n\n    const singleBlockCommentRemoved =\n      addedNodes.length === 0 && removedNodes.length === 1 && nodeIsBlockStartComment(removedNodes[0])\n\n    if (singleBlockCommentRemoved) {\n      textAdded = []\n      textRemoved = [ \"\\n\" ]\n    } else {\n      textAdded = getTextForNodes(addedNodes)\n      textRemoved = getTextForNodes(removedNodes)\n    }\n\n    const additions = textAdded.filter((text, index) => text !== textRemoved[index]).map(normalizeSpaces)\n    const deletions = textRemoved.filter((text, index) => text !== textAdded[index]).map(normalizeSpaces)\n\n    return { additions, deletions }\n  }\n\n  getTextChangesFromCharacterData() {\n    let added, removed\n    const characterMutations = this.getMutationsByType(\"characterData\")\n\n    if (characterMutations.length) {\n      const startMutation = characterMutations[0],\n        endMutation = characterMutations[characterMutations.length - 1]\n\n      const oldString = normalizeSpaces(startMutation.oldValue)\n      const newString = normalizeSpaces(endMutation.target.data)\n      const summarized = summarizeStringChange(oldString, newString)\n      added = summarized.added\n      removed = summarized.removed\n    }\n\n    return {\n      additions: added ? [ added ] : [],\n      deletions: removed ? [ removed ] : [],\n    }\n  }\n}\n\nconst getTextForNodes = function(nodes = []) {\n  const text = []\n  for (const node of Array.from(nodes)) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        text.push(node.data)\n        break\n      case Node.ELEMENT_NODE:\n        if (tagName(node) === \"br\") {\n          text.push(\"\\n\")\n        } else {\n          text.push(...Array.from(getTextForNodes(node.childNodes) || []))\n        }\n        break\n    }\n  }\n  return text\n}\n", "/* eslint-disable\n    no-empty,\n*/\nimport Operation from \"trix/core/utilities/operation\"\n\nexport default class FileVerificationOperation extends Operation {\n  constructor(file) {\n    super(...arguments)\n    this.file = file\n  }\n\n  perform(callback) {\n    const reader = new FileReader()\n\n    reader.onerror = () => callback(false)\n\n    reader.onload = () => {\n      reader.onerror = null\n      try {\n        reader.abort()\n      } catch (error) {}\n      return callback(true, this.file)\n    }\n\n    return reader.readAsArrayBuffer(this.file)\n  }\n}\n", "import * as config from \"trix/config\"\nimport { NON_BREAKING_SPACE, OBJECT_REPLACEMENT_CHARACTER, ZERO_WIDTH_SPACE } from \"trix/constants\"\n\n// Each software keyboard on Android emits its own set of events and some of them can be buggy.\n// This class detects when some buggy events are being emitted and lets know the input controller\n// that they should be ignored.\nexport default class FlakyAndroidKeyboardDetector {\n  constructor(element) {\n    this.element = element\n  }\n\n  shouldIgnore(event) {\n    if (!config.browser.samsungAndroid) return false\n\n    this.previousEvent = this.event\n    this.event = event\n\n    this.checkSamsungKeyboardBuggyModeStart()\n    this.checkSamsungKeyboardBuggyModeEnd()\n\n    return this.buggyMode\n  }\n\n  // private\n\n  // The Samsung keyboard on Android can enter a buggy state in which it emits a flurry of confused events that,\n  // if processed, corrupts the editor. The buggy mode always starts with an insertText event, right after a\n  // keydown event with for an \"Unidentified\" key, with the same text as the editor element, except for a few\n  // extra whitespace, or exotic utf8, characters.\n  checkSamsungKeyboardBuggyModeStart() {\n    if (this.insertingLongTextAfterUnidentifiedChar() && differsInWhitespace(this.element.innerText, this.event.data)) {\n      this.buggyMode = true\n      this.event.preventDefault()\n    }\n  }\n\n  // The flurry of buggy events are always insertText. If we see any other type, it means it's over.\n  checkSamsungKeyboardBuggyModeEnd() {\n    if (this.buggyMode && this.event.inputType !== \"insertText\") {\n      this.buggyMode = false\n    }\n  }\n\n  insertingLongTextAfterUnidentifiedChar() {\n    return this.isBeforeInputInsertText() && this.previousEventWasUnidentifiedKeydown() && this.event.data?.length > 50\n  }\n\n  isBeforeInputInsertText() {\n    return this.event.type === \"beforeinput\" && this.event.inputType === \"insertText\"\n  }\n\n  previousEventWasUnidentifiedKeydown() {\n    return this.previousEvent?.type === \"keydown\" && this.previousEvent?.key === \"Unidentified\"\n  }\n}\n\nconst differsInWhitespace = (text1, text2) => {\n  return normalize(text1) === normalize(text2)\n}\n\nconst whiteSpaceNormalizerRegexp = new RegExp(`(${OBJECT_REPLACEMENT_CHARACTER}|${ZERO_WIDTH_SPACE}|${NON_BREAKING_SPACE}|\\\\s)+`, \"g\")\nconst normalize = (text) => text.replace(whiteSpaceNormalizerRegexp, \" \").trim()\n", "import BasicObject from \"trix/core/basic_object\"\nimport MutationObserver from \"trix/observers/mutation_observer\"\nimport FileVerificationOperation from \"trix/operations/file_verification_operation\"\nimport FlakyAndroidKeyboardDetector from \"../models/flaky_android_keyboard_detector\"\n\nimport { handleEvent, innerElementIsActive } from \"trix/core/helpers\"\n\nexport default class InputController extends BasicObject {\n\n  static events = {}\n\n  constructor(element) {\n    super(...arguments)\n    this.element = element\n    this.mutationObserver = new MutationObserver(this.element)\n    this.mutationObserver.delegate = this\n    this.flakyKeyboardDetector = new FlakyAndroidKeyboardDetector(this.element)\n    for (const eventName in this.constructor.events) {\n      handleEvent(eventName, { onElement: this.element, withCallback: this.handlerFor(eventName) })\n    }\n  }\n\n  elementDidMutate(mutationSummary) {}\n\n  editorWillSyncDocumentView() {\n    return this.mutationObserver.stop()\n  }\n\n  editorDidSyncDocumentView() {\n    return this.mutationObserver.start()\n  }\n\n  requestRender() {\n    return this.delegate?.inputControllerDidRequestRender?.()\n  }\n\n  requestReparse() {\n    this.delegate?.inputControllerDidRequestReparse?.()\n    return this.requestRender()\n  }\n\n  attachFiles(files) {\n    const operations = Array.from(files).map((file) => new FileVerificationOperation(file))\n    return Promise.all(operations).then((files) => {\n      this.handleInput(function() {\n        this.delegate?.inputControllerWillAttachFiles()\n        this.responder?.insertFiles(files)\n        return this.requestRender()\n      })\n    })\n  }\n\n  // Private\n\n  handlerFor(eventName) {\n    return (event) => {\n      if (!event.defaultPrevented) {\n        this.handleInput(() => {\n          if (!innerElementIsActive(this.element)) {\n            if (this.flakyKeyboardDetector.shouldIgnore(event)) return\n\n            this.eventName = eventName\n            this.constructor.events[eventName].call(this, event)\n          }\n        })\n      }\n    }\n  }\n\n  handleInput(callback) {\n    try {\n      this.delegate?.inputControllerWillHandleInput()\n      callback.call(this)\n    } finally {\n      this.delegate?.inputControllerDidHandleInput()\n    }\n  }\n\n  createLinkHTML(href, text) {\n    const link = document.createElement(\"a\")\n    link.href = href\n    link.textContent = text ? text : href\n    return link.outerHTML\n  }\n}\n\n", "import * as config from \"trix/config\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\nimport BasicObject from \"trix/core/basic_object\"\nimport InputController from \"trix/controllers/input_controller\"\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\n\nimport {\n  dataTransferIsPlainText,\n  dataTransferIsWritable,\n  keyEventIsKeyboardCommand,\n  makeElement,\n  objectsAreEqual,\n  removeNode,\n  squishBreakableWhitespace,\n} from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst { browser, keyNames } = config\nlet pastedFileCount = 0\n\nexport default class Level0InputController extends InputController {\n\n  static events = {\n    keydown(event) {\n      if (!this.isComposing()) {\n        this.resetInputSummary()\n      }\n      this.inputSummary.didInput = true\n\n      const keyName = keyNames[event.keyCode]\n      if (keyName) {\n        let context = this.keys\n\n        ;[ \"ctrl\", \"alt\", \"shift\", \"meta\" ].forEach((modifier) => {\n          if (event[`${modifier}Key`]) {\n            if (modifier === \"ctrl\") {\n              modifier = \"control\"\n            }\n            context = context?.[modifier]\n          }\n        })\n\n        if (context?.[keyName] != null) {\n          this.setInputSummary({ keyName })\n          selectionChangeObserver.reset()\n          context[keyName].call(this, event)\n        }\n      }\n\n      if (keyEventIsKeyboardCommand(event)) {\n        const character = String.fromCharCode(event.keyCode).toLowerCase()\n        if (character) {\n          const keys = [ \"alt\", \"shift\" ].map((modifier) => {\n            if (event[`${modifier}Key`]) {\n              return modifier\n            }\n          }).filter(key => key)\n          keys.push(character)\n          if (this.delegate?.inputControllerDidReceiveKeyboardCommand(keys)) {\n            event.preventDefault()\n          }\n        }\n      }\n    },\n\n    keypress(event) {\n      if (this.inputSummary.eventName != null) return\n      if (event.metaKey) return\n      if (event.ctrlKey && !event.altKey) return\n\n      const string = stringFromKeyEvent(event)\n      if (string) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(string)\n        return this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n      }\n    },\n\n    textInput(event) {\n      // Handle autocapitalization\n      const { data } = event\n      const { textAdded } = this.inputSummary\n      if (textAdded && textAdded !== data && textAdded.toUpperCase() === data) {\n        const range = this.getSelectedRange()\n        this.setSelectedRange([ range[0], range[1] + textAdded.length ])\n        this.responder?.insertString(data)\n        this.setInputSummary({ textAdded: data })\n        return this.setSelectedRange(range)\n      }\n    },\n\n    dragenter(event) {\n      event.preventDefault()\n    },\n\n    dragstart(event) {\n      this.serializeSelectionToDataTransfer(event.dataTransfer)\n      this.draggedRange = this.getSelectedRange()\n      return this.delegate?.inputControllerDidStartDrag?.()\n    },\n\n    dragover(event) {\n      if (this.draggedRange || this.canAcceptDataTransfer(event.dataTransfer)) {\n        event.preventDefault()\n        const draggingPoint = { x: event.clientX, y: event.clientY }\n        if (!objectsAreEqual(draggingPoint, this.draggingPoint)) {\n          this.draggingPoint = draggingPoint\n          return this.delegate?.inputControllerDidReceiveDragOverPoint?.(this.draggingPoint)\n        }\n      }\n    },\n\n    dragend(event) {\n      this.delegate?.inputControllerDidCancelDrag?.()\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    drop(event) {\n      event.preventDefault()\n      const files = event.dataTransfer?.files\n      const documentJSON = event.dataTransfer.getData(\"application/x-trix-document\")\n\n      const point = { x: event.clientX, y: event.clientY }\n      this.responder?.setLocationRangeFromPointRange(point)\n\n      if (files?.length) {\n        this.attachFiles(files)\n      } else if (this.draggedRange) {\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.draggedRange)\n        this.draggedRange = null\n        this.requestRender()\n      } else if (documentJSON) {\n        const document = Document.fromJSONString(documentJSON)\n        this.responder?.insertDocument(document)\n        this.requestRender()\n      }\n\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    cut(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n\n        this.delegate?.inputControllerWillCutText()\n        this.deleteInDirection(\"backward\")\n        if (event.defaultPrevented) {\n          return this.requestRender()\n        }\n      }\n    },\n\n    copy(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n      }\n    },\n\n    paste(event) {\n      const clipboard = event.clipboardData || event.testClipboardData\n      const paste = { clipboard }\n\n      if (!clipboard || pasteEventIsCrippledSafariHTMLPaste(event)) {\n        this.getPastedHTMLUsingHiddenElement((html) => {\n          paste.type = \"text/html\"\n          paste.html = html\n          this.delegate?.inputControllerWillPaste(paste)\n          this.responder?.insertHTML(paste.html)\n          this.requestRender()\n          return this.delegate?.inputControllerDidPaste(paste)\n        })\n        return\n      }\n\n      const href = clipboard.getData(\"URL\")\n      const html = clipboard.getData(\"text/html\")\n      const name = clipboard.getData(\"public.url-name\")\n\n      if (href) {\n        let string\n        paste.type = \"text/html\"\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (dataTransferIsPlainText(clipboard)) {\n        paste.type = \"text/plain\"\n        paste.string = clipboard.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: paste.string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertString(paste.string)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (html) {\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (Array.from(clipboard.types).includes(\"Files\")) {\n        const file = clipboard.items?.[0]?.getAsFile?.()\n        if (file) {\n          const extension = extensionForFile(file)\n          if (!file.name && extension) {\n            file.name = `pasted-file-${++pastedFileCount}.${extension}`\n          }\n          paste.type = \"File\"\n          paste.file = file\n          this.delegate?.inputControllerWillAttachFiles()\n          this.responder?.insertFile(paste.file)\n          this.requestRender()\n          this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n\n      event.preventDefault()\n    },\n\n    compositionstart(event) {\n      return this.getCompositionInput().start(event.data)\n    },\n\n    compositionupdate(event) {\n      return this.getCompositionInput().update(event.data)\n    },\n\n    compositionend(event) {\n      return this.getCompositionInput().end(event.data)\n    },\n\n    beforeinput(event) {\n      this.inputSummary.didInput = true\n    },\n\n    input(event) {\n      this.inputSummary.didInput = true\n      return event.stopPropagation()\n    },\n  }\n\n  static keys = {\n    backspace(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"backward\", event)\n    },\n\n    delete(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"forward\", event)\n    },\n\n    return(event) {\n      this.setInputSummary({ preferDocument: true })\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.responder?.insertLineBreak()\n    },\n\n    tab(event) {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.responder?.increaseNestingLevel()\n        this.requestRender()\n        event.preventDefault()\n      }\n    },\n\n    left(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    right(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    control: {\n      d(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"forward\", event)\n      },\n\n      h(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"backward\", event)\n      },\n\n      o(event) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\", { updatePosition: false })\n        return this.requestRender()\n      },\n    },\n\n    shift: {\n      return(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\")\n        this.requestRender()\n        event.preventDefault()\n      },\n\n      tab(event) {\n        if (this.responder?.canDecreaseNestingLevel()) {\n          this.responder?.decreaseNestingLevel()\n          this.requestRender()\n          event.preventDefault()\n        }\n      },\n\n      left(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"backward\")\n        }\n      },\n\n      right(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"forward\")\n        }\n      },\n    },\n\n    alt: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n\n    meta: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n  }\n\n  constructor() {\n    super(...arguments)\n    this.resetInputSummary()\n  }\n\n  setInputSummary(summary = {}) {\n    this.inputSummary.eventName = this.eventName\n    for (const key in summary) {\n      const value = summary[key]\n      this.inputSummary[key] = value\n    }\n    return this.inputSummary\n  }\n\n  resetInputSummary() {\n    this.inputSummary = {}\n  }\n\n  reset() {\n    this.resetInputSummary()\n    return selectionChangeObserver.reset()\n  }\n\n  // Mutation observer delegate\n\n  elementDidMutate(mutationSummary) {\n    if (this.isComposing()) {\n      return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n    } else {\n      return this.handleInput(function() {\n        if (this.mutationIsSignificant(mutationSummary)) {\n          if (this.mutationIsExpected(mutationSummary)) {\n            this.requestRender()\n          } else {\n            this.requestReparse()\n          }\n        }\n        return this.reset()\n      })\n    }\n  }\n\n  mutationIsExpected({ textAdded, textDeleted }) {\n    if (this.inputSummary.preferDocument) {\n      return true\n    }\n\n    const mutationAdditionMatchesSummary =\n      textAdded != null ? textAdded === this.inputSummary.textAdded : !this.inputSummary.textAdded\n    const mutationDeletionMatchesSummary =\n      textDeleted != null ? this.inputSummary.didDelete : !this.inputSummary.didDelete\n\n    const unexpectedNewlineAddition = [ \"\\n\", \" \\n\" ].includes(textAdded) && !mutationAdditionMatchesSummary\n    const unexpectedNewlineDeletion = textDeleted === \"\\n\" && !mutationDeletionMatchesSummary\n    const singleUnexpectedNewline =\n      unexpectedNewlineAddition && !unexpectedNewlineDeletion ||\n      unexpectedNewlineDeletion && !unexpectedNewlineAddition\n\n    if (singleUnexpectedNewline) {\n      const range = this.getSelectedRange()\n      if (range) {\n        const offset = unexpectedNewlineAddition ? textAdded.replace(/\\n$/, \"\").length || -1 : textAdded?.length || 1\n        if (this.responder?.positionIsBlockBreak(range[1] + offset)) {\n          return true\n        }\n      }\n    }\n\n    return mutationAdditionMatchesSummary && mutationDeletionMatchesSummary\n  }\n\n  mutationIsSignificant(mutationSummary) {\n    const textChanged = Object.keys(mutationSummary).length > 0\n    const composedEmptyString = this.compositionInput?.getEndData() === \"\"\n    return textChanged || !composedEmptyString\n  }\n\n  // Private\n\n  getCompositionInput() {\n    if (this.isComposing()) {\n      return this.compositionInput\n    } else {\n      this.compositionInput = new CompositionInput(this)\n    }\n  }\n\n  isComposing() {\n    return this.compositionInput && !this.compositionInput.isEnded()\n  }\n\n  deleteInDirection(direction, event) {\n    if (this.responder?.deleteInDirection(direction) === false) {\n      if (event) {\n        event.preventDefault()\n        return this.requestRender()\n      }\n    } else {\n      return this.setInputSummary({ didDelete: true })\n    }\n  }\n\n  serializeSelectionToDataTransfer(dataTransfer) {\n    if (!dataTransferIsWritable(dataTransfer)) return\n    const document = this.responder?.getSelectedDocument().toSerializableDocument()\n\n    dataTransfer.setData(\"application/x-trix-document\", JSON.stringify(document))\n    dataTransfer.setData(\"text/html\", DocumentView.render(document).innerHTML)\n    dataTransfer.setData(\"text/plain\", document.toString().replace(/\\n$/, \"\"))\n    return true\n  }\n\n  canAcceptDataTransfer(dataTransfer) {\n    const types = {}\n    Array.from(dataTransfer?.types || []).forEach((type) => {\n      types[type] = true\n    })\n    return types.Files || types[\"application/x-trix-document\"] || types[\"text/html\"] || types[\"text/plain\"]\n  }\n\n  getPastedHTMLUsingHiddenElement(callback) {\n    const selectedRange = this.getSelectedRange()\n\n    const style = {\n      position: \"absolute\",\n      left: `${window.pageXOffset}px`,\n      top: `${window.pageYOffset}px`,\n      opacity: 0,\n    }\n\n    const element = makeElement({ style, tagName: \"div\", editable: true })\n    document.body.appendChild(element)\n    element.focus()\n\n    return requestAnimationFrame(() => {\n      const html = element.innerHTML\n      removeNode(element)\n      this.setSelectedRange(selectedRange)\n      return callback(html)\n    })\n  }\n}\n\nLevel0InputController.proxyMethod(\"responder?.getSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.setSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.expandSelectionInDirection\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsInCursorTarget\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsExpanded\")\n\nconst extensionForFile = (file) => file.type?.match(/\\/(\\w+)$/)?.[1]\n\nconst hasStringCodePointAt = !!\" \".codePointAt?.(0)\n\nconst stringFromKeyEvent = function(event) {\n  if (event.key && hasStringCodePointAt && event.key.codePointAt(0) === event.keyCode) {\n    return event.key\n  } else {\n    let code\n    if (event.which === null) {\n      code = event.keyCode\n    } else if (event.which !== 0 && event.charCode !== 0) {\n      code = event.charCode\n    }\n\n    if (code != null && keyNames[code] !== \"escape\") {\n      return UTF16String.fromCodepoints([ code ]).toString()\n    }\n  }\n}\n\nconst pasteEventIsCrippledSafariHTMLPaste = function(event) {\n  const paste = event.clipboardData\n  if (paste) {\n    if (paste.types.includes(\"text/html\")) {\n      // Answer is yes if there's any possibility of Paste and Match Style in Safari,\n      // which is nearly impossible to detect confidently: https://bugs.webkit.org/show_bug.cgi?id=174165\n      for (const type of paste.types) {\n        const hasPasteboardFlavor = /^CorePasteboardFlavorType/.test(type)\n        const hasReadableDynamicData = /^dyn\\./.test(type) && paste.getData(type)\n        const mightBePasteAndMatchStyle = hasPasteboardFlavor || hasReadableDynamicData\n        if (mightBePasteAndMatchStyle) {\n          return true\n        }\n      }\n      return false\n    } else {\n      const isExternalHTMLPaste = paste.types.includes(\"com.apple.webarchive\")\n      const isExternalRichTextPaste = paste.types.includes(\"com.apple.flat-rtfd\")\n      return isExternalHTMLPaste || isExternalRichTextPaste\n    }\n  }\n}\n\nclass CompositionInput extends BasicObject {\n  constructor(inputController) {\n    super(...arguments)\n    this.inputController = inputController\n    this.responder = this.inputController.responder\n    this.delegate = this.inputController.delegate\n    this.inputSummary = this.inputController.inputSummary\n    this.data = {}\n  }\n\n  start(data) {\n    this.data.start = data\n\n    if (this.isSignificant()) {\n      if (this.inputSummary.eventName === \"keypress\" && this.inputSummary.textAdded) {\n        this.responder?.deleteInDirection(\"left\")\n      }\n\n      if (!this.selectionIsExpanded()) {\n        this.insertPlaceholder()\n        this.requestRender()\n      }\n\n      this.range = this.responder?.getSelectedRange()\n    }\n  }\n\n  update(data) {\n    this.data.update = data\n\n    if (this.isSignificant()) {\n      const range = this.selectPlaceholder()\n      if (range) {\n        this.forgetPlaceholder()\n        this.range = range\n      }\n    }\n  }\n\n  end(data) {\n    this.data.end = data\n\n    if (this.isSignificant()) {\n      this.forgetPlaceholder()\n\n      if (this.canApplyToDocument()) {\n        this.setInputSummary({ preferDocument: true, didInput: false })\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.setSelectedRange(this.range)\n        this.responder?.insertString(this.data.end)\n        return this.responder?.setSelectedRange(this.range[0] + this.data.end.length)\n      } else if (this.data.start != null || this.data.update != null) {\n        this.requestReparse()\n        return this.inputController.reset()\n      }\n    } else {\n      return this.inputController.reset()\n    }\n  }\n\n  getEndData() {\n    return this.data.end\n  }\n\n  isEnded() {\n    return this.getEndData() != null\n  }\n\n  isSignificant() {\n    if (browser.composesExistingText) {\n      return this.inputSummary.didInput\n    } else {\n      return true\n    }\n  }\n\n  // Private\n\n  canApplyToDocument() {\n    return this.data.start?.length === 0 && this.data.end?.length > 0 && this.range\n  }\n}\n\nCompositionInput.proxyMethod(\"inputController.setInputSummary\")\nCompositionInput.proxyMethod(\"inputController.requestRender\")\nCompositionInput.proxyMethod(\"inputController.requestReparse\")\nCompositionInput.proxyMethod(\"responder?.selectionIsExpanded\")\nCompositionInput.proxyMethod(\"responder?.insertPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.selectPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.forgetPlaceholder\")\n", "import { getAllAttributeNames, shouldRenderInmmediatelyToDealWithIOSDictation, squishBreakableWhitespace } from \"trix/core/helpers\"\nimport InputController from \"trix/controllers/input_controller\"\nimport * as config from \"trix/config\"\n\nimport { dataTransferIsMsOfficePaste, dataTransferIsPlainText, keyEventIsKeyboardCommand, objectsAreEqual } from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nexport default class Level2InputController extends InputController {\n  constructor(...args) {\n    super(...args)\n    this.render = this.render.bind(this)\n  }\n\n  static events = {\n    keydown(event) {\n      if (keyEventIsKeyboardCommand(event)) {\n        const command = keyboardCommandFromKeyEvent(event)\n        if (this.delegate?.inputControllerDidReceiveKeyboardCommand(command)) {\n          event.preventDefault()\n        }\n      } else {\n        let name = event.key\n        if (event.altKey) {\n          name += \"+Alt\"\n        }\n        if (event.shiftKey) {\n          name += \"+Shift\"\n        }\n        const handler = this.constructor.keys[name]\n        if (handler) {\n          return this.withEvent(event, handler)\n        }\n      }\n    },\n\n    // Handle paste event to work around beforeinput.insertFromPaste browser bugs.\n    // Safe to remove each condition once fixed upstream.\n    paste(event) {\n      // https://bugs.webkit.org/show_bug.cgi?id=194921\n      let paste\n      const href = event.clipboardData?.getData(\"URL\")\n      if (pasteEventHasFilesOnly(event)) {\n        event.preventDefault()\n        return this.attachFiles(event.clipboardData.files)\n\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=934448\n      } else if (pasteEventHasPlainTextOnly(event)) {\n        event.preventDefault()\n        paste = {\n          type: \"text/plain\",\n          string: event.clipboardData.getData(\"text/plain\"),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertString(paste.string)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n\n        // https://bugs.webkit.org/show_bug.cgi?id=196702\n      } else if (href) {\n        event.preventDefault()\n        paste = {\n          type: \"text/html\",\n          html: this.createLinkHTML(href),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n      }\n    },\n\n    beforeinput(event) {\n      const handler = this.constructor.inputTypes[event.inputType]\n\n      const immmediateRender = shouldRenderInmmediatelyToDealWithIOSDictation(event)\n\n      if (handler) {\n        this.withEvent(event, handler)\n\n        if (!immmediateRender) {\n          this.scheduleRender()\n        }\n      }\n\n      if (immmediateRender) {\n        this.render()\n      }\n    },\n\n    input(event) {\n      selectionChangeObserver.reset()\n    },\n\n    dragstart(event) {\n      if (this.responder?.selectionContainsAttachments()) {\n        event.dataTransfer.setData(\"application/x-trix-dragging\", true)\n\n        this.dragging = {\n          range: this.responder?.getSelectedRange(),\n          point: pointFromEvent(event),\n        }\n      }\n    },\n\n    dragenter(event) {\n      if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    dragover(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        if (!objectsAreEqual(point, this.dragging.point)) {\n          this.dragging.point = point\n          return this.responder?.setLocationRangeFromPointRange(point)\n        }\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    drop(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.dragging.range)\n        this.dragging = null\n        return this.scheduleRender()\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        this.responder?.setLocationRangeFromPointRange(point)\n        return this.attachFiles(event.dataTransfer.files)\n      }\n    },\n\n    dragend() {\n      if (this.dragging) {\n        this.responder?.setSelectedRange(this.dragging.range)\n        this.dragging = null\n      }\n    },\n\n    compositionend(event) {\n      if (this.composing) {\n        this.composing = false\n        if (!config.browser.recentAndroid) this.scheduleRender()\n      }\n    },\n  }\n\n  static keys = {\n    ArrowLeft() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"backward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    ArrowRight() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"forward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    Backspace() {\n      if (this.responder?.shouldManageDeletingInDirection(\"backward\")) {\n        this.event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.deleteInDirection(\"backward\")\n        return this.render()\n      }\n    },\n\n    Tab() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.increaseNestingLevel()\n        return this.render()\n      }\n    },\n\n    \"Tab+Shift\"() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.decreaseNestingLevel()\n        return this.render()\n      }\n    },\n  }\n\n  static inputTypes = {\n    deleteByComposition() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteByCut() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteByDrag() {\n      this.event.preventDefault()\n      return this.withTargetDOMRange(function() {\n        this.deleteByDragRange = this.responder?.getSelectedRange()\n      })\n    },\n\n    deleteCompositionText() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteContent() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteEntireSoftLine() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteHardLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteHardLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteSoftLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteSoftLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteWordBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteWordForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    formatBackColor() {\n      return this.activateAttributeIfSupported(\"backgroundColor\", this.event.data)\n    },\n\n    formatBold() {\n      return this.toggleAttributeIfSupported(\"bold\")\n    },\n\n    formatFontColor() {\n      return this.activateAttributeIfSupported(\"color\", this.event.data)\n    },\n\n    formatFontName() {\n      return this.activateAttributeIfSupported(\"font\", this.event.data)\n    },\n\n    formatIndent() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.increaseNestingLevel()\n        })\n      }\n    },\n\n    formatItalic() {\n      return this.toggleAttributeIfSupported(\"italic\")\n    },\n\n    formatJustifyCenter() {\n      return this.toggleAttributeIfSupported(\"justifyCenter\")\n    },\n\n    formatJustifyFull() {\n      return this.toggleAttributeIfSupported(\"justifyFull\")\n    },\n\n    formatJustifyLeft() {\n      return this.toggleAttributeIfSupported(\"justifyLeft\")\n    },\n\n    formatJustifyRight() {\n      return this.toggleAttributeIfSupported(\"justifyRight\")\n    },\n\n    formatOutdent() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.decreaseNestingLevel()\n        })\n      }\n    },\n\n    formatRemove() {\n      this.withTargetDOMRange(function() {\n        for (const attributeName in this.responder?.getCurrentAttributes()) {\n          this.responder?.removeCurrentAttribute(attributeName)\n        }\n      })\n    },\n\n    formatSetBlockTextDirection() {\n      return this.activateAttributeIfSupported(\"blockDir\", this.event.data)\n    },\n\n    formatSetInlineTextDirection() {\n      return this.activateAttributeIfSupported(\"textDir\", this.event.data)\n    },\n\n    formatStrikeThrough() {\n      return this.toggleAttributeIfSupported(\"strike\")\n    },\n\n    formatSubscript() {\n      return this.toggleAttributeIfSupported(\"sub\")\n    },\n\n    formatSuperscript() {\n      return this.toggleAttributeIfSupported(\"sup\")\n    },\n\n    formatUnderline() {\n      return this.toggleAttributeIfSupported(\"underline\")\n    },\n\n    historyRedo() {\n      return this.delegate?.inputControllerWillPerformRedo()\n    },\n\n    historyUndo() {\n      return this.delegate?.inputControllerWillPerformUndo()\n    },\n\n    insertCompositionText() {\n      this.composing = true\n      return this.insertString(this.event.data)\n    },\n\n    insertFromComposition() {\n      this.composing = false\n      return this.insertString(this.event.data)\n    },\n\n    insertFromDrop() {\n      const range = this.deleteByDragRange\n      if (range) {\n        this.deleteByDragRange = null\n        this.delegate?.inputControllerWillMoveText()\n        return this.withTargetDOMRange(function() {\n          return this.responder?.moveTextFromRange(range)\n        })\n      }\n    },\n\n    insertFromPaste() {\n      const { dataTransfer } = this.event\n      const paste = { dataTransfer }\n\n      const href = dataTransfer.getData(\"URL\")\n      const html = dataTransfer.getData(\"text/html\")\n\n      if (href) {\n        let string\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        const name = dataTransfer.getData(\"public.url-name\")\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransferIsPlainText(dataTransfer)) {\n        paste.type = \"text/plain\"\n        paste.string = dataTransfer.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertString(paste.string)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (processableFilePaste(this.event)) {\n        paste.type = \"File\"\n        paste.file = dataTransfer.files[0]\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertFile(paste.file)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (html) {\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n    },\n\n    insertFromYank() {\n      return this.insertString(this.event.data)\n    },\n\n    insertLineBreak() {\n      return this.insertString(\"\\n\")\n    },\n\n    insertLink() {\n      return this.activateAttributeIfSupported(\"href\", this.event.data)\n    },\n\n    insertOrderedList() {\n      return this.toggleAttributeIfSupported(\"number\")\n    },\n\n    insertParagraph() {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.withTargetDOMRange(function() {\n        return this.responder?.insertLineBreak()\n      })\n    },\n\n    insertReplacementText() {\n      const replacement = this.event.dataTransfer.getData(\"text/plain\")\n      const domRange = this.event.getTargetRanges()[0]\n\n      this.withTargetDOMRange(domRange, () => {\n        this.insertString(replacement, { updatePosition: false })\n      })\n    },\n\n    insertText() {\n      return this.insertString(this.event.data || this.event.dataTransfer?.getData(\"text/plain\"))\n    },\n\n    insertTranspose() {\n      return this.insertString(this.event.data)\n    },\n\n    insertUnorderedList() {\n      return this.toggleAttributeIfSupported(\"bullet\")\n    },\n  }\n\n  elementDidMutate() {\n    if (this.scheduledRender) {\n      if (this.composing) {\n        return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n      }\n    } else {\n      return this.reparse()\n    }\n  }\n\n  scheduleRender() {\n    return this.scheduledRender ? this.scheduledRender : this.scheduledRender = requestAnimationFrame(this.render)\n  }\n\n  render() {\n    cancelAnimationFrame(this.scheduledRender)\n    this.scheduledRender = null\n    if (!this.composing) {\n      this.delegate?.render()\n    }\n    this.afterRender?.()\n    this.afterRender = null\n  }\n\n  reparse() {\n    return this.delegate?.reparse()\n  }\n\n  // Responder helpers\n\n  insertString(string = \"\", options) {\n    this.delegate?.inputControllerWillPerformTyping()\n    return this.withTargetDOMRange(function() {\n      return this.responder?.insertString(string, options)\n    })\n  }\n\n  toggleAttributeIfSupported(attributeName) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.toggleCurrentAttribute(attributeName)\n      })\n    }\n  }\n\n  activateAttributeIfSupported(attributeName, value) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.setCurrentAttribute(attributeName, value)\n      })\n    }\n  }\n\n  deleteInDirection(direction, { recordUndoEntry } = { recordUndoEntry: true }) {\n    if (recordUndoEntry) {\n      this.delegate?.inputControllerWillPerformTyping()\n    }\n    const perform = () => this.responder?.deleteInDirection(direction)\n    const domRange = this.getTargetDOMRange({ minLength: this.composing ? 1 : 2 })\n    if (domRange) {\n      return this.withTargetDOMRange(domRange, perform)\n    } else {\n      return perform()\n    }\n  }\n\n  // Selection helpers\n\n  withTargetDOMRange(domRange, fn) {\n    if (typeof domRange === \"function\") {\n      fn = domRange\n      domRange = this.getTargetDOMRange()\n    }\n    if (domRange) {\n      return this.responder?.withTargetDOMRange(domRange, fn.bind(this))\n    } else {\n      selectionChangeObserver.reset()\n      return fn.call(this)\n    }\n  }\n\n  getTargetDOMRange({ minLength } = { minLength: 0 }) {\n    const targetRanges = this.event.getTargetRanges?.()\n    if (targetRanges) {\n      if (targetRanges.length) {\n        const domRange = staticRangeToRange(targetRanges[0])\n        if (minLength === 0 || domRange.toString().length >= minLength) {\n          return domRange\n        }\n      }\n    }\n  }\n\n  withEvent(event, fn) {\n    let result\n    this.event = event\n    try {\n      result = fn.call(this)\n    } finally {\n      this.event = null\n    }\n    return result\n  }\n}\n\nconst staticRangeToRange = function(staticRange) {\n  const range = document.createRange()\n  range.setStart(staticRange.startContainer, staticRange.startOffset)\n  range.setEnd(staticRange.endContainer, staticRange.endOffset)\n  return range\n}\n\n// Event helpers\n\nconst dragEventHasFiles = (event) => Array.from(event.dataTransfer?.types || []).includes(\"Files\")\n\nconst processableFilePaste = (event) => {\n  // Paste events that only have files are handled by the paste event handler,\n  // to work around Safari not supporting beforeinput.insertFromPaste for files.\n\n  // MS Office text pastes include a file with a screenshot of the text, but we should\n  // handle them as text pastes.\n  return event.dataTransfer.files?.[0] && !pasteEventHasFilesOnly(event) && !dataTransferIsMsOfficePaste(event)\n}\n\nconst pasteEventHasFilesOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    const fileTypes = Array.from(clipboard.types).filter((type) => type.match(/file/i)) // \"Files\", \"application/x-moz-file\"\n    return fileTypes.length === clipboard.types.length && clipboard.files.length >= 1\n  }\n}\n\nconst pasteEventHasPlainTextOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"text/plain\") && clipboard.types.length === 1\n  }\n}\n\nconst keyboardCommandFromKeyEvent = function(event) {\n  const command = []\n  if (event.altKey) {\n    command.push(\"alt\")\n  }\n  if (event.shiftKey) {\n    command.push(\"shift\")\n  }\n  command.push(event.key)\n  return command\n}\n\nconst pointFromEvent = (event) => ({\n  x: event.clientX,\n  y: event.clientY,\n})\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport { findClosestElementFromNode, handleEvent, triggerEvent } from \"trix/core/helpers\"\n\nimport DOMPurify from \"dompurify\"\n\nconst attributeButtonSelector = \"[data-trix-attribute]\"\nconst actionButtonSelector = \"[data-trix-action]\"\nconst toolbarButtonSelector = `${attributeButtonSelector}, ${actionButtonSelector}`\nconst dialogSelector = \"[data-trix-dialog]\"\nconst activeDialogSelector = `${dialogSelector}[data-trix-active]`\nconst dialogButtonSelector = `${dialogSelector} [data-trix-method]`\nconst dialogInputSelector = `${dialogSelector} [data-trix-input]`\nconst getInputForDialog = (element, attributeName) => {\n  if (!attributeName) { attributeName = getAttributeName(element) }\n  return element.querySelector(`[data-trix-input][name='${attributeName}']`)\n}\nconst getActionName = (element) => element.getAttribute(\"data-trix-action\")\nconst getAttributeName = (element) => {\n  return element.getAttribute(\"data-trix-attribute\") || element.getAttribute(\"data-trix-dialog-attribute\")\n}\nconst getDialogName = (element) => element.getAttribute(\"data-trix-dialog\")\n\nexport default class ToolbarController extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didClickAttributeButton = this.didClickAttributeButton.bind(this)\n    this.didClickDialogButton = this.didClickDialogButton.bind(this)\n    this.didKeyDownDialogInput = this.didKeyDownDialogInput.bind(this)\n    this.element = element\n    this.attributes = {}\n    this.actions = {}\n    this.resetDialogInputs()\n\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: actionButtonSelector,\n      withCallback: this.didClickActionButton,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attributeButtonSelector,\n      withCallback: this.didClickAttributeButton,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: toolbarButtonSelector, preventDefault: true })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: dialogButtonSelector,\n      withCallback: this.didClickDialogButton,\n    })\n    handleEvent(\"keydown\", {\n      onElement: this.element,\n      matchingSelector: dialogInputSelector,\n      withCallback: this.didKeyDownDialogInput,\n    })\n  }\n\n  // Event handlers\n\n  didClickActionButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const actionName = getActionName(element)\n\n    if (this.getDialog(actionName)) {\n      return this.toggleDialog(actionName)\n    } else {\n      return this.delegate?.toolbarDidInvokeAction(actionName, element)\n    }\n  }\n\n  didClickAttributeButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const attributeName = getAttributeName(element)\n\n    if (this.getDialog(attributeName)) {\n      this.toggleDialog(attributeName)\n    } else {\n      this.delegate?.toolbarDidToggleAttribute(attributeName)\n    }\n\n    return this.refreshAttributeButtons()\n  }\n\n  didClickDialogButton(event, element) {\n    const dialogElement = findClosestElementFromNode(element, { matchingSelector: dialogSelector })\n    const method = element.getAttribute(\"data-trix-method\")\n    return this[method].call(this, dialogElement)\n  }\n\n  didKeyDownDialogInput(event, element) {\n    if (event.keyCode === 13) {\n      // Enter key\n      event.preventDefault()\n      const attribute = element.getAttribute(\"name\")\n      const dialog = this.getDialog(attribute)\n      this.setAttribute(dialog)\n    }\n    if (event.keyCode === 27) {\n      // Escape key\n      event.preventDefault()\n      return this.hideDialog()\n    }\n  }\n\n  // Action buttons\n\n  updateActions(actions) {\n    this.actions = actions\n    return this.refreshActionButtons()\n  }\n\n  refreshActionButtons() {\n    return this.eachActionButton((element, actionName) => {\n      element.disabled = this.actions[actionName] === false\n    })\n  }\n\n  eachActionButton(callback) {\n    return Array.from(this.element.querySelectorAll(actionButtonSelector)).map((element) =>\n      callback(element, getActionName(element))\n    )\n  }\n\n  // Attribute buttons\n\n  updateAttributes(attributes) {\n    this.attributes = attributes\n    return this.refreshAttributeButtons()\n  }\n\n  refreshAttributeButtons() {\n    return this.eachAttributeButton((element, attributeName) => {\n      element.disabled = this.attributes[attributeName] === false\n      if (this.attributes[attributeName] || this.dialogIsVisible(attributeName)) {\n        element.setAttribute(\"data-trix-active\", \"\")\n        return element.classList.add(\"trix-active\")\n      } else {\n        element.removeAttribute(\"data-trix-active\")\n        return element.classList.remove(\"trix-active\")\n      }\n    })\n  }\n\n  eachAttributeButton(callback) {\n    return Array.from(this.element.querySelectorAll(attributeButtonSelector)).map((element) =>\n      callback(element, getAttributeName(element))\n    )\n  }\n\n  applyKeyboardCommand(keys) {\n    const keyString = JSON.stringify(keys.sort())\n    for (const button of Array.from(this.element.querySelectorAll(\"[data-trix-key]\"))) {\n      const buttonKeys = button.getAttribute(\"data-trix-key\").split(\"+\")\n      const buttonKeyString = JSON.stringify(buttonKeys.sort())\n      if (buttonKeyString === keyString) {\n        triggerEvent(\"mousedown\", { onElement: button })\n        return true\n      }\n    }\n    return false\n  }\n\n  // Dialogs\n\n  dialogIsVisible(dialogName) {\n    const element = this.getDialog(dialogName)\n    if (element) {\n      return element.hasAttribute(\"data-trix-active\")\n    }\n  }\n\n  toggleDialog(dialogName) {\n    if (this.dialogIsVisible(dialogName)) {\n      return this.hideDialog()\n    } else {\n      return this.showDialog(dialogName)\n    }\n  }\n\n  showDialog(dialogName) {\n    this.hideDialog()\n    this.delegate?.toolbarWillShowDialog()\n\n    const element = this.getDialog(dialogName)\n    element.setAttribute(\"data-trix-active\", \"\")\n    element.classList.add(\"trix-active\")\n\n    Array.from(element.querySelectorAll(\"input[disabled]\")).forEach((disabledInput) => {\n      disabledInput.removeAttribute(\"disabled\")\n    })\n\n    const attributeName = getAttributeName(element)\n    if (attributeName) {\n      const input = getInputForDialog(element, dialogName)\n      if (input) {\n        input.value = this.attributes[attributeName] || \"\"\n        input.select()\n      }\n    }\n\n    return this.delegate?.toolbarDidShowDialog(dialogName)\n  }\n\n  setAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    const input = getInputForDialog(dialogElement, attributeName)\n\n    if (input.willValidate) {\n      input.setCustomValidity(\"\")\n      if (!input.checkValidity() || !this.isSafeAttribute(input)) {\n        input.setCustomValidity(\"Invalid value\")\n        input.setAttribute(\"data-trix-validate\", \"\")\n        input.classList.add(\"trix-validate\")\n        return input.focus()\n      }\n    }\n    this.delegate?.toolbarDidUpdateAttribute(attributeName, input.value)\n    return this.hideDialog()\n  }\n\n  isSafeAttribute(input) {\n    if (input.hasAttribute(\"data-trix-validate-href\")) {\n      return DOMPurify.isValidAttribute(\"a\", \"href\", input.value)\n    } else {\n      return true\n    }\n  }\n\n  removeAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    this.delegate?.toolbarDidRemoveAttribute(attributeName)\n    return this.hideDialog()\n  }\n\n  hideDialog() {\n    const element = this.element.querySelector(activeDialogSelector)\n    if (element) {\n      element.removeAttribute(\"data-trix-active\")\n      element.classList.remove(\"trix-active\")\n      this.resetDialogInputs()\n      return this.delegate?.toolbarDidHideDialog(getDialogName(element))\n    }\n  }\n\n  resetDialogInputs() {\n    Array.from(this.element.querySelectorAll(dialogInputSelector)).forEach((input) => {\n      input.setAttribute(\"disabled\", \"disabled\")\n      input.removeAttribute(\"data-trix-validate\")\n      input.classList.remove(\"trix-validate\")\n    })\n  }\n\n  getDialog(dialogName) {\n    return this.element.querySelector(`[data-trix-dialog=${dialogName}]`)\n  }\n}\n", "/* eslint-disable\n    id-length,\n*/\nimport * as config from \"trix/config\"\n\nimport { serializeToContentType } from \"trix/core/serialization\"\n\nimport Controller from \"trix/controllers/controller\"\nimport Level0InputController from \"trix/controllers/level_0_input_controller\"\nimport Level2InputController from \"trix/controllers/level_2_input_controller\"\nimport CompositionController from \"trix/controllers/composition_controller\"\nimport ToolbarController from \"trix/controllers/toolbar_controller\"\nimport Composition from \"trix/models/composition\"\nimport Editor from \"trix/models/editor\"\nimport AttachmentManager from \"trix/models/attachment_manager\"\nimport SelectionManager from \"trix/models/selection_manager\"\n\nimport { getBlockConfig, objectsAreEqual, rangeIsCollapsed, rangesAreEqual } from \"trix/core/helpers\"\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst snapshotsAreEqual = (a, b) => rangesAreEqual(a.selectedRange, b.selectedRange) && a.document.isEqualTo(b.document)\n\nexport default class EditorController extends Controller {\n  static actions = {\n    undo: {\n      test() {\n        return this.editor.canUndo()\n      },\n      perform() {\n        return this.editor.undo()\n      },\n    },\n    redo: {\n      test() {\n        return this.editor.canRedo()\n      },\n      perform() {\n        return this.editor.redo()\n      },\n    },\n    link: {\n      test() {\n        return this.editor.canActivateAttribute(\"href\")\n      },\n    },\n    increaseNestingLevel: {\n      test() {\n        return this.editor.canIncreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.increaseNestingLevel() && this.render()\n      },\n    },\n    decreaseNestingLevel: {\n      test() {\n        return this.editor.canDecreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.decreaseNestingLevel() && this.render()\n      },\n    },\n    attachFiles: {\n      test() {\n        return true\n      },\n      perform() {\n        return config.input.pickFiles(this.editor.insertFiles)\n      },\n    },\n  }\n\n  constructor({ editorElement, document, html }) {\n    super(...arguments)\n    this.editorElement = editorElement\n    this.selectionManager = new SelectionManager(this.editorElement)\n    this.selectionManager.delegate = this\n\n    this.composition = new Composition()\n    this.composition.delegate = this\n\n    this.attachmentManager = new AttachmentManager(this.composition.getAttachments())\n    this.attachmentManager.delegate = this\n\n    this.inputController =\n      config.input.getLevel() === 2\n        ? new Level2InputController(this.editorElement)\n        : new Level0InputController(this.editorElement)\n\n    this.inputController.delegate = this\n    this.inputController.responder = this.composition\n\n    this.compositionController = new CompositionController(this.editorElement, this.composition)\n    this.compositionController.delegate = this\n\n    this.toolbarController = new ToolbarController(this.editorElement.toolbarElement)\n    this.toolbarController.delegate = this\n\n    this.editor = new Editor(this.composition, this.selectionManager, this.editorElement)\n    if (document) {\n      this.editor.loadDocument(document)\n    } else {\n      this.editor.loadHTML(html)\n    }\n  }\n\n  registerSelectionManager() {\n    return selectionChangeObserver.registerSelectionManager(this.selectionManager)\n  }\n\n  unregisterSelectionManager() {\n    return selectionChangeObserver.unregisterSelectionManager(this.selectionManager)\n  }\n\n  render() {\n    return this.compositionController.render()\n  }\n\n  reparse() {\n    return this.composition.replaceHTML(this.editorElement.innerHTML)\n  }\n\n  // Composition delegate\n\n  compositionDidChangeDocument(document) {\n    this.notifyEditorElement(\"document-change\")\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionDidChangeCurrentAttributes(currentAttributes) {\n    this.currentAttributes = currentAttributes\n    this.toolbarController.updateAttributes(this.currentAttributes)\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"attributes-change\", { attributes: this.currentAttributes })\n  }\n\n  compositionDidPerformInsertionAtRange(range) {\n    if (this.pasting) {\n      this.pastedRange = range\n    }\n  }\n\n  compositionShouldAcceptFile(file) {\n    return this.notifyEditorElement(\"file-accept\", { file })\n  }\n\n  compositionDidAddAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-add\", { attachment: managedAttachment })\n  }\n\n  compositionDidEditAttachment(attachment) {\n    this.compositionController.rerenderViewForObject(attachment)\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    this.notifyEditorElement(\"attachment-edit\", { attachment: managedAttachment })\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidChangeAttachmentPreviewURL(attachment) {\n    this.compositionController.invalidateViewForObject(attachment)\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidRemoveAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.unmanageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-remove\", { attachment: managedAttachment })\n  }\n\n  compositionDidStartEditingAttachment(attachment, options) {\n    this.attachmentLocationRange = this.composition.document.getLocationRangeOfAttachment(attachment)\n    this.compositionController.installAttachmentEditorForAttachment(attachment, options)\n    return this.selectionManager.setLocationRange(this.attachmentLocationRange)\n  }\n\n  compositionDidStopEditingAttachment(attachment) {\n    this.compositionController.uninstallAttachmentEditor()\n    this.attachmentLocationRange = null\n  }\n\n  compositionDidRequestChangingSelectionToLocationRange(locationRange) {\n    if (this.loadingSnapshot && !this.isFocused()) return\n    this.requestedLocationRange = locationRange\n    this.compositionRevisionWhenLocationRangeRequested = this.composition.revision\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionWillLoadSnapshot() {\n    this.loadingSnapshot = true\n  }\n\n  compositionDidLoadSnapshot() {\n    this.compositionController.refreshViewCache()\n    this.render()\n    this.loadingSnapshot = false\n  }\n\n  getSelectionManager() {\n    return this.selectionManager\n  }\n\n  // Attachment manager delegate\n\n  attachmentManagerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Document controller delegate\n\n  compositionControllerWillSyncDocumentView() {\n    this.inputController.editorWillSyncDocumentView()\n    this.selectionManager.lock()\n    return this.selectionManager.clearSelection()\n  }\n\n  compositionControllerDidSyncDocumentView() {\n    this.inputController.editorDidSyncDocumentView()\n    this.selectionManager.unlock()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"sync\")\n  }\n\n  compositionControllerDidRender() {\n    if (this.requestedLocationRange) {\n      if (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision) {\n        this.selectionManager.setLocationRange(this.requestedLocationRange)\n      }\n      this.requestedLocationRange = null\n      this.compositionRevisionWhenLocationRangeRequested = null\n    }\n\n    if (this.renderedCompositionRevision !== this.composition.revision) {\n      this.runEditorFilters()\n      this.composition.updateCurrentAttributes()\n      this.notifyEditorElement(\"render\")\n    }\n\n    this.renderedCompositionRevision = this.composition.revision\n  }\n\n  compositionControllerDidFocus() {\n    if (this.isFocusedInvisibly()) {\n      this.setLocationRange({ index: 0, offset: 0 })\n    }\n    this.toolbarController.hideDialog()\n    return this.notifyEditorElement(\"focus\")\n  }\n\n  compositionControllerDidBlur() {\n    return this.notifyEditorElement(\"blur\")\n  }\n\n  compositionControllerDidSelectAttachment(attachment, options) {\n    this.toolbarController.hideDialog()\n    return this.composition.editAttachment(attachment, options)\n  }\n\n  compositionControllerDidRequestDeselectingAttachment(attachment) {\n    const locationRange = this.attachmentLocationRange || this.composition.document.getLocationRangeOfAttachment(attachment)\n    return this.selectionManager.setLocationRange(locationRange[1])\n  }\n\n  compositionControllerWillUpdateAttachment(attachment) {\n    return this.editor.recordUndoEntry(\"Edit Attachment\", { context: attachment.id, consolidatable: true })\n  }\n\n  compositionControllerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Input controller delegate\n\n  inputControllerWillHandleInput() {\n    this.handlingInput = true\n    this.requestedRender = false\n  }\n\n  inputControllerDidRequestRender() {\n    this.requestedRender = true\n  }\n\n  inputControllerDidHandleInput() {\n    this.handlingInput = false\n    if (this.requestedRender) {\n      this.requestedRender = false\n      return this.render()\n    }\n  }\n\n  inputControllerDidAllowUnhandledInput() {\n    return this.notifyEditorElement(\"change\")\n  }\n\n  inputControllerDidRequestReparse() {\n    return this.reparse()\n  }\n\n  inputControllerWillPerformTyping() {\n    return this.recordTypingUndoEntry()\n  }\n\n  inputControllerWillPerformFormatting(attributeName) {\n    return this.recordFormattingUndoEntry(attributeName)\n  }\n\n  inputControllerWillCutText() {\n    return this.editor.recordUndoEntry(\"Cut\")\n  }\n\n  inputControllerWillPaste(paste) {\n    this.editor.recordUndoEntry(\"Paste\")\n    this.pasting = true\n    return this.notifyEditorElement(\"before-paste\", { paste })\n  }\n\n  inputControllerDidPaste(paste) {\n    paste.range = this.pastedRange\n    this.pastedRange = null\n    this.pasting = null\n    return this.notifyEditorElement(\"paste\", { paste })\n  }\n\n  inputControllerWillMoveText() {\n    return this.editor.recordUndoEntry(\"Move\")\n  }\n\n  inputControllerWillAttachFiles() {\n    return this.editor.recordUndoEntry(\"Drop Files\")\n  }\n\n  inputControllerWillPerformUndo() {\n    return this.editor.undo()\n  }\n\n  inputControllerWillPerformRedo() {\n    return this.editor.redo()\n  }\n\n  inputControllerDidReceiveKeyboardCommand(keys) {\n    return this.toolbarController.applyKeyboardCommand(keys)\n  }\n\n  inputControllerDidStartDrag() {\n    this.locationRangeBeforeDrag = this.selectionManager.getLocationRange()\n  }\n\n  inputControllerDidReceiveDragOverPoint(point) {\n    return this.selectionManager.setLocationRangeFromPointRange(point)\n  }\n\n  inputControllerDidCancelDrag() {\n    this.selectionManager.setLocationRange(this.locationRangeBeforeDrag)\n    this.locationRangeBeforeDrag = null\n  }\n\n  // Selection manager delegate\n\n  locationRangeDidChange(locationRange) {\n    this.composition.updateCurrentAttributes()\n    this.updateCurrentActions()\n    if (this.attachmentLocationRange && !rangesAreEqual(this.attachmentLocationRange, locationRange)) {\n      this.composition.stopEditingAttachment()\n    }\n    return this.notifyEditorElement(\"selection-change\")\n  }\n\n  // Toolbar controller delegate\n\n  toolbarDidClickButton() {\n    if (!this.getLocationRange()) {\n      return this.setLocationRange({ index: 0, offset: 0 })\n    }\n  }\n\n  toolbarDidInvokeAction(actionName, invokingElement) {\n    return this.invokeAction(actionName, invokingElement)\n  }\n\n  toolbarDidToggleAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.toggleCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidUpdateAttribute(attributeName, value) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.setCurrentAttribute(attributeName, value)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidRemoveAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.removeCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarWillShowDialog(dialogElement) {\n    this.composition.expandSelectionForEditing()\n    return this.freezeSelection()\n  }\n\n  toolbarDidShowDialog(dialogName) {\n    return this.notifyEditorElement(\"toolbar-dialog-show\", { dialogName })\n  }\n\n  toolbarDidHideDialog(dialogName) {\n    this.thawSelection()\n    this.editorElement.focus()\n    return this.notifyEditorElement(\"toolbar-dialog-hide\", { dialogName })\n  }\n\n  // Selection\n\n  freezeSelection() {\n    if (!this.selectionFrozen) {\n      this.selectionManager.lock()\n      this.composition.freezeSelection()\n      this.selectionFrozen = true\n      return this.render()\n    }\n  }\n\n  thawSelection() {\n    if (this.selectionFrozen) {\n      this.composition.thawSelection()\n      this.selectionManager.unlock()\n      this.selectionFrozen = false\n      return this.render()\n    }\n  }\n\n  canInvokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return true\n    } else {\n      return !!this.actions[actionName]?.test?.call(this)\n    }\n  }\n\n  invokeAction(actionName, invokingElement) {\n    if (this.actionIsExternal(actionName)) {\n      return this.notifyEditorElement(\"action-invoke\", { actionName, invokingElement })\n    } else {\n      return this.actions[actionName]?.perform?.call(this)\n    }\n  }\n\n  actionIsExternal(actionName) {\n    return /^x-./.test(actionName)\n  }\n\n  getCurrentActions() {\n    const result = {}\n    for (const actionName in this.actions) {\n      result[actionName] = this.canInvokeAction(actionName)\n    }\n    return result\n  }\n\n  updateCurrentActions() {\n    const currentActions = this.getCurrentActions()\n    if (!objectsAreEqual(currentActions, this.currentActions)) {\n      this.currentActions = currentActions\n      this.toolbarController.updateActions(this.currentActions)\n      return this.notifyEditorElement(\"actions-change\", { actions: this.currentActions })\n    }\n  }\n\n  // Editor filters\n\n  runEditorFilters() {\n    let snapshot = this.composition.getSnapshot()\n\n    Array.from(this.editor.filters).forEach((filter) => {\n      const { document, selectedRange } = snapshot\n      snapshot = filter.call(this.editor, snapshot) || {}\n      if (!snapshot.document) {\n        snapshot.document = document\n      }\n      if (!snapshot.selectedRange) {\n        snapshot.selectedRange = selectedRange\n      }\n    })\n\n    if (!snapshotsAreEqual(snapshot, this.composition.getSnapshot())) {\n      return this.composition.loadSnapshot(snapshot)\n    }\n  }\n\n  // Private\n\n  updateInputElement() {\n    const element = this.compositionController.getSerializableElement()\n    const value = serializeToContentType(element, \"text/html\")\n    return this.editorElement.setFormValue(value)\n  }\n\n  notifyEditorElement(message, data) {\n    switch (message) {\n      case \"document-change\":\n        this.documentChangedSinceLastRender = true\n        break\n      case \"render\":\n        if (this.documentChangedSinceLastRender) {\n          this.documentChangedSinceLastRender = false\n          this.notifyEditorElement(\"change\")\n        }\n        break\n      case \"change\":\n      case \"attachment-add\":\n      case \"attachment-edit\":\n      case \"attachment-remove\":\n        this.updateInputElement()\n        break\n    }\n\n    return this.editorElement.notify(message, data)\n  }\n\n  removeAttachment(attachment) {\n    this.editor.recordUndoEntry(\"Delete Attachment\")\n    this.composition.removeAttachment(attachment)\n    return this.render()\n  }\n\n  recordFormattingUndoEntry(attributeName) {\n    const blockConfig = getBlockConfig(attributeName)\n    const locationRange = this.selectionManager.getLocationRange()\n    if (blockConfig || !rangeIsCollapsed(locationRange)) {\n      return this.editor.recordUndoEntry(\"Formatting\", { context: this.getUndoContext(), consolidatable: true })\n    }\n  }\n\n  recordTypingUndoEntry() {\n    return this.editor.recordUndoEntry(\"Typing\", {\n      context: this.getUndoContext(this.currentAttributes),\n      consolidatable: true,\n    })\n  }\n\n  getUndoContext(...context) {\n    return [ this.getLocationContext(), this.getTimeContext(), ...Array.from(context) ]\n  }\n\n  getLocationContext() {\n    const locationRange = this.selectionManager.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      return locationRange[0].index\n    } else {\n      return locationRange\n    }\n  }\n\n  getTimeContext() {\n    if (config.undo.interval > 0) {\n      return Math.floor(new Date().getTime() / config.undo.interval)\n    } else {\n      return 0\n    }\n  }\n\n  isFocused() {\n    return this.editorElement === this.editorElement.ownerDocument?.activeElement\n  }\n\n  // Detect \"Cursor disappears sporadically\" Firefox bug.\n  // - https://bugzilla.mozilla.org/show_bug.cgi?id=226301\n  isFocusedInvisibly() {\n    return this.isFocused() && !this.getLocationRange()\n  }\n\n  get actions() {\n    return this.constructor.actions\n  }\n}\n\nEditorController.proxyMethod(\"getSelectionManager().setLocationRange\")\nEditorController.proxyMethod(\"getSelectionManager().getLocationRange\")\n", "import * as config from \"trix/config\"\n\nimport { installDefaultCSSForTagName } from \"trix/core/helpers\"\n\ninstallDefaultCSSForTagName(\"trix-toolbar\", `\\\n%t {\n  display: block;\n}\n\n%t {\n  white-space: nowrap;\n}\n\n%t [data-trix-dialog] {\n  display: none;\n}\n\n%t [data-trix-dialog][data-trix-active] {\n  display: block;\n}\n\n%t [data-trix-dialog] [data-trix-validate]:invalid {\n  background-color: #ffdddd;\n}`)\n\nexport default class TrixToolbarElement extends HTMLElement {\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (this.innerHTML === \"\") {\n      this.innerHTML = config.toolbar.getDefaultHTML()\n    }\n  }\n}\n", "import * as config from \"trix/config\"\n\nimport {\n  findClosestElementFromNode,\n  handleEvent,\n  handleEventOnce,\n  installDefaultCSSForTagName,\n  makeElement,\n  triggerEvent,\n} from \"trix/core/helpers\"\n\nimport { attachmentSelector } from \"trix/config/attachments\"\nimport EditorController from \"trix/controllers/editor_controller\"\nimport \"trix/elements/trix_toolbar_element\"\n\nlet id = 0\n\n// Contenteditable support helpers\n\nconst autofocus = function(element) {\n  if (!document.querySelector(\":focus\")) {\n    if (element.hasAttribute(\"autofocus\") && document.querySelector(\"[autofocus]\") === element) {\n      return element.focus()\n    }\n  }\n}\n\nconst makeEditable = function(element) {\n  if (element.hasAttribute(\"contenteditable\")) {\n    return\n  }\n  element.setAttribute(\"contenteditable\", \"\")\n  return handleEventOnce(\"focus\", {\n    onElement: element,\n    withCallback() {\n      return configureContentEditable(element)\n    },\n  })\n}\n\nconst configureContentEditable = function(element) {\n  disableObjectResizing(element)\n  return setDefaultParagraphSeparator(element)\n}\n\nconst disableObjectResizing = function(element) {\n  if (document.queryCommandSupported?.(\"enableObjectResizing\")) {\n    document.execCommand(\"enableObjectResizing\", false, false)\n    return handleEvent(\"mscontrolselect\", { onElement: element, preventDefault: true })\n  }\n}\n\nconst setDefaultParagraphSeparator = function(element) {\n  if (document.queryCommandSupported?.(\"DefaultParagraphSeparator\")) {\n    const { tagName } = config.blockAttributes.default\n    if ([ \"div\", \"p\" ].includes(tagName)) {\n      return document.execCommand(\"DefaultParagraphSeparator\", false, tagName)\n    }\n  }\n}\n\n// Accessibility helpers\n\nconst addAccessibilityRole = function(element) {\n  if (element.hasAttribute(\"role\")) {\n    return\n  }\n  return element.setAttribute(\"role\", \"textbox\")\n}\n\nconst ensureAriaLabel = function(element) {\n  if (element.hasAttribute(\"aria-label\") || element.hasAttribute(\"aria-labelledby\")) {\n    return\n  }\n\n  const update = function() {\n    const texts = Array.from(element.labels).map((label) => {\n      if (!label.contains(element)) return label.textContent\n    }).filter(text => text)\n\n    const text = texts.join(\" \")\n    if (text) {\n      return element.setAttribute(\"aria-label\", text)\n    } else {\n      return element.removeAttribute(\"aria-label\")\n    }\n  }\n  update()\n  return handleEvent(\"focus\", { onElement: element, withCallback: update })\n}\n\n// Style\n\nconst cursorTargetStyles = (function() {\n  if (config.browser.forcesObjectResizing) {\n    return {\n      display: \"inline\",\n      width: \"auto\",\n    }\n  } else {\n    return {\n      display: \"inline-block\",\n      width: \"1px\",\n    }\n  }\n})()\n\ninstallDefaultCSSForTagName(\"trix-editor\", `\\\n%t {\n    display: block;\n}\n\n%t:empty::before {\n    content: attr(placeholder);\n    color: graytext;\n    cursor: text;\n    pointer-events: none;\n    white-space: pre-line;\n}\n\n%t a[contenteditable=false] {\n    cursor: text;\n}\n\n%t img {\n    max-width: 100%;\n    height: auto;\n}\n\n%t ${attachmentSelector} figcaption textarea {\n    resize: none;\n}\n\n%t ${attachmentSelector} figcaption textarea.trix-autoresize-clone {\n    position: absolute;\n    left: -9999px;\n    max-height: 0px;\n}\n\n%t ${attachmentSelector} figcaption[data-trix-placeholder]:empty::before {\n    content: attr(data-trix-placeholder);\n    color: graytext;\n}\n\n%t [data-trix-cursor-target] {\n    display: ${cursorTargetStyles.display} !important;\n    width: ${cursorTargetStyles.width} !important;\n    padding: 0 !important;\n    margin: 0 !important;\n    border: none !important;\n}\n\n%t [data-trix-cursor-target=left] {\n    vertical-align: top !important;\n    margin-left: -1px !important;\n}\n\n%t [data-trix-cursor-target=right] {\n    vertical-align: bottom !important;\n    margin-right: -1px !important;\n}`)\n\nclass ElementInternalsDelegate {\n  #internals\n\n  constructor(element) {\n    this.element = element\n    this.#internals = element.attachInternals()\n  }\n\n  connectedCallback() {\n    this.#validate()\n  }\n\n  disconnectedCallback() {\n  }\n\n  get labels() {\n    return this.#internals.labels\n  }\n\n  get disabled() {\n    return this.element.inputElement?.disabled\n  }\n\n  set disabled(value) {\n    this.element.toggleAttribute(\"disabled\", value)\n  }\n\n  get required() {\n    return this.element.hasAttribute(\"required\")\n  }\n\n  set required(value) {\n    this.element.toggleAttribute(\"required\", value)\n    this.#validate()\n  }\n\n  get validity() {\n    return this.#internals.validity\n  }\n\n  get validationMessage() {\n    return this.#internals.validationMessage\n  }\n\n  get willValidate() {\n    return this.#internals.willValidate\n  }\n\n  setFormValue(value) {\n    this.#validate()\n  }\n\n  checkValidity() {\n    return this.#internals.checkValidity()\n  }\n\n  reportValidity() {\n    return this.#internals.reportValidity()\n  }\n\n  setCustomValidity(validationMessage) {\n    this.#validate(validationMessage)\n  }\n\n  #validate(customValidationMessage = \"\") {\n    const { required, value } = this.element\n    const valueMissing = required && !value\n    const customError = !!customValidationMessage\n    const input = makeElement(\"input\", { required })\n    const validationMessage = customValidationMessage || input.validationMessage\n\n    this.#internals.setValidity({ valueMissing, customError }, validationMessage)\n  }\n}\n\nclass LegacyDelegate {\n  #focusHandler\n\n  constructor(element) {\n    this.element = element\n  }\n\n  connectedCallback() {\n    this.#focusHandler = ensureAriaLabel(this.element)\n    window.addEventListener(\"reset\", this.#resetBubbled, false)\n    window.addEventListener(\"click\", this.#clickBubbled, false)\n  }\n\n  disconnectedCallback() {\n    this.#focusHandler?.destroy()\n    window.removeEventListener(\"reset\", this.#resetBubbled, false)\n    window.removeEventListener(\"click\", this.#clickBubbled, false)\n  }\n\n  get labels() {\n    const labels = []\n    if (this.element.id && this.element.ownerDocument) {\n      labels.push(...Array.from(this.element.ownerDocument.querySelectorAll(`label[for='${this.element.id}']`) || []))\n    }\n\n    const label = findClosestElementFromNode(this.element, { matchingSelector: \"label\" })\n    if (label) {\n      if ([ this.element, null ].includes(label.control)) {\n        labels.push(label)\n      }\n    }\n\n    return labels\n  }\n\n  get disabled() {\n    console.warn(\"This browser does not support the [disabled] attribute for trix-editor elements.\")\n\n    return false\n  }\n\n  set disabled(value) {\n    console.warn(\"This browser does not support the [disabled] attribute for trix-editor elements.\")\n  }\n\n  get required() {\n    console.warn(\"This browser does not support the [required] attribute for trix-editor elements.\")\n\n    return false\n  }\n\n  set required(value) {\n    console.warn(\"This browser does not support the [required] attribute for trix-editor elements.\")\n  }\n\n  get validity() {\n    console.warn(\"This browser does not support the validity property for trix-editor elements.\")\n    return null\n  }\n\n  get validationMessage() {\n    console.warn(\"This browser does not support the validationMessage property for trix-editor elements.\")\n\n    return \"\"\n  }\n\n  get willValidate() {\n    console.warn(\"This browser does not support the willValidate property for trix-editor elements.\")\n\n    return false\n  }\n\n  setFormValue(value) {\n  }\n\n  checkValidity() {\n    console.warn(\"This browser does not support checkValidity() for trix-editor elements.\")\n\n    return true\n  }\n\n  reportValidity() {\n    console.warn(\"This browser does not support reportValidity() for trix-editor elements.\")\n\n    return true\n  }\n\n  setCustomValidity(validationMessage) {\n    console.warn(\"This browser does not support setCustomValidity(validationMessage) for trix-editor elements.\")\n  }\n\n  #resetBubbled = (event) => {\n    if (event.defaultPrevented) return\n    if (event.target !== this.element.form) return\n    this.element.reset()\n  }\n\n  #clickBubbled = (event) => {\n    if (event.defaultPrevented) return\n    if (this.element.contains(event.target)) return\n\n    const label = findClosestElementFromNode(event.target, { matchingSelector: \"label\" })\n    if (!label) return\n\n    if (!Array.from(this.labels).includes(label)) return\n\n    this.element.focus()\n  }\n}\n\nexport default class TrixEditorElement extends HTMLElement {\n  static formAssociated = \"ElementInternals\" in window\n\n  static observedAttributes = [ \"connected\" ]\n\n  #delegate\n\n  constructor() {\n    super()\n    this.#delegate = this.constructor.formAssociated ?\n      new ElementInternalsDelegate(this) :\n      new LegacyDelegate(this)\n  }\n\n  // Properties\n\n  get trixId() {\n    if (this.hasAttribute(\"trix-id\")) {\n      return this.getAttribute(\"trix-id\")\n    } else {\n      this.setAttribute(\"trix-id\", ++id)\n      return this.trixId\n    }\n  }\n\n  get labels() {\n    return this.#delegate.labels\n  }\n\n  get disabled() {\n    return this.#delegate.disabled\n  }\n\n  set disabled(value) {\n    this.#delegate.disabled = value\n  }\n\n  get required() {\n    return this.#delegate.required\n  }\n\n  set required(value) {\n    this.#delegate.required = value\n  }\n\n  get validity() {\n    return this.#delegate.validity\n  }\n\n  get validationMessage() {\n    return this.#delegate.validationMessage\n  }\n\n  get willValidate() {\n    return this.#delegate.willValidate\n  }\n\n  get type() {\n    return this.localName\n  }\n\n  get toolbarElement() {\n    if (this.hasAttribute(\"toolbar\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"toolbar\"))\n    } else if (this.parentNode) {\n      const toolbarId = `trix-toolbar-${this.trixId}`\n      this.setAttribute(\"toolbar\", toolbarId)\n      this.internalToolbar = makeElement(\"trix-toolbar\", { id: toolbarId })\n      this.parentNode.insertBefore(this.internalToolbar, this)\n      return this.internalToolbar\n    } else {\n      return undefined\n    }\n  }\n\n  get form() {\n    return this.inputElement?.form\n  }\n\n  get inputElement() {\n    if (this.hasAttribute(\"input\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"input\"))\n    } else if (this.parentNode) {\n      const inputId = `trix-input-${this.trixId}`\n      this.setAttribute(\"input\", inputId)\n      const element = makeElement(\"input\", { type: \"hidden\", id: inputId })\n      this.parentNode.insertBefore(element, this.nextElementSibling)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get editor() {\n    return this.editorController?.editor\n  }\n\n  get name() {\n    return this.inputElement?.name\n  }\n\n  get value() {\n    return this.inputElement?.value\n  }\n\n  set value(defaultValue) {\n    this.defaultValue = defaultValue\n    this.editor?.loadHTML(this.defaultValue)\n  }\n\n  // Element callbacks\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === \"connected\" && this.isConnected && oldValue != null && oldValue !== newValue) {\n      requestAnimationFrame(() => this.reconnect())\n    }\n  }\n\n  // Controller delegate methods\n\n  notify(message, data) {\n    if (this.editorController) {\n      return triggerEvent(`trix-${message}`, { onElement: this, attributes: data })\n    }\n  }\n\n  setFormValue(value) {\n    if (this.inputElement) {\n      this.inputElement.value = value\n      this.#delegate.setFormValue(value)\n    }\n  }\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (!this.hasAttribute(\"data-trix-internal\")) {\n      makeEditable(this)\n      addAccessibilityRole(this)\n\n      if (!this.editorController) {\n        triggerEvent(\"trix-before-initialize\", { onElement: this })\n        this.editorController = new EditorController({\n          editorElement: this,\n          html: this.defaultValue = this.value,\n        })\n        requestAnimationFrame(() => triggerEvent(\"trix-initialize\", { onElement: this }))\n      }\n      this.editorController.registerSelectionManager()\n      this.#delegate.connectedCallback()\n\n      this.toggleAttribute(\"connected\", true)\n      autofocus(this)\n    }\n  }\n\n  disconnectedCallback() {\n    this.editorController?.unregisterSelectionManager()\n    this.#delegate.disconnectedCallback()\n    this.toggleAttribute(\"connected\", false)\n  }\n\n  reconnect() {\n    this.removeInternalToolbar()\n    this.disconnectedCallback()\n    this.connectedCallback()\n  }\n\n  removeInternalToolbar() {\n    this.internalToolbar?.remove()\n    this.internalToolbar = null\n  }\n\n  // Form support\n\n  checkValidity() {\n    return this.#delegate.checkValidity()\n  }\n\n  reportValidity() {\n    return this.#delegate.reportValidity()\n  }\n\n  setCustomValidity(validationMessage) {\n    this.#delegate.setCustomValidity(validationMessage)\n  }\n\n  formDisabledCallback(disabled) {\n    if (this.inputElement) {\n      this.inputElement.disabled = disabled\n    }\n    this.toggleAttribute(\"contenteditable\", !disabled)\n  }\n\n  formResetCallback() {\n    this.reset()\n  }\n\n  reset() {\n    this.value = this.defaultValue\n  }\n}\n", "import { version } from \"../../package.json\"\n\nimport * as config from \"trix/config\"\nimport * as core from \"trix/core\"\nimport * as models from \"trix/models\"\nimport * as views from \"trix/views\"\nimport * as controllers from \"trix/controllers\"\nimport * as observers from \"trix/observers\"\nimport * as operations from \"trix/operations\"\nimport * as elements from \"trix/elements\"\nimport * as filters from \"trix/filters\"\n\nconst Trix = {\n  VERSION: version,\n  config,\n  core,\n  models,\n  views,\n  controllers,\n  observers,\n  operations,\n  elements,\n  filters\n}\n\n// Expose models under the Trix constant for compatibility with v1\nObject.assign(Trix, models)\n\nfunction start() {\n  if (!customElements.get(\"trix-toolbar\")) {\n    customElements.define(\"trix-toolbar\", elements.TrixToolbarElement)\n  }\n\n  if (!customElements.get(\"trix-editor\")) {\n    customElements.define(\"trix-editor\", elements.TrixEditorElement)\n  }\n}\n\nwindow.Trix = Trix\nsetTimeout(start, 0)\n\nexport default Trix\n"],
  "mappings": "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",
  "names": ["attachmentSelector", "attachments", "preview", "presentation", "caption", "name", "size", "file", "attributes", "default", "tagName", "parse", "quote", "nestable", "heading1", "terminal", "breakOnReturn", "group", "code", "htmlAttributes", "text", "plaintext", "bulletList", "bullet", "listAttribute", "test", "element", "parentNode", "this", "numberList", "number", "attachmentGallery", "exclusive", "_element$tagName", "toLowerCase", "androidVersionMatch", "navigator", "userAgent", "match", "androidVersion", "parseInt", "browser$1", "composesExistingText", "recentAndroid", "samsungAndroid", "forcesObjectResizing", "supportsInputEvents", "InputEvent", "every", "prop", "prototype", "dompurify", "ADD_ATTR", "SAFE_FOR_XML", "RETURN_DOM", "lang$1", "attachFiles", "bold", "bullets", "byte", "bytes", "captionPlaceholder", "indent", "italic", "link", "numbers", "outdent", "redo", "remove", "strike", "undo", "unlink", "url", "urlPlaceholder", "GB", "KB", "MB", "PB", "TB", "sizes", "lang", "file_size_formatting", "prefix", "precision", "formatter", "concat", "base", "exp", "Math", "floor", "log", "withoutInsignificantZeros", "pow", "toFixed", "replace", "ZERO_WIDTH_SPACE", "NON_BREAKING_SPACE", "extend", "properties", "key", "value", "html", "document", "documentElement", "matches", "handleEvent", "eventName", "onElement", "matchingSelector", "withCallback", "inPhase", "preventDefault", "times", "arguments", "length", "undefined", "selector", "useCapture", "handler", "event", "destroy", "target", "findClosestElementFromNode", "call", "removeEventListener", "addEventListener", "triggerEvent", "bubbles", "cancelable", "createEvent", "initEvent", "dispatchEvent", "elementMatchesSelector", "nodeType", "node", "untilNode", "Node", "ELEMENT_NODE", "closest", "innerElementIsActive", "activeElement", "elementContainsNode", "findChildIndexOfNode", "_node", "childIndex", "previousSibling", "removeNode", "_node$parentNode", "removeChild", "walkTree", "tree", "onlyNodesOfType", "usingFilter", "expandEntityReferences", "whatToShow", "NodeFilter", "SHOW_ELEMENT", "SHOW_TEXT", "SHOW_COMMENT", "SHOW_ALL", "createTreeWalker", "makeElement", "tag", "options", "createElement", "editable", "contenteditable", "setAttribute", "style", "data", "dataset", "className", "split", "forEach", "classList", "add", "textContent", "childNodes", "childNode", "appendChild", "blockTagNames", "getBlockTagNames", "blockAttributes", "push", "nodeIsBlockContainer", "nodeIsBlockStartComment", "firstChild", "nodeIsBlockStart", "strict", "includes", "nodeIsCommentNode", "COMMENT_NODE", "nodeIsCursorTarget", "nodeIsTextNode", "trixCursorTarget", "nodeIsAttachmentElement", "nodeIsEmptyTextNode", "TEXT_NODE", "input", "level2Enabled", "getLevel", "browser", "pickFiles", "callback", "type", "multiple", "hidden", "id", "fileInputId", "files", "getElementById", "body", "click", "parser", "removeBlankTableCells", "tableCellSeparator", "tableRowSeparator", "text_attributes", "inheritable", "window", "getComputedStyle", "fontWeight", "fontStyle", "href", "groupTagName", "getAttribute", "frozen", "backgroundColor", "toolbar", "getDefaultHTML", "interval", "attachment", "attachmentCaption", "attachmentCaptionEditor", "attachmentMetadata", "attachmentMetadataContainer", "attachmentName", "attachmentProgress", "attachmentSize", "attachmentToolbar", "BasicObject", "expression", "toMethod", "toProperty", "optional", "parseProxyMethodExpression", "subject", "object", "_this$toMethod", "_object", "apply", "proxyMethodExpressionPattern", "Error", "args", "Function", "RegExp", "UTF16String", "box", "fromUCS2String", "toString", "ucs2String", "ucs2decode", "codepoints", "ucs2encode", "constructor", "super", "ucs2Length", "offsetToUCS2Offset", "offset", "slice", "max", "offsetFromUCS2Offset", "ucs2Offset", "fromCodepoints", "charAt", "isEqualTo", "toJSON", "getCacheKey", "hasArrayFrom", "_Array$from", "Array", "from", "hasStringCodePointAt", "_$codePointAt", "codePointAt", "hasStringFromCodePoint", "_String$fromCodePoint", "String", "fromCodePoint", "string", "map", "char", "output", "counter", "charCodeAt", "extra", "array", "result", "fromCharCode", "join", "TrixObject", "jsonString", "fromJSON", "JSON", "hasSameConstructorAs", "inspect", "parts", "contents", "contentsForInspection", "toJSONString", "stringify", "toUTF16String", "arraysAreEqual", "a", "b", "index", "spliceArray", "_len", "_key", "splice", "RTL_PATTERN", "getDirection", "dir", "dirName", "textArea", "form", "supportsDirName", "FormData", "has", "error", "supportsDirSelector", "get", "trim", "allAttributeNames", "blockAttributeNames", "textAttributeNames", "listAttributeNames", "getAllAttributeNames", "getTextAttributeNames", "getBlockAttributeNames", "getBlockConfig", "attributeName", "config", "Object", "keys", "getTextConfig", "installDefaultCSSForTagName", "defaultCSS", "insertStyleElementForTagName", "nonce", "getCSPNonce", "head", "insertBefore", "getMetaElement", "content", "querySelector", "testTransferData", "dataTransferIsPlainText", "dataTransfer", "getData", "DOMParser", "parseFromString", "keyEventIsKeyboardCommand", "platform", "metaKey", "ctrlKey", "defer", "fn", "setTimeout", "copyObject", "objectsAreEqual", "normalizeRange", "range", "isArray", "copyValue", "rangeIsCollapsed", "start", "end", "rangeValuesAreEqual", "rangesAreEqual", "leftRange", "rightRange", "leftStart", "leftEnd", "rightStart", "rightEnd", "left", "right", "SelectionChangeObserver", "update", "bind", "selectionManagers", "started", "stop", "registerSelectionManager", "selectionManager", "unregisterSelectionManager", "filter", "sm", "notifySelectionManagersOfSelectionChange", "selectionDidChange", "reset", "selectionChangeObserver", "getDOMSelection", "selection", "getSelection", "rangeCount", "getDOMRange", "_getDOMSelection", "domRange", "getRangeAt", "domRangeIsPrivate", "setDOMRange", "removeAllRanges", "addRange", "nodeIsPrivate", "startContainer", "endContainer", "getPrototypeOf", "normalizeSpaces", "breakableWhitespacePattern", "squishBreakableWhitespace", "source", "utf16StringDifferences", "diffA", "utf16StringDifference", "utf16String", "diffB", "leftIndex", "rightIndexA", "rightIndexB", "Hash", "fromCommonAttributesOfObjects", "objects", "hash", "getKeys", "getKeysCommonToHash", "values", "copy", "merge", "unbox", "toArray", "isEmpty", "toObject", "keyToRemove", "sort", "ObjectGroup", "groupObjects", "ungroupedObjects", "depth", "asTree", "_object$canBeGrouped2", "_object$canBeGrouped", "_group$canBeGroupedWi", "_group", "canBeGrouped", "canBeGroupedWith", "getObjects", "getDepth", "ObjectMap", "find", "ElementStore", "elements", "getKey", "trixStoreKey", "Operation", "isPerforming", "performing", "hasPerformed", "performed", "hasSucceeded", "succeeded", "hasFailed", "getPromise", "promise", "Promise", "resolve", "reject", "perform", "release", "_this$promise", "_this$promise$cancel", "cancel", "proxyMethod", "ObjectView", "childViews", "rootView", "getNodes", "nodes", "createNodes", "cloneNode", "invalidate", "_this$parentView", "parentView", "invalidateViewForObject", "_this$findViewForObje", "findViewForObject", "findOrCreateCachedChildView", "viewClass", "view", "getCachedViewForObject", "recordChildView", "createChildView", "cacheViewForObject", "ObjectGroupView", "getAllChildViews", "views", "childView", "findElement", "findElementForObject", "getViewCache", "isViewCachingEnabled", "viewCache", "shouldCacheViews", "enableViewCaching", "disableViewCaching", "_this$getViewCache", "cache", "garbageCollectCachedViews", "objectKeys", "objectGroup", "getChildViews", "createContainerElement", "DOMPurify", "addHook", "attrName", "forceKeepAttr", "DEFAULT_ALLOWED_ATTRIBUTES", "DEFAULT_FORBIDDEN_PROTOCOLS", "DEFAULT_FORBIDDEN_ELEMENTS", "HTMLSanitizer", "sanitizedElement", "sanitize", "sanitizedHtml", "getHTML", "outerHTML", "innerHTML", "sanitizer", "allowedAttributes", "forbiddenProtocols", "forbiddenElements", "createBodyElementForHTML", "sanitizeElements", "normalizeListElementNesting", "setConfig", "getBody", "walker", "nodesToRemove", "nextNode", "currentNode", "elementIsRemovable", "sanitizeElement", "hasAttribute", "protocol", "removeAttribute", "_ref", "indexOf", "querySelectorAll", "listElement", "previousElement", "previousElementSibling", "elementIsForbidden", "elementIsntSerializable", "doc", "implementation", "createHTMLDocument", "css", "AttachmentView", "uploadProgressDelegate", "attachmentPiece", "piece", "createContentNodes", "innerElement", "figure", "getClassName", "getHref", "tabindex", "hasContent", "setHTML", "getContent", "createCaptionElement", "isPending", "progressElement", "class", "getUploadProgress", "trixMutable", "createCursorTarget", "figcaption", "getCaption", "captionConfig", "getCaptionConfig", "getFilename", "getFormattedFilesize", "nameElement", "createTextNode", "sizeElement", "names", "getType", "extension", "getExtension", "trixAttachment", "trixContentType", "getContentType", "trixId", "trixAttributes", "trixSerialize", "htmlContainsTagName", "_config$attachments$t", "findProgressElement", "_this$findElement", "attachmentDidChangeUploadProgress", "div", "PreviewableAttachmentView", "previewDelegate", "image", "src", "refresh", "updateAttributesForImage", "getURL", "previewURL", "getPreviewURL", "serializedAttributes", "width", "getWidth", "height", "getHeight", "storeKey", "attachmentDidChangeAttributes", "PieceView", "getAttributes", "textConfig", "context", "createAttachmentNodes", "createStringNodes", "_element", "firstElementChild", "isPreviewable", "_this$textConfig", "iterable", "substring", "preserveSpaces", "styles", "pendingElement", "styleProperty", "isLast", "isFirst", "followsWhitespace", "TextView", "pieces", "getPieces", "lastIndex", "endsWithWhitespace", "previousPiece", "BlockView", "block", "createComment", "_getBlockConfig", "getLastAttribute", "textView", "shouldAddExtraNewlineElement", "isRTL", "assign", "getBlockBreakPosition", "entries", "DocumentView", "render", "sync", "elementStore", "setDocument", "shadowElement", "getBlocks", "isSynced", "elementsHaveEqualHTML", "fragment", "createDocumentFragmentForSync", "lastChild", "didSync", "findStoredElements", "createDocumentFragment", "storedElement", "replaceChild", "otherElement", "ignoreSpaces", "t", "e", "i", "n", "o", "s", "l", "r", "Piece", "types", "pieceJSON", "copyWithAttributes", "getValue", "copyWithAdditionalAttributes", "copyWithoutAttribute", "attribute", "getAttributesHash", "hasSameStringValueAsPiece", "hasSameAttributesAsPiece", "isBlockBreak", "isSerializable", "getLength", "canBeConsolidatedWith", "_defineProperty", "ImagePreloadOperation", "Image", "onload", "naturalWidth", "naturalHeight", "onerror", "Attachment", "attributesForFile", "setFile", "filename", "filesize", "contentType", "attachmentJSON", "releaseFile", "didChangeAttributes", "setAttributes", "newAttributes", "_this$previewDelegate", "_this$previewDelegate2", "_this$delegate", "_this$delegate$attach", "delegate", "preloadURL", "previewablePattern", "getFilesize", "_this$getFilename$mat", "getFile", "preloadFile", "releasePreloadedFile", "uploadProgress", "setUploadProgress", "_this$uploadProgressD", "_this$uploadProgressD2", "preloadingURL", "setPreviewURL", "_this$previewDelegate3", "_this$previewDelegate4", "_this$delegate2", "_this$delegate2$attac", "attachmentDidChangePreviewURL", "preload", "fileObjectURL", "URL", "createObjectURL", "revokeObjectURL", "then", "catch", "AttachmentPiece", "ensureAttachmentExclusivelyHasAttribute", "removeProhibitedAttributes", "permittedAttributes", "_piece$attachment", "json", "toConsole", "registerType", "StringPiece", "consolidateWith", "splitAtOffset", "SplittableList", "eachObject", "insertObjectAtIndex", "insertSplittableListAtIndex", "splittableList", "insertSplittableListAtPosition", "position", "splitObjectAtPosition", "editObjectAtIndex", "replaceObjectAtIndex", "removeObjectAtIndex", "getObjectAtIndex", "getSplittableListInRange", "rightIndex", "splitObjectsAtRange", "selectSplittableList", "removeObjectsInRange", "transformObjectsInRange", "transform", "transformedObjects", "rightOuterIndex", "leftInnerIndex", "startOfRange", "endOfRange", "getObjectAtPosition", "findIndexAndOffsetAtPosition", "splitIndex", "splitOffset", "leftObject", "rightObject", "consolidate", "pendingObject", "_pendingObject$canBeC", "_pendingObject", "consolidateFromIndexToIndex", "startIndex", "endIndex", "objectsInRange", "consolidatedInRange", "currentPosition", "nextPosition", "findPositionAtIndexAndOffset", "currentIndex", "getEndPosition", "endPosition", "objectArraysAreEqual", "Text", "textJSON", "notEmpty", "pieceList", "copyWithPieceList", "copyUsingObjectMap", "objectMap", "appendText", "insertTextAtPosition", "removeTextAtRange", "replaceTextAtRange", "moveTextFromRangeToPosition", "getTextAtRange", "addAttributeAtRange", "addAttributesAtRange", "removeAttributeAtRange", "setAttributesAtRange", "getAttributesAtPosition", "_this$pieceList$getOb", "getCommonAttributes", "getCommonAttributesAtRange", "getExpandedRangeForAttributeAtOffset", "getStringAtRange", "getStringAtPosition", "startsWithString", "endsWithString", "getAttachmentPieces", "getAttachments", "getAttachmentAndPositionById", "attachmentId", "getAttachmentById", "getRangeOfAttachment", "attachmentAndPosition", "updateAttributesForAttachment", "_text$pieceList", "eachPiece", "getPieceAtPosition", "toSerializableText", "Block", "blockJSON", "applyBlockBreakToText", "copyWithText", "copyWithoutText", "copyWithoutAttributes", "mappedText", "addAttribute", "expandAttribute", "addHTMLAttribute", "removeLastValue", "removeLastAttribute", "getLastElement", "getAttributeLevel", "getAttributeAtLevel", "level", "hasAttributes", "getLastNestableAttribute", "getNestableAttributes", "getNestingLevel", "decreaseNestingLevel", "increaseNestingLevel", "lastIndexOf", "getListItemAttributes", "isListItem", "isTerminalBlock", "_getBlockConfig2", "breaksOnReturn", "_getBlockConfig3", "findLineBreakInDirectionFromPosition", "direction", "newlineText", "textForStringWithAttributes", "getTextWithoutBlockBreak", "textEndsInBlockBreak", "otherBlock", "otherAttributes", "otherAttribute", "getListAttributeNames", "unmarkExistingInnerBlockBreaksInText", "addBlockBreakToText", "modified", "innerPieces", "lastPiece", "unmarkBlockBreakPiece", "blockBreakText", "blockBreak", "Document", "documentJSON", "textAttributes", "blocks", "blockList", "getBlockAtIndex", "consolidateBlocks", "copyUsingObjectsFromDocument", "sourceDocument", "copyWithBaseBlockAttributes", "replaceBlock", "oldBlock", "newBlock", "insertDocumentAtRange", "locationFromPosition", "getBlockAtPosition", "mergeDocumentAtRange", "formattedDocument", "startPosition", "startLocation", "baseBlockAttributes", "getBaseBlockAttributes", "trailingBlockAttributes", "leadingBlockAttributes", "blockCount", "getBlockCount", "firstBlock", "firstText", "insertTextAtRange", "leftPosition", "rightPosition", "leftLocation", "rightLocation", "locationRangeFromRange", "leftOffset", "leftBlock", "rightOffset", "rightBlock", "leftText", "rightText", "affectedBlockCount", "getDocumentAtRange", "movingRightward", "eachBlockAtRange", "textRange", "eachBlock", "getTextAtIndex", "removeAttributeForAttachment", "setHTMLAttributeAtPosition", "updatedBlock", "insertBlockBreakAtRange", "applyBlockAttributeAtRange", "expanded", "expandRangeToLineBreaksAndSplitBlocks", "blockConfig", "removeLastListAttributeAtRange", "exceptAttributeName", "converted", "convertLineBreaksToBlockBreaksInRange", "removeBlockAttributesAtRange", "removeLastTerminalAttributeAtRange", "consolidateBlocksAtRange", "lastAttributeName", "endLocation", "startBlock", "positionFromLocation", "endBlock", "_this$getBlockAtIndex", "getTextAtPosition", "getCharacterAtPosition", "getEditCount", "editCount", "getCommonAttributesAtPosition", "attributesForBlock", "commonAttributes", "attributesLeft", "inheritableAttributes", "getRangeOfCommonAttributeAtPosition", "startOffset", "endOffset", "blockIndex", "lastAttributeIndex", "min", "attachmentPieces", "getLocationRangeOfAttachment", "getAttachmentPieceForAttachment", "findRangesForBlockAttribute", "ranges", "findRangesForTextAttribute", "withValue", "location", "locationRangeFromPosition", "rangeFromLocationRange", "locationRange", "getTexts", "toSerializableDocument", "pieceForString", "parseTrixDataAttribute", "HTMLParser", "referenceElement", "blockElements", "processedElements", "getDocument", "createHiddenContainer", "containerElement", "nodeFilter", "processNode", "translateBlockElementMarginsToNewlines", "removeHiddenContainer", "display", "nextSibling", "isInsignificantTextNode", "appendBlockForTextNode", "processTextNode", "appendBlockForElement", "processElement", "currentBlockElement", "isBlockElement", "appendStringWithAttributes", "_this$currentBlock", "getBlockAttributes", "getBlockHTMLAttributes", "currentBlock", "appendBlockForAttributesWithElement", "elementIsBlockElement", "currentBlockContainsElement", "parentBlockElement", "findParentBlockElement", "appendEmptyBlock", "parentElement", "_node$previousSibling", "elementCanDisplayPreformattedText", "stringEndsWithWhitespace", "leftTrimBreakableWhitespace", "getTextAttributes", "appendAttachmentWithAttributes", "isExtraBR", "dimensions", "needsTableSeparator", "appendPiece", "appendStringToTextAtIndex", "prependStringToTextAtIndex", "unshift", "configAttr", "attributeInheritedFromBlock", "blockElement", "findBlockElementAncestors", "attrConfig", "_attrConfig$test", "reverse", "settings", "ancestors", "stringIsAllBreakableWhitespace", "nodeEndsWithNonWhitespace", "_element$previousSibl", "defaultMargin", "getMarginOfDefaultBlockElement", "margin", "getMarginOfBlockElementAtIndex", "top", "bottom", "getBlockElementMargin", "whiteSpace", "marginTop", "marginBottom", "FILTER_REJECT", "FILTER_ACCEPT", "unserializableAttributeNames", "serializedAttributesAttribute", "serializedAttributesSelector", "blockCommentPattern", "serializers", "serializable", "HTMLElement", "el", "ManagedAttachment", "attachmentManager", "requestRemovalOfAttachment", "AttachmentManager", "managedAttachments", "manageAttachment", "attachmentIsManaged", "attachmentManagerDidRequestRemovalOfAttachment", "unmanageAttachment", "managedAttachment", "LineBreakInsertion", "composition", "selectedRange", "getSelectedRange", "previousCharacter", "nextCharacter", "shouldInsertBlockBreak", "shouldBreakFormattedBlock", "shouldDecreaseListLevel", "shouldPrependListItem", "shouldRemoveLastBlockAttribute", "Composition", "currentAttributes", "revision", "_this$delegate$compos", "refreshAttachments", "compositionDidChangeDocument", "getSnapshot", "loadSnapshot", "_this$delegate2$compo", "_this$delegate3", "_this$delegate3$compo", "compositionWillLoadSnapshot", "setSelection", "compositionDidLoadSnapshot", "insertText", "updatePosition", "notifyDelegateOfInsertionAtRange", "insertBlock", "insertDocument", "insertString", "getCurrentTextAttributes", "insertBlockBreak", "insertLineBreak", "insertion", "decreaseListLevel", "removeLastBlockAttribute", "breakFormattedBlock", "insertHTML", "replaceHTML", "getLocationRange", "insertFile", "insertFiles", "_this$delegate4", "compositionShouldAcceptFile", "attachmentForFile", "insertAttachments", "insertAttachment", "attachmentText", "textForAttachmentWithAttributes", "shouldManageDeletingInDirection", "shouldManageMovingCursorInDirection", "deleteInDirection", "deletingIntoPreviousBlock", "selectionSpansBlocks", "selectionIsCollapsed", "canDecreaseBlockAttributeLevel", "getBlock", "decreaseBlockAttributeLevel", "getExpandedRangeInDirection", "getAttachmentAtRange", "editAttachment", "moveTextFromRange", "removeAttachment", "stopEditingAttachment", "removeCurrentAttribute", "insertPlaceholder", "placeholderPosition", "getPosition", "selectPlaceholder", "setSelectedRange", "PLACEHOLDER", "forgetPlaceholder", "hasCurrentAttribute", "toggleCurrentAttribute", "setCurrentAttribute", "canSetCurrentAttribute", "canSetCurrentBlockAttribute", "canSetCurrentTextAttribute", "getSelectedDocument", "setBlockAttribute", "setTextAttribute", "notifyDelegateOfCurrentAttributesChange", "setHTMLAtributeAtPosition", "allowedHTMLAttributes", "newDocument", "removeBlockAttribute", "updateCurrentAttributes", "removeTextAttribute", "canDecreaseNestingLevel", "_this$getBlock", "canIncreaseNestingLevel", "previousBlock", "getPreviousBlock", "_this$getBlock2", "_this$getBlock3", "attributeLevel", "ignoreLock", "getCurrentAttributes", "freezeSelection", "thawSelection", "hasFrozenSelection", "_this$delegate5", "compositionDidRequestChangingSelectionToLocationRange", "getSelectionManager", "setLocationRange", "targetLocationRange", "withTargetLocationRange", "withTargetRange", "withTargetDOMRange", "createLocationRangeFromDOMRange", "translateUTF16PositionFromOffset", "editingAttachment", "moveCursorInDirection", "canEditAttachment", "expandSelectionInDirection", "expandSelectionForEditing", "expandSelectionAroundCommonAttribute", "selectionContainsAttachments", "_this$getSelectedAtta", "getSelectedAttachments", "selectionIsInCursorTarget", "positionIsCursorTarget", "locationIsCursorTarget", "positionIsBlockBreak", "_this$document$getPie", "_this$getSelectedDocu", "added", "removed", "oldArray", "newArray", "existingValues", "Set", "currentValues", "_this$delegate6", "_this$delegate6$compo", "compositionDidRemoveAttachment", "_this$delegate7", "_this$delegate7$compo", "compositionDidAddAttachment", "_this$delegate8", "_this$delegate8$compo", "compositionDidEditAttachment", "_this$delegate9", "_this$delegate9$compo", "compositionDidChangeAttachmentPreviewURL", "_this$delegate10", "_this$delegate10$comp", "compositionDidStartEditingAttachment", "_this$delegate11", "_this$delegate11$comp", "compositionDidStopEditingAttachment", "_this$delegate12", "_this$delegate12$comp", "compositionDidChangeCurrentAttributes", "_this$delegate13", "_this$delegate13$comp", "compositionDidPerformInsertionAtRange", "utf16string", "utf16position", "UndoManager", "undoEntries", "redoEntries", "recordUndoEntry", "description", "consolidatable", "previousEntry", "entryHasDescriptionAndContext", "undoEntry", "createEntry", "pop", "redoEntry", "snapshot", "canUndo", "canRedo", "entry", "BLOCK_ATTRIBUTE_NAME", "Filter", "applyBlockAttribute", "findRangesOfBlocks", "findRangesOfPieces", "moveSelectedRangeForward", "attachmentGalleryFilter", "DEFAULT_FILTERS", "Editor", "undoManager", "filters", "loadDocument", "loadHTML", "loadJSON", "getClientRectAtPosition", "getClientRectAtLocationRange", "activateAttribute", "attributeIsActive", "canActivateAttribute", "deactivateAttribute", "LocationMapper", "findLocationFromContainerAndOffset", "container", "foundBlock", "attachmentElement", "findAttachmentElementParentForNode", "rejectAttachmentContents", "nodeLength", "findContainerAndOffsetFromLocation", "nodeOffset", "findNodeAndOffsetFromLocation", "getSignificantNodesForIndex", "acceptSignificantNodes", "recordingNodes", "rejectEmptyTextNodes", "PointMapper", "createDOMRangeFromPoint", "x", "y", "caretPositionFromPoint", "offsetNode", "createRange", "setStart", "caretRangeFromPoint", "createTextRange", "originalDOMRange", "moveToPoint", "select", "getClientRectsForDOMRange", "getClientRects", "SelectionManager", "didMouseDown", "locationMapper", "pointMapper", "lockCount", "currentLocationRange", "lockedLocationRange", "createDOMRangeFromLocationRange", "updateCurrentLocationRange", "setLocationRangeFromPointRange", "pointRange", "getLocationAtPoint", "lock", "unlock", "clearSelection", "_getDOMRange", "collapsed", "selectionIsExpanded", "domRangeWithinElement", "pauseTemporarily", "resumeHandlers", "paused", "resume", "clearTimeout", "resumeTimeout", "_this$delegate$locati", "locationRangeDidChange", "rangeStart", "rangeEnd", "setEnd", "point", "_this$createLocationR", "keyNames", "undoable", "commands", "do", "undos", "AttachmentEditorController", "title", "trixAction", "didClickToolbar", "didClickActionButton", "textarea", "placeholder", "textareaClone", "tabIndex", "autoresize", "scrollHeight", "didInputCaption", "didKeyDownCaption", "didChangeCaption", "didBlurCaption", "editingFigcaption", "editCaption", "focus", "install", "makeElementMutable", "addToolbar", "installCaptionEditor", "uninstall", "savePendingCaption", "didUninstallAttachmentEditor", "pendingCaption", "_this$delegate3$attac", "attachmentEditorDidRequestUpdatingAttributesForAttachment", "attachmentEditorDidRequestRemovingAttributeForAttachment", "stopPropagation", "attachmentEditorDidRequestRemovalOfAttachment", "_this$delegate5$attac", "keyCode", "attachmentEditorDidRequestDeselectingAttachment", "CompositionController", "didFocus", "didBlur", "didClickAttachment", "documentView", "_this$blurPromise", "focused", "compositionControllerDidFocus", "blurPromise", "compositionControllerDidBlur", "findAttachmentForElement", "compositionControllerDidSelectAttachment", "getSerializableElement", "isEditingAttachment", "_this$delegate4$compo", "_this$delegate5$compo", "canSyncDocumentView", "compositionControllerWillSyncDocumentView", "compositionControllerDidSyncDocumentView", "compositionControllerDidRender", "rerenderViewForObject", "refreshViewCache", "attachmentEditor", "installAttachmentEditorForAttachment", "_this$attachmentEdito", "uninstallAttachmentEditor", "_this$attachmentEdito2", "compositionControllerWillUpdateAttachment", "compositionControllerDidRequestRemovalOfAttachment", "compositionControllerDidRequestDeselectingAttachment", "Controller", "mutableAttributeName", "mutableSelector", "childList", "characterData", "characterDataOldValue", "subtree", "MutationObserver", "didMutate", "observer", "observe", "disconnect", "mutations", "_this$delegate$elemen", "findSignificantMutations", "elementDidMutate", "getMutationSummary", "mutation", "mutationIsSignificant", "nodeIsMutable", "nodesModifiedByMutation", "nodeIsSignificant", "addedNodes", "removedNodes", "getTextMutationSummary", "additions", "deletions", "getTextChangesFromCharacterData", "textChanges", "getTextChangesFromChildList", "addition", "summary", "textAdded", "deleted", "textDeleted", "getMutationsByType", "textRemoved", "getTextForNodes", "characterMutations", "startMutation", "endMutation", "summarized", "oldString", "newString", "oldValue", "FileVerificationOperation", "reader", "FileReader", "abort", "readAsArrayBuffer", "FlakyAndroidKeyboardDetector", "shouldIgnore", "previousEvent", "checkSamsungKeyboardBuggyModeStart", "checkSamsungKeyboardBuggyModeEnd", "buggyMode", "insertingLongTextAfterUnidentifiedChar", "differsInWhitespace", "innerText", "inputType", "_this$event$data", "isBeforeInputInsertText", "previousEventWasUnidentifiedKeydown", "_this$previousEvent", "_this$previousEvent2", "text1", "text2", "normalize", "whiteSpaceNormalizerRegexp", "InputController", "mutationObserver", "flakyKeyboardDetector", "events", "handlerFor", "mutationSummary", "editorWillSyncDocumentView", "editorDidSyncDocumentView", "requestRender", "_this$delegate$inputC", "inputControllerDidRequestRender", "requestReparse", "_this$delegate2$input", "inputControllerDidRequestReparse", "operations", "all", "handleInput", "_this$responder", "inputControllerWillAttachFiles", "responder", "defaultPrevented", "inputControllerWillHandleInput", "inputControllerDidHandleInput", "createLinkHTML", "pastedFileCount", "Level0InputController", "resetInputSummary", "setInputSummary", "inputSummary", "isComposing", "inputControllerDidAllowUnhandledInput", "mutationIsExpected", "preferDocument", "mutationAdditionMatchesSummary", "mutationDeletionMatchesSummary", "didDelete", "unexpectedNewlineAddition", "unexpectedNewlineDeletion", "_this$compositionInpu", "textChanged", "composedEmptyString", "compositionInput", "getEndData", "getCompositionInput", "CompositionInput", "isEnded", "_this$responder2", "serializeSelectionToDataTransfer", "_this$responder3", "setData", "canAcceptDataTransfer", "Files", "getPastedHTMLUsingHiddenElement", "pageXOffset", "pageYOffset", "opacity", "requestAnimationFrame", "keydown", "didInput", "keyName", "_context2", "modifier", "_context", "character", "inputControllerDidReceiveKeyboardCommand", "keypress", "altKey", "stringFromKeyEvent", "_this$responder9", "inputControllerWillPerformTyping", "textInput", "toUpperCase", "_this$responder10", "dragenter", "dragstart", "_this$delegate5$input", "draggedRange", "inputControllerDidStartDrag", "dragover", "draggingPoint", "clientX", "clientY", "_this$delegate6$input", "inputControllerDidReceiveDragOverPoint", "dragend", "_this$delegate7$input", "inputControllerDidCancelDrag", "drop", "_event$dataTransfer", "_this$responder11", "_this$responder12", "inputControllerWillMoveText", "_this$responder13", "fromJSONString", "cut", "_this$responder14", "clipboardData", "inputControllerWillCutText", "_this$responder15", "paste", "clipboard", "testClipboardData", "pasteEventIsCrippledSafariHTMLPaste", "_this$responder16", "inputControllerWillPaste", "inputControllerDidPaste", "_this$responder17", "_this$delegate14", "_this$responder18", "_this$delegate15", "_this$delegate16", "_this$responder19", "_this$delegate17", "_clipboard$items", "_clipboard$items$getA", "items", "getAsFile", "_this$delegate18", "_this$responder20", "_this$delegate19", "extensionForFile", "compositionstart", "compositionupdate", "compositionend", "beforeinput", "backspace", "_this$delegate20", "delete", "_this$delegate21", "return", "_this$delegate22", "_this$responder21", "tab", "_this$responder22", "_this$responder23", "_this$responder24", "_this$responder25", "control", "d", "_this$delegate23", "h", "_this$delegate24", "_this$delegate25", "_this$responder26", "shift", "_this$delegate26", "_this$responder27", "_this$responder28", "_this$responder29", "alt", "_this$delegate27", "meta", "_this$delegate28", "_file$type", "which", "charCode", "hasPasteboardFlavor", "hasReadableDynamicData", "isExternalHTMLPaste", "isExternalRichTextPaste", "inputController", "isSignificant", "_this$responder5", "_this$responder4", "canApplyToDocument", "_this$responder6", "_this$responder7", "_this$responder8", "_this$data$start", "_this$data$end", "Level2InputController", "scheduledRender", "composing", "reparse", "scheduleRender", "_this$afterRender", "cancelAnimationFrame", "afterRender", "toggleAttributeIfSupported", "inputControllerWillPerformFormatting", "activateAttributeIfSupported", "getTargetDOMRange", "minLength", "_this$event$getTarget", "_this$event", "targetRanges", "getTargetRanges", "staticRangeToRange", "withEvent", "command", "keyboardCommandFromKeyEvent", "shiftKey", "_event$clipboardData", "pasteEventHasFilesOnly", "pasteEventHasPlainTextOnly", "inputTypes", "immmediateRender", "inputEvent", "dragging", "pointFromEvent", "dragEventHasFiles", "ArrowLeft", "ArrowRight", "Backspace", "Tab", "deleteByComposition", "deleteByCut", "deleteByDrag", "deleteByDragRange", "deleteCompositionText", "deleteContent", "deleteContentBackward", "deleteContentForward", "deleteEntireSoftLine", "deleteHardLineBackward", "deleteHardLineForward", "deleteSoftLineBackward", "deleteSoftLineForward", "deleteWordBackward", "deleteWordForward", "formatBackColor", "formatBold", "formatFontColor", "formatFontName", "formatIndent", "formatItalic", "formatJustifyCenter", "formatJustifyFull", "formatJustifyLeft", "formatJustifyRight", "formatOutdent", "formatRemove", "_this$responder30", "formatSetBlockTextDirection", "formatSetInlineTextDirection", "formatStrikeThrough", "formatSubscript", "formatSuperscript", "formatUnderline", "historyRedo", "inputControllerWillPerformRedo", "historyUndo", "inputControllerWillPerformUndo", "insertCompositionText", "insertFromComposition", "insertFromDrop", "_this$responder31", "insertFromPaste", "_this$responder32", "_this$responder33", "processableFilePaste", "_this$responder34", "_this$responder35", "insertFromYank", "insertLink", "insertOrderedList", "insertParagraph", "_this$responder36", "insertReplacementText", "replacement", "_this$event$dataTrans", "insertTranspose", "insertUnorderedList", "staticRange", "_event$dataTransfer$f", "attributeButtonSelector", "actionButtonSelector", "toolbarButtonSelector", "dialogSelector", "activeDialogSelector", "dialogButtonSelector", "dialogInputSelector", "getInputForDialog", "getAttributeName", "getActionName", "ToolbarController", "didClickAttributeButton", "didClickDialogButton", "didKeyDownDialogInput", "actions", "resetDialogInputs", "toolbarDidClickButton", "actionName", "getDialog", "toggleDialog", "toolbarDidInvokeAction", "toolbarDidToggleAttribute", "refreshAttributeButtons", "dialogElement", "dialog", "hideDialog", "updateActions", "refreshActionButtons", "eachActionButton", "disabled", "updateAttributes", "eachAttributeButton", "dialogIsVisible", "applyKeyboardCommand", "keyString", "button", "buttonKeys", "dialogName", "showDialog", "toolbarWillShowDialog", "disabledInput", "toolbarDidShowDialog", "willValidate", "setCustomValidity", "checkValidity", "isSafeAttribute", "toolbarDidUpdateAttribute", "isValidAttribute", "toolbarDidRemoveAttribute", "toolbarDidHideDialog", "EditorController", "editorElement", "compositionController", "toolbarController", "toolbarElement", "editor", "notifyEditorElement", "handlingInput", "updateCurrentActions", "pasting", "pastedRange", "attachmentLocationRange", "loadingSnapshot", "isFocused", "requestedLocationRange", "compositionRevisionWhenLocationRangeRequested", "renderedCompositionRevision", "runEditorFilters", "isFocusedInvisibly", "requestedRender", "recordTypingUndoEntry", "recordFormattingUndoEntry", "locationRangeBeforeDrag", "invokingElement", "invokeAction", "selectionFrozen", "canInvokeAction", "actionIsExternal", "_this$actions$actionN", "_this$actions$actionN2", "getCurrentActions", "currentActions", "snapshotsAreEqual", "updateInputElement", "serializer", "setFormValue", "message", "documentChangedSinceLastRender", "notify", "getUndoContext", "getLocationContext", "getTimeContext", "Date", "getTime", "_this$editorElement$o", "ownerDocument", "TrixToolbarElement", "connectedCallback", "makeEditable", "configureContentEditable", "disableObjectResizing", "setDefaultParagraphSeparator", "_document$queryComman", "_document", "queryCommandSupported", "execCommand", "_document$queryComman2", "_document2", "cursorTargetStyles", "_internals", "WeakMap", "_validate", "WeakSet", "ElementInternalsDelegate", "_classPrivateFieldInitSpec", "writable", "_classPrivateFieldSet", "attachInternals", "_classPrivateMethodGet", "_validate2", "disconnectedCallback", "labels", "_classPrivateFieldGet", "_this$element$inputEl", "inputElement", "toggleAttribute", "required", "validity", "validationMessage", "reportValidity", "customValidationMessage", "valueMissing", "customError", "setValidity", "_focusHandler", "_resetBubbled", "_clickBubbled", "LegacyDelegate", "contains", "label", "texts", "_classPrivateFieldGet2", "console", "warn", "_delegate", "TrixEditorElement", "formAssociated", "localName", "_this$ownerDocument", "toolbarId", "internalToolbar", "_this$inputElement", "_this$ownerDocument2", "inputId", "nextElementSibling", "_this$editorControlle", "editorController", "_this$inputElement2", "_this$inputElement3", "defaultValue", "_this$editor", "attributeChangedCallback", "newValue", "isConnected", "reconnect", "_this$editorControlle2", "removeInternalToolbar", "_this$internalToolbar", "formDisabledCallback", "formResetCallback", "Trix", "VERSION", "version", "core", "models", "controllers", "observers", "customElements", "define"]
}
